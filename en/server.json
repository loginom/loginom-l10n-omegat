{
  "Common/1Cv8/1Cv8Query": {
    "ErrEofArrived": "Data set end reached",
    "ErrExecuteQuery": "Error executing 1C query",
    "ErrPrepareFields": "Error preparing 1C query fields",
    "ErrPrepareQuery": "Error preparing 1C query",
    "ErrQueryNotActive": "Query is not active",
    "ErrUnloadResults": "Error loading 1C query results"
  },
  "Common/1Cv8/1Cv8Session": {
    "ErrComConnectorConnect": "Error executing 1C ComConnector.Connect"
  },
  "Common/1Cv8/1Cv8SessionManager": {
    "ErrEmptyConnectionString": "Empty connection string"
  },
  "Common/CalcFunctions/CalcFunctions": {
    "ErrCreateGuid": "System error while creating GUID",
    "ErrGuidFormat": "Incorrect GUID format: %s ([\"N\", \"D\", \"B\", \"P\"] supported)",
    "ErrIntervalFormat": "Incorrect interval type: %s ([\"Year\", \"Quarter\", \"Month\", \"Week\", \"Day\", \"Hour\", \"Minute\", \"Second\"] supported)",
    "NumberOfIntervalsMustBePositive": "The number of intervals must be positive"
  },
  "Common/CalcFunctions/FuncDesc": {
    "ErrFuncDescNotFound": "Description of \"%s\" function not found"
  },
  "Common/CalcFunctions/FunctionCollection": {
    "ErrDuplicateFunction": "%s named function has already been registered",
    "ErrEvenArgs": "%s function can accept only even number of arguments",
    "ErrInvalidFunctionName": "Invalid %s function name",
    "ErrNoFunc": "No reference to function",
    "ErrOddArgs": "%s function can accept only odd number of arguments",
    "ErrTooFewArgs": "Few arguments supplied to %s function (%d whereas %d is minimum number)",
    "ErrTooManyArgs": "Many arguments supplied to %s function (%d whereas %d is maximum number)"
  },
  "Common/CodeExec/CodeAPI": {
    "ArgColumn": "Column Index or name",
    "ArgColumnIndex": "Column index",
    "ArgColumnInfo": "Column name or definition",
    "ArgColumnInfos": "Column definitions",
    "ArgRow": "Row index",
    "ArgValue": "Value",
    "Column": "Column",
    "ColumnCount": "Column count",
    "ColumnGet": "Get column cell value",
    "ColumnIsNull": "Check if the value is set in the column cell",
    "Columns": "Columns",
    "ColumnSet": "Set value to the column cell",
    "Count": "Count",
    "DataKind": "Data kind",
    "DataSource": "Data source",
    "DataType": "Data type",
    "DefaultUsageType": "Default usage type",
    "DisplayName": "Caption",
    "DocDataModule": "Data access module",
    "Index": "Index",
    "InputColumn": "Input column",
    "InputTable": "Input data source",
    "InputTables": "Array of input data sources",
    "InputVariables": "Input variables",
    "Items": "Items",
    "Name": "Name",
    "OutputColumn": "Output column",
    "OutputTable": "Output table",
    "RowCount": "Row count",
    "TableAddColumn": "Add Column",
    "TableAppend": "Add row",
    "TableAssignColumns": "Create columns by definitions",
    "TableClearColumns": "Delete all columns",
    "TableDeleteColumn": "Delete column",
    "TableGet": "Get table cell value",
    "TableGetColumn": "Get column",
    "TableInsertColumn": "Paste column",
    "TableIsNull": "Check if the value is set in the table cell",
    "TableSet": "Set value to the added row cell",
    "UsageType": "Usage type",
    "Value": "Value",
    "Variable": "Variable",
    "VariableItems": "Collection of variables",
    "Variables": "Variables"
  },
  "Common/CodeExec/CodeAPIDataSetExceptions": {
    "ErrColOutOfRange": "Column number %d is out of [%d; %d] range",
    "ErrDataSourceActive": "Data set is not in the closed state",
    "ErrDataSourceClosed": "Data set is not in the opened state",
    "ErrDataSourceNotEditing": "Data set is not in the edited state",
    "ErrRowOutOfRange": "Row number %d is out of [%d; %d] range"
  },
  "Common/CodeExec/CodeAPIDataSetProxies": {
    "ErrInvalidDataSetColumnIndex": "Index %d of the output table column is out of range, column count %d",
    "ErrInvalidDataSetColumnName": "No \"%s\" column in the output table",
    "ErrInvalidDataSourceColumnIndex": "Index %d of the input table column #%d is out of range, column count %d",
    "ErrInvalidDataSourceColumnName": "No \"%s\" column in input table #%d"
  },
  "Common/CodeExec/CodeAPIPreviewDataSet": {
    "ErrInvalidDataSetColumnName": "No \"%s\" column in the output table"
  },
  "Common/CodeExec/CodePreview": {
    "PreviewProcess": "Data preview",
    "WarnPreviewRunning": "Preview already running"
  },
  "Common/HTTP/CachedHttpStream_Synapse": {
    "ErrCodePageNotSupported": "\"%s\" codepage not supported",
    "ErrHttpOutputStreamRequired": "Failed to create %s class instance, no response after HTTP request",
    "ErrHttpResponseWriteDisallowed": "Writing to HTTP response stream disallowed",
    "ErrInconsistentContentLength": "Actual received data size %d inconsistent with Content-Length %d header value",
    "ErrReadStreamBufferLength": "The provided buffer size %d is too small to read %d bytes"
  },
  "Common/HTTP/CachedHttpStream_Win": {
    "ErrHttpResponseExRequired": "Failed to create %s class instance, HTTP client response must support IHTTPResponseEx interface",
    "ErrHttpResponseWriteDisallowed": "Writing to HTTP response stream disallowed",
    "ErrInconsistentContentLength": "Actual received data size %d inconsistent with Content-Length %d header value",
    "ErrReadStreamBufferLength": "The provided buffer size %d is too small to read %d bytes"
  },
  "Common/HTTP/HTTPContext_Synapse": {
    "ErrUnsupportedAuthModeCert": "Authentication using the client certificate from storage not supported"
  },
  "Common/HTTP/HTTPNetRequest": {
    "ErrHTTPNetRequest": "Request to \"%s\" URL failed"
  },
  "Common/HTTP/SynapseHTTPSend": {
    "ErrHTTPResult": "Error executing HTTP request. Status code %d: %s",
    "ErrHTTPSocket": "Error executing HTTP request. TCP\/IP Socket error %d: %s",
    "ErrMaximumRedirectReached": "Maximum number of redirects exceeded: %s",
    "ErrStreamIsDirectReadOnly": "Random access to stream data is not possible",
    "ErrStreamSizeUnspecified": "Data stream size not defined"
  },
  "Common/HTTP/UserAgent": {
    "APP_NAME": "Loginom"
  },
  "Common/HTTPClient/CertList": {
    "ErrCertListImplementationNotRegistered": "Certificate list implementation not registered"
  },
  "Common/HTTPClient/CertList_Win": {
    "AddressBook": "Other People",
    "AuthRoot": "Third-Party Root Certification Authorities",
    "CA": "Intermediate Certification Authorities",
    "Disallowed": "Untrusted Certificates",
    "My": "Personal",
    "Root": "Trusted Root Certification Authorities",
    "SmartCardRoot": "Smart Card Trusted Roots",
    "Trust": "Enterprise Trust",
    "TrustedDevices": "Trusted Devices",
    "TrustedPeople": "Trusted People",
    "TrustedPublisher": "Trusted Publishers",
    "UserDS": "Active Directory User Object"
  },
  "Common/HTTPClient/HTTPClientBase": {
    "AdditionalDataSet": "Additional data",
    "ErrorCodeColumn": "Error Code",
    "ErrorDescColumn": "Error Description",
    "RequestDataSource": "Request data source"
  },
  "Common/HTTPClient/HTTPClientTypes": {
    "ErrHttpVerbNotSupported": "\"%s\" HTTP method not currently supported"
  },
  "Common/HTTPClient/HTTPHeaders": {
    "ErrInvalidHeaderName": "Invalid %s header name"
  },
  "Common/HTTPClient/WSDLClientAuth": {
    "ErrFileNoAccess": "\"%s\" file unavailable",
    "ErrFileNotFound": "\"%s\" file not found",
    "ErrGetFileStorage": "No reference to file storage"
  },
  "Common/JavaScript/JavaScriptModuleLoader": {
    "ErrModuleFileTooBig": "%s module file cannot be loaded: the permissible file size limit is exceeded (%d > %d bytes)",
    "ErrModuleNotExists": "File of \"%s\" module not found",
    "ErrModulePath": "Failed to resolve \"%s\" module name",
    "ErrModuleSourceRead": "Error reading \"%s\" module file",
    "ErrModuleSpecifierEmpty": "No module name specified"
  },
  "Common/WSDL/Processor/MIMECommon": {
    "ErrInvalidContentType": "Invalid Content-Type value format: %s"
  },
  "Common/WSDL/Processor/MIMEExportImpl": {
    "ErrCantExportPart": "Failed to export MIME %s content as an alternative has already been exported",
    "ErrExportConflictingPart": "Attempt to export \"%s\" part of WSDL message conflicting with the previously exported data",
    "ErrValueIntExportImpossible": "Failed to export value %d to the message associated with \"%s\" schema element: %s"
  },
  "Common/WSDL/Processor/MIMEImportImpl": {
    "ErrCodePageNotSupported": "\"%s\" codepage not supported",
    "ErrInvalidUTF16Sequence": "Invalid UTF16 sequence: %s",
    "ErrInvalidUTF8Sequence": "Invalid UTF8 sequence: %s",
    "ErrUnbalancedPop": "Unbalanced Pop operation"
  },
  "Common/WSDL/Processor/WSDLHttpMessageEncoder": {
    "ErrColumnIndexOutOfRange": "HTTP messages encoder is configured to export the column with index #%d, however the data source contains only %d values",
    "ErrDuplicateSearchPattern": "\"%s\" search string occurring more than once",
    "ErrEncoderNotInitialized": "HTTP messages encoder not initialized",
    "ErrInfNaNNotAllowed": "Infinities and NaN are not valid floating point numbers to be passed in GET\/POST requests URL Encoded\/URL Replacement",
    "ErrNoInputMessage": "\"%s\" operation does not contain the incoming message description",
    "ErrNonHttpBinding": "\"%s\" is not HTTP binding",
    "ErrNonHttpMessage": "\"%s\" message of \"%s\" operation is not HTTP message",
    "ErrNonHttpOperation": "\"%s\" is not HTTP operation",
    "ErrNonHttpPort": "\"%s\" is not HTTP port",
    "ErrNoPartElement": "\"%s\" message part has no schema element mapping",
    "ErrURLReplacementError": "Errors occurred while analysing \"%s\" URL replacement template",
    "ErrValueIntExportImpossible": "Failed to convert integer %d to \"%s\" type: %s"
  },
  "Common/WSDL/Processor/WSDLRequestProcessor": {
    "ErrExportWSDLHttpRequestData": "Error occurred while HTTP request generating from row #%d of the input data set: %s",
    "ErrHTTPHeaderRedefined": "\"%s: %s\" header already defined in the request",
    "ErrHTTPHeaders": "Error while generating HTTP headers",
    "ErrParseURLUnrecognizedContentType": "Error executing request to URL '%s': server response was not processed because Content-Type: %s had not been registered",
    "ErrXMLExportNoContext": "No export context specified",
    "HTTPClientInitFailed": "Error creating HTTP client",
    "HTTPClientRetrieveDataFailed": "Error retrieving data by HTTP client: %s"
  },
  "Common/WSDL/SOAP": {
    "ErrCantSetupSOAPEnvelopeMsg": "Failed to create SOAP envelope based on %s message",
    "ErrCantSetupSOAPEnvelopeOp": "Failed to create SOAP envelope for %s operation",
    "ErrMessageHasNoBody": "Message has no body",
    "ErrMessageNotConnectedToOperation": "Message not bound to any specific operation was sent to SOAP envelope",
    "ErrNonSOAPMessage": "Non SOAP message",
    "ErrSoapBodyStyleNotRPC": "SOAP body in RPC operation does not support RPC style",
    "ErrSOAPEncodingNotSupported": "\"%s\" encoding style for %s SOAP version not supported",
    "WarnBOMNotRecommended": "BOM (Byte order mark) addition to SOAP envelope top may cause failure of some servers (for example, Apache Xerces or Java services) to process the request"
  },
  "Common/WSDL/WSDL": {
    "ErrUnrecognizedSOAPNamespaceURI": "\"%s\" SOAP namespace not recognized"
  },
  "Common/WSDL/WSDL_LIBXML2": {
    "ErrBindingMustSpecifyExactlyOneExtensionType": "\"%s\" binding must specify exactly one extension type",
    "ErrBindingMustSpecifyExtension": "\"%s\" port binding extension not specified or not supported",
    "ErrBindingNotFound": "\"%s\" binding for \"%s\" endpoint (port) not found",
    "ErrBindingOperationExtensionCollision": "Types of \"%s\" binding extensions and \"%s\" operations do not match",
    "ErrCantDefineTransmissionPrimitive": "Failed to define data exchange primitive for %s operation, %s port type",
    "ErrFaultMustHaveExactlyOnePart": "Error defining %s operation, %s port type: fault message must contain exactly one part",
    "ErrHTTPOperationExtensionMissing": "No required extension element \"<http:operation\/>\" in \"%s\" binding HTTP declaration for \"%s\" operation ",
    "ErrHttpPartReferencesComplexElement": "\"%s\" part included into \"%s\" message of \"%s\" type (\"%s\" operation) refers to %s{%s} XSD schema element related to the complex type",
    "ErrHttpPartReferencesComplexType": "\"%s\" part included into \"%s\" message of \"%s\" type (\"%s\" operation) refers to the complex type of %s{%s} XSD schema",
    "ErrInputMimeTypeContainsWildcard": "The incoming service message content must relate to the specific MIME type (actually - %s)",
    "ErrInvalidMimeType": "Invalid MIME type: %s",
    "ErrItemTypeNotFound": "\"%s\" array item type not found in schema",
    "ErrMessageDefHasNoSuchPart": "\"%s\" message definition does not contain the part with\"%s\" name",
    "ErrMessageDefinitionNotFound": "\"%s\" message definition not found in the document",
    "ErrMessageDefNotFound": "\"%s\" message referenced by \"%s\" operation of \"%s\" binding not found",
    "ErrMessageMustSpecifyExtension": "\"%s\" message extension (\"%s\" operation of \"%s\" binding) not specified or not supported",
    "ErrMessageSoapVersionConflict": "SOAP version of %s message conflicts with %s operation version",
    "ErrMimeContentMessageDefHasMultipleOrNoParts": "\"<%s\/>\" element without \"part\" attribute refers to \"%s\" message definition, which contains more than one part or does not contain any",
    "ErrMimeContentReferencesComplexElement": "mime:content extension element in \"%s\" message (\"%s\" operation) is associated with \"%s\" part that refers to %s{%s} XSD schema element related to the complex type",
    "ErrMimeContentReferencesComplexType": "mime:content extension element in \"%s\" message (\"%s\" operation) is associated with \"%s\" part that refers to the complex type of %s{%s} XSD schema",
    "ErrNoDefinitionsElement": "<definitions\/> element of WSDL description is missing or does not belong to the WSDL namespace",
    "ErrNotArrayType": "\"%s\" is not an array type description",
    "ErrOpDefNotFoundInPortType": "\"%s\" operation referenced by \"%s\" binding not found in \"%s\" port type definition",
    "ErrOperationMustSpecifyExtension": "\"%s\" operation extension of \"%s\" port binding not specified or not supported",
    "ErrPartContentsNotDefined": "\"%s\" part does not reference schema definitions",
    "ErrPartIsReferencedByElement": "\"%s\" part defined by element and not by XSD schema type",
    "ErrPartIsReferencedByType": "\"%s\" part defined by type and not by XSD schema element",
    "ErrPortBindingExtensionCollision": "\"%s\" port and \"%s\" binding extensions do not match",
    "ErrPortMustSpecifyExtension": "\"%s\" endpoint (port) extension not specified or not supported",
    "ErrPortTypeNotFound": "\"%s\" port type for \"%s\" binding not found",
    "ErrSchemaDoesNotContainPartElement": "\"%s\" part references \"%s\"{\"%s\"} element not found in XSD schema",
    "ErrSchemaDoesNotContainPartType": "\"%s\" part references \"%s\"{\"%s\"} type not found in XSD schema",
    "ErrSeveralElementsNotAllowed": "More than one <%s\/> element not allowed in WSDL description",
    "ErrSoapActionRequiredForHTTP": "It is required to specify \"<soap:operation\/>\" extension element with soapAction attribute for SOAP HTTP transport operations",
    "ErrSoapBodyInNonSoapMessage": "\"%s\" message referenced by \"%s\" operation of \"%s\" binding is not SOAP message, but it contains SOAP body",
    "ErrSoapDocumentEncoded": "\"Document\" style SOAP messages with \"encoded\" usage type are not supported",
    "ErrSoapDocumentLiteralPartRefersToType": "Unsupported combination of parameters: \"%s\" part referenced as XSD schema type is assigned to document style SOAP message with literal usage type",
    "ErrSoapMessageMultipleExtensions": "For \"%s\" SOAP message referenced by \"%s\" operation of \"%s\" binding, more than one extension type is specified",
    "ErrSoapOperationVersionConflict": "SOAP version of %s operation conflicts with %s binding version",
    "ErrSoapRPCPartRefersToElement": "Unsupported combination of parameters: \"%s\" part referenced as XSD schema element is assigned to RPC style SOAP message",
    "ErrSoapTransportNotSupported": "SOAP transports except for HTTP are currently not supported",
    "ErrUrlReplacementNotAllowed": "Error defining input message of \"%s\" operation of \"%s\" binding: message of \"%s\" type is not allowed for \"%s\" request method",
    "ErrWsdlExtractedSchemaParseError": "XML error while parsing the schema included into WSDL file",
    "ErrWsdlImportNoAccess": "No access to the imported %s document"
  },
  "Common/WSDL/WSDL_MSXML": {
    "ErrBindingMustSpecifyExactlyOneExtensionType": "\"%s\" binding must specify exactly one extension type",
    "ErrBindingMustSpecifyExtension": "\"%s\" port binding extension not specified or not supported",
    "ErrBindingNotFound": "\"%s\" binding for \"%s\" endpoint (port) not found",
    "ErrBindingOperationExtensionCollision": "Types of \"%s\" binding extensions and \"%s\" operations do not match",
    "ErrCantDefineTransmissionPrimitive": "Failed to define data exchange primitive for %s operation, %s port type",
    "ErrFaultMustHaveExactlyOnePart": "Error defining %s operation, %s port type: fault message must contain exactly one part",
    "ErrHTTPOperationExtensionMissing": "No required extension element \"<http:operation\/>\" in \"%s\" binding HTTP declaration for \"%s\" operation ",
    "ErrHttpPartReferencesComplexElement": "\"%s\" part included into \"%s\" message of \"%s\" type (\"%s\" operation) refers to %s{%s} XSD schema element related to the complex type",
    "ErrHttpPartReferencesComplexType": "\"%s\" part included into \"%s\" message of \"%s\" type (\"%s\" operation) refers to the complex type of %s{%s} XSD schema",
    "ErrInputMimeTypeContainsWildcard": "The incoming service message content must relate to the specific MIME type (actually - %s)",
    "ErrInvalidMimeType": "Invalid MIME type: %s",
    "ErrItemTypeNotFound": "\"%s\" array item type not found in schema",
    "ErrMessageDefHasNoSuchPart": "\"%s\" message definition does not contain the part with\"%s\" name",
    "ErrMessageDefinitionNotFound": "\"%s\" message definition not found in the document",
    "ErrMessageDefNotFound": "\"%s\" message referenced by \"%s\" operation of \"%s\" binding not found",
    "ErrMessageMustSpecifyExtension": "\"%s\" message extension (\"%s\" operation of \"%s\" binding) not specified or not supported",
    "ErrMessageSoapVersionConflict": "SOAP version of %s message conflicts with %s operation version",
    "ErrMimeContentMessageDefHasMultipleOrNoParts": "\"<%s\/>\" element without \"part\" attribute refers to \"%s\" message definition, which contains more than one part or does not contain any",
    "ErrMimeContentReferencesComplexElement": "mime:content extension element in \"%s\" message (\"%s\" operation) is associated with \"%s\" part that refers to %s{%s} XSD schema element related to the complex type",
    "ErrMimeContentReferencesComplexType": "mime:content extension element in \"%s\" message (\"%s\" operation) is associated with \"%s\" part that refers to the complex type of %s{%s} XSD schema",
    "ErrNoDefinitionsElement": "<definitions\/> element of WSDL description is missing or does not belong to the WSDL namespace",
    "ErrNotArrayType": "\"%s\" is not an array type description",
    "ErrOpDefNotFoundInPortType": "\"%s\" operation referenced by \"%s\" binding not found in \"%s\" port type definition",
    "ErrOperationMustSpecifyExtension": "\"%s\" operation extension of \"%s\" port binding not specified or not supported",
    "ErrPartContentsNotDefined": "\"%s\" part does not reference schema definitions",
    "ErrPartIsReferencedByElement": "\"%s\" part defined by element and not by XSD schema type",
    "ErrPartIsReferencedByType": "\"%s\" part defined by type and not by XSD schema element",
    "ErrPortBindingExtensionCollision": "\"%s\" port and \"%s\" binding extensions do not match",
    "ErrPortMustSpecifyExtension": "\"%s\" endpoint (port) extension not specified or not supported",
    "ErrPortTypeNotFound": "\"%s\" port type for \"%s\" binding not found",
    "ErrSchemaDoesNotContainPartElement": "\"%s\" part references \"%s\"{\"%s\"} element not found in XSD schema",
    "ErrSchemaDoesNotContainPartType": "\"%s\" part references \"%s\"{\"%s\"} type not found in XSD schema",
    "ErrSeveralElementsNotAllowed": "More than one <%s\/> element not allowed in WSDL description",
    "ErrSoapActionRequiredForHTTP": "It is required to specify \"<soap:operation\/>\" extension element with soapAction attribute for SOAP HTTP transport operations",
    "ErrSoapBodyInNonSoapMessage": "\"%s\" message referenced by \"%s\" operation of \"%s\" binding is not SOAP message, but it contains SOAP body",
    "ErrSoapDocumentEncoded": "\"Document\" style SOAP messages with \"encoded\" usage type are not supported",
    "ErrSoapDocumentLiteralPartRefersToType": "Unsupported combination of parameters: \"%s\" part referenced as XSD schema type is assigned to document style SOAP message with literal usage type",
    "ErrSoapMessageMultipleExtensions": "For \"%s\" SOAP message referenced by \"%s\" operation of \"%s\" binding, more than one extension type is specified",
    "ErrSoapOperationVersionConflict": "SOAP version of %s operation conflicts with %s binding version",
    "ErrSoapRPCPartRefersToElement": "Unsupported combination of parameters: \"%s\" part referenced as XSD schema element is assigned to RPC style SOAP message",
    "ErrSoapTransportNotSupported": "SOAP transports except for HTTP are currently not supported",
    "ErrUrlReplacementNotAllowed": "Error defining input message of \"%s\" operation of \"%s\" binding: message of \"%s\" type is not allowed for \"%s\" request method",
    "ErrWsdlExtractedSchemaParseError": "XML error while parsing the schema included into WSDL file (row %d, position %d):\nError code: %d\nReason: %s",
    "ErrWsdlImportNoAccess": "No access to the imported %s document"
  },
  "Common/XML/Processor/XMLExportImpl": {
    "ColumnName": "Data column name",
    "ErrColumnMappedToNonExistentNode": "\"%s\" input data set column has been assigned for nonexistent \"%s\" XSD schema node",
    "ErrNodeAndColumnDontExist": "The mapping settings of the input data set and XSD schema refer to nonexistent \"%s\" node of XSD schema and \"%s\" column of the input set",
    "ErrNodeCantMapColumnType": "\"%s\" column of the input data set has \"%s\" data type that cannot be converted to \"%s\" type of \"%s\" node of XSD schema",
    "ErrNodeMappedToNonExistentColumn": "\"%s\" node of XSD schema has been assigned for nonexistent \"%s\" input data set column",
    "ErrNodeMustBeMapped": "For %s schema node with required value, no association with the input data set field has been assigned",
    "ErrOneOfSubNodesMustBeSelected": "%s schema node must have at least one subnode selected for export",
    "ErrValueIntExportImpossible": "Failed to export value %d to XML document node with \"%s\" type: %s",
    "ErrXMLExportContextNoDataSource": "Attempt to create XML export context not specifying data source",
    "ErrXMLExportRootElementAttributeRepeats": "Failed to re-add %s attribute to %s XML document root element",
    "ErrXMLExportRootElementSubElementRepeats": "Failed to re-add %s element to root element of %s XML document",
    "ErrXMLExportSchemaDoesNotAllowElement": "XSD schema does not allow to export %s element to current XML document",
    "NodePath": "Tree node path"
  },
  "Common/XML/Processor/XMLImportImpl": {
    "ErrCDATAInNonStringType": "%s element from %s namespace cannot contain <CDATA\/> section because it is of '%s' type",
    "ErrMaxOccExceeded": "Maximum number of \"%s\" element occurrences exceeded (%d allowed)",
    "ErrNoParentElement": "No parent element in \"%s\" element",
    "ErrSiblingAttributionFailed": "It is not possible to define \"%1:s{%2:s}\" sibling corresponding the schema for \"%0:s\" element",
    "ErrSubElementAttributionFailed": "It is not possible to define \"%1:s{%2:s}\" subelement corresponding the schema for \"%0:s\" element",
    "ErrXMLParse": "Error parsing XML:\n  Line: %d\n  Column: %d\n  Error code: %d\n  Message:\n  %s",
    "ErrXMLValidate": "XML validation error:\n  Line: %d\n  Column: %d\n  Error code: %d\n  Message:\n  %s"
  },
  "Common/XML/Processor/XMLRequestProcessor": {
    "ErrXMLExportNoContext": "No export context specified",
    "ErrXMLExportNoSinks": "No elements were specified in XML document for export",
    "ErrXMLExportRow": "Error exporting row #%d of the input data set: %s"
  },
  "Common/XML/Processor/XMLRequests": {
    "ErrContextStubCouplerNotAssigned": "No context coupling procedure and export recipient specified",
    "ErrExportContextNotSet": "No export context specified",
    "ErrExportStubNotSet": "Export destination not specified"
  },
  "Common/XML/Processor/XMLSchemaTree": {
    "Enclosed_All": "All #",
    "Enclosed_Choice": "Choice #",
    "Enclosed_Sequence": "Sequence #",
    "ErrAttributeNoRequiredValue": "No required value for %s attribute",
    "ErrElementNoRequiredValue": "No required value for %s element",
    "ErrEmptyNodeName": "Tree node name cannot be empty",
    "ErrInvalidPath": "Invalid node path: %s",
    "ErrNodeLimitExceeded": "Maximum allowable number of (%d) tree nodes exceeded",
    "ErrNodeSelectionRegisteringAlreadyOn": "Node selection registering already on",
    "ErrNodeSelectionRegisteringIsOff": "Node selection registering off",
    "ErrNoneValueAttempt": "Attempt to set or get a value for the node with dtNone data type",
    "ErrParentPathOnTreeRoot": "Attempt to get the parent node path for the tree root node",
    "ErrRootElementPathOnTreeRoot": "Attempt to get the schema root element path for the tree root node",
    "ErrSetAsStringDatetimeAttempt": "Attempt to set the SetAsString based value for the \"Date\/time\" data type node",
    "ErrSetAsStringVariantAttempt": "Attempt to set the SetAsString based value for the \"Variable\" data type node",
    "ErrSetDateTimeAsStringTypeMismatch": "Failed to set value via the SetDateTimeAsString function for the node with non \"Date\/time\" data type",
    "ErrSetVariantAsStringTypeMismatch": "Failed to set value via the SetDateTimeAsString function for the node with non \"Variant\" data type",
    "ErrTreeSelectionUpdate": "EndUpdateSelection method called without BeginUpdateSelection method",
    "ErrValueConversionImpossible": "Failed to convert \"%s\" string to \"%s\" value",
    "ErrValueIntConversionImpossible": "Failed to convert \"%s\" string to \"%s\" number: %s",
    "Group_Idx": "(%s) index"
  },
  "Common/XML/SAX/XMLSAX": {
    "ErrParserCantOpenFile": "Failed to open file",
    "ErrParserCantURLResponse": "Failed to get response from URL",
    "ErrParserIsActive": "Failed to change parser properties during parsing",
    "ErrSAXParserImplementationNotRegistered": "SAX parser implementation for %s interface not registered"
  },
  "Common/XML/SAX/XMLSAX_LIBXML2": {
    "ErrParseFile": "Error in row %d, position %d while parsing '%s' file:\n  %s",
    "ErrParseFileUnhandledException": "Unhandled exception parsing '%s' file:\n%s",
    "ErrParseStream": "Error parsing stream in row %d, position %d:\n  %s",
    "ErrParseStreamUnhandledException": "Unhandled exception parsing stream:\n  %s",
    "ErrParseStreamUnrecognizedEncoding": "Stream parsing error: unrecognized %s encoding",
    "ErrParseStreamUnrecognizedEncodingDefault": "Stream parsing error: unrecognized encoding",
    "ErrParseUnknownEncoding": "Unknown %s encoding set",
    "ErrParseURL": "Error in row %d, position %d when executing request to URL '%s':\n  %s",
    "ErrParseURLNoXML": "Error in row %d, position %d when executing request to URL '%s': server response is not XML file",
    "ErrParseURLUnhandledException": "Unhandled exception parsing request to URL '%s':\n  %s",
    "ErrSaxParserNotCreated": "Context of SAX parser libxml2 not created",
    "UnbalancedPop": "Unbalanced extraction operation"
  },
  "Common/XML/SAX/XMLSAX_MSXML": {
    "ErrParseFile": "Error in row %d, position %d while parsing '%s' file:\n  %s",
    "ErrParseFileUnhandledException": "Unhandled exception parsing '%s' file:\n%s",
    "ErrParseStream": "Error parsing stream in row %d, position %d:\n  %s",
    "ErrParseStreamNoXML": "Error parsing stream in row %d, position %d: the source is not XML file or has incorrect syntax",
    "ErrParseStreamUnhandledException": "Unhandled exception parsing stream:\n  %s",
    "ErrParseStreamUnrecognizedEncoding": "Stream parsing error: unrecognized %s encoding",
    "ErrParseStreamUnrecognizedEncodingDefault": "Stream parsing error: unrecognized encoding",
    "ErrParseURL": "Error in row %d, position %d when executing request to URL '%s':\n  %s",
    "ErrParseURLNoXML": "Error in row %d, position %d when executing request to URL '%s': server response is not XML file",
    "ErrParseURLUnhandledException": "Unhandled exception parsing request to URL '%s':\n  %s",
    "ErrSaxDocumentHasNoRootElements": "No root element in the document",
    "ErrSaxParserFeatureInvalidArg": "Invalid argument type when setting '%s' feature of MSXML SAX parser",
    "ErrSaxParserFeatureUnknownError": "Unknown error setting '%s' feature of MSXML SAX parser",
    "ErrSaxParserHandlerInvalidArg": "Invalid argument type when setting handler of MSXML SAX parser: %s",
    "ErrSaxParserHandlerUnknownError": "Unknown error when setting handler of MSXML SAX parser: %s",
    "ErrSaxParserNotCreated": "MSXML SAX parser COM object not created",
    "ErrSaxParserPropertyInvalidArg": "Invalid argument type when setting '%s' property of MSXML SAX parser",
    "ErrSaxParserPropertyUnknownError": "Unknown error setting '%s' property of MSXML SAX parser",
    "ErrSaxParserPutFeature": "Error when setting '%s' option of MSXML SAX parser",
    "ErrSaxParserPutHandler": "Error when setting handler of MSXML SAX parser: %s",
    "ErrSaxParserPutProperty": "Error setting '%s' property of MSXML SAX parser",
    "UnbalancedPop": "Unbalanced extraction operation"
  },
  "Common/XML/XML": {
    "AppNamespacePrefix": "lgn",
    "AppNamespaceUriPrefix": "loginom.",
    "ErrGenerateNamespacePrefixOverflow": "Counter overflow during namespace prefix generation",
    "ErrStrToValueIntBadTypeRefinement": "\"%s\" type of refinement is not allowed when converting from string to integer"
  },
  "Common/XML/XML_LIBXML2": {
    "ErrElementMustHaveAttribute": "\"%s\" attribute required for \"%s\" element"
  },
  "Common/XML/XML_MSXML": {
    "ErrElementMustHaveAttribute": "\"%s\" attribute required for \"%s\" element",
    "ErrXMLParseFailure": "Error processing %s document (row %d, position %d): %s",
    "ErrXMLParseStringFailure": "Error processing XML (row %d, position %d): %s"
  },
  "Common/XML/XMLDocument": {
    "ErrAddNodeOperationNotAllowed": "The operation of node addition of '%s' type is not allowed on the node of '%s' type",
    "ErrDocumentHasNoRootElement": "No root element in XML document",
    "ErrInvalidNodeID": "Unknown node ID: %d",
    "ErrInvalidXMLNameChar": "XML \"%s\" identifier cannot contain \"%s\" character",
    "ErrInvalidXMLNameStartChar": "XML \"%s\" identifier cannot start with \"%s\" character",
    "ErrOnlyOneRootElementAllowed": "Document root element already exists",
    "ErrPITargetXMLIsReserved": "\"xml\" parser instruction name reserved",
    "ErrSetSinkWrongNodeType": "XML recipient can only be the 'document' or 'element' node type"
  },
  "Common/XML/XSD": {
    "ErrXSDNoAccess": "No access to %s document"
  },
  "Common/XML/XSD_LIBXML2": {
    "Any": "Any item",
    "ErrCantCreateXMLDOMDocument": "Error creating XML document tree",
    "ErrXSDElementExistsWithAnotherType": "%s item to be added from %s namespace already exists in the schema and has a different type",
    "ErrXSDNoAccess": "No access to %s document",
    "NotImplementedContinueParseURIFunc": "libxml2 library does not have functionality of not ASCII characters in URI",
    "WarnXSDLocationSkipped": "Loading of %s to %s document was not performed because it cannot be checked via file storage"
  },
  "Common/XML/XSD_MSXML": {
    "Any": "Any item",
    "ErrCantCreateXMLDOMDocument60": "Error creating COM object of XML document; possible reason - not installed MSXML 6.0",
    "ErrXSDElementExistsWithAnotherType": "%s item to be added from %s namespace already exists in the schema and has a different type",
    "ErrXSDIncludeNamespaceMismatch": "\"%s\" schema is trying to include \"%s\" schema, but the target namespace \"%s\" of the included schema does not match \"%s\"",
    "ErrXSDNoAccess": "No access to %s document",
    "ErrXSDNoSchemaElement": "%s document does not contain 'schema' root element 'schema'",
    "WarnXSDElementRemoved": "%s:%s element was removed from %s document because it could not be verified using the file storage"
  },
  "components/assnrules/AssnRulesEngine": {
    "AssnRulesApply": "Apply association rules model",
    "AssnRulesFPGrowth": "Search for frequent itemsets",
    "AssnRulesFPTree": "Build FP-tree",
    "AssnRulesTraceRules": "Trace rules",
    "AssnRulesTransactions": "Transactions preparation",
    "ColumnNameItemsetID": "Itemset ID",
    "ColumnNameItemsetSupport": "Support",
    "ColumnNameItemsetWidth": "Power",
    "ColumnNameRuleAntecedent": "Antecedent",
    "ColumnNameRuleConfidence": "Confidence",
    "ColumnNameRuleConsequent": "Consequence",
    "ColumnNameRuleID": "Rule ID",
    "ColumnNameRuleLift": "Lift",
    "ColumnNameRuleSupport": "Support",
    "ColumnNameTransactionID": "Transaction identifier",
    "ErrMoreThanOneItemColumn": "More than one transaction item column in the input data",
    "ErrMoreThanOneTransactionColumn": "More than one transaction identifier column in the input data",
    "ErrNConsequentMaxWrongValue": "Invalid maximum item count in the rules antecedent or consequence",
    "ErrNItemsMaxWrongValue": "Invalid maximum item count in the set",
    "ErrNoItemColumn": "No transaction item column in the input data",
    "ErrNoModel": "Model is not trained. Training of the node before its application is required",
    "ErrNonDiscreteItemColumn": "Transaction items must relate to the discrete type",
    "ErrNoTransactionColumn": "No transaction identifier column in the input data",
    "ErrWrongBaseSourceDataType": "Data type does not match the model",
    "InputDataSourceSuppl": "Supplementary data",
    "OutDataSetApply": "Apply rules",
    "OutDataSetItemsets": "Frequent sets",
    "OutDataSetRules": "Association rules"
  },
  "components/assnrules/AssnRulesVendor": {
    "VendorCaption": "Association Rules",
    "VendorDesc": "Association rules search"
  },
  "components/autocorrelation/AutoCorrelationEngine": {
    "ACFDisplayName": "ACF",
    "ErrFFTHugeSize": "The input data source size exceeds the allowable values for calculation in the frequency domain",
    "ErrOverflow": "The input data source size or lags number exceeds the allowable values",
    "LagDisplayName": "Lag",
    "MsgUsableColumnRequired": "No used columns specified",
    "PACFDisplayName": "PACF",
    "SignificantDisplayName": "Significance",
    "StdErrDisplayName": "Error"
  },
  "components/autocorrelation/AutoCorrelationVendor": {
    "VendorCaption": "Autocorrelation",
    "VendorDesc": "Calculate autocorrelation function values"
  },
  "components/binning/Binning": {
    "CalculatingBarChartsProcess": "Calculating histogram",
    "CalculatingBinsProcess": "Calculating bins",
    "DoTeachProcessFmt": "\"%s\" field processing",
    "ErrBinsInvalidFmt": "Bins for \"%s\" column are not valid for binning",
    "ErrBinsNotDefined": "Bins not defined for the specified parameters",
    "ErrCreateQuantizer": "Failed to create quantizer",
    "ErrDefineBinsFailedFmt": "Failed to define binning ranges for \"%s\" field",
    "ErrInputDataSourceNotActive": "Quantized data source is not active",
    "ErrMethodNotDefined": "The binning method is not defined for the given parameters",
    "ErrMethodNotDefinedFmt": "Binning method unspecified for \"%s\" column",
    "ErrNoColumnsForProcessing": "No columns for processing specified",
    "ErrNoMethodFmt": "No binning method available for \"%s\" column",
    "ErrNotFoundBinsClass": "No bin class found to generate the example template",
    "ErrOrderID": "Bin identifiers not ordered",
    "ErrPreviewExamplesInvalidLength": "The template number does not match the data types number",
    "ExecuteProcess": "Output data processing",
    "InputBinsDataSource": "External binning ranges",
    "TeachProcess": "Binning ranges forming"
  },
  "components/binning/BinningLabelConstructor": {
    "Inf": "+Inf",
    "InfDateTime": " ",
    "NegInf": "-Inf",
    "NegInfDateTime": " ",
    "Nothing": " "
  },
  "components/binning/BinningMethod": {
    "ErrInvalidBinFmt": "Failed to generate bins for %s field"
  },
  "components/binning/BinningMethodsImplementations": {
    "ErrBadLimits": "The lower bound cannot exceed the upper one",
    "ErrBinsCount": "Bin count must be more than 0",
    "ErrBinsCountLimitFmt": "Bin count must not exceed %d",
    "ErrBinWidthFmt": "Failed to define bin width for %s field",
    "ErrGenerateBins": "Failed to generate binning ranges",
    "ErrInfinityFmt": "Bins for %s field were not created. The field contains the \"infinity\" value",
    "ErrInvalidBinRowFmt": "Failed to generate bin for %s field from row %d",
    "ErrInvalidRangeWidthFmt": "The initial bin boundary exceeds the final boundary for %s field",
    "ErrLogBinsCountLimitFmt": ", for %s field.",
    "ErrLowerLimit": "No lower bins bound specified",
    "ErrNoDefineExternalBins": "No external bins found",
    "ErrNoDefineExternalBound": "No bounds for external bins found",
    "ErrSkoAvgFmt": "Failed to get SD\/mean for %s field",
    "ErrStatFmt": "Failed to get minimum maximum for %s field",
    "ErrTooManyBinsFmt": "Too many bins defined for %s integer field",
    "ErrUpperLimit": "No upper bins bound specified",
    "ErrVerySmallWidthFmt": "For %s integer field bin width must be >= 1",
    "ErrWrongBinsDataType": "Invalid bin data type",
    "ErrZeroBinsWidth": "Bin width must be more than 0",
    "ErrZeroBinsWidthFmt": "Bin width must be more than 0 for %s field",
    "ErrZeroDivForIntervalsFmt": "%s field with zero variance, only 1 bin will be created",
    "ErrZeroDivForSDFmt": "%s field with zero variance, only 3 bins will be created"
  },
  "components/binning/BinningMethodsImplementationTile": {
    "AlignTile": "Align tiles",
    "ErrBinsCountLimitFmt": "Tiles number must not exceed %d",
    "ErrContextNotReadyFmt": "Context not ready for %s field and %s method",
    "ErrNoMethod": "Failed to get tiled binning settings",
    "ErrNoValuesFmt": "%s field contains no data, it is impossible to generate bins",
    "ErrSumFmt": "Failed to get sum of values for %s field",
    "ErrZeroTileCount": "Bin (tile) count must be > 0",
    "NegativValueForTileSumm": "Negative values are invalid while generating bins by indicator sum",
    "SortProcessFmt": "%s field sorting",
    "WarnNoRound": "\"Round limits\" option was ignored because \"Ties\" parameter is equal to \"Assign optimal\""
  },
  "components/binning/BinningQuantizers": {
    "ErrNoBins": "No bins defined for quantizer"
  },
  "components/binning/BinningUtils": {
    "ErrInvalidTypecast": "Invalid type cast"
  },
  "components/binning/BinningValue": {
    "ErrContinuousType": "Data type does not comply with continuous values",
    "ErrNumericType": "Data type not related to the numeric values"
  },
  "components/binning/BinningVendor": {
    "OutputRanges": "Binning ranges",
    "VendorCaption": "Binning",
    "VendorDesc": "User binning"
  },
  "components/calcdata/CalcData": {
    "ErrExceededRecursiveCalls": "Maximum number of (%d) recursive calls of Data function in \"%s\" expression exceeded.\nTo solve this problem it is required to enable Caching.",
    "ErrExprIsStringType": "\"%s\" expression of string type",
    "ErrGetVarArrayUnsupported": "The arrays related to the variant type can return only intermediate expressions (\"%s\" expression, %d row)",
    "ErrReplacingInputColumnNotFound": "Input field to replace with expression \"%s\" not found",
    "ErrVarExprAmbiguity": "\"%0:s\" can be input variable or intermediate expression. To allow nonuniqueness, use \"%1:s%0:s\" to access the variable or rename \"%0:s\" expression.",
    "ExprNameNotExists": "No expression with name \"%s\" exists",
    "InputVariables": "Input variables",
    "NameNotExists": "No field, variable or expression with \"%s\" name exists",
    "PreviewProcess": "Calculations preview",
    "PreviewSourceColumnSuffix": "to",
    "VarNameNotExists": "No variable with name \"%s\" exists",
    "WarnPreviewRunning": "Preview already running"
  },
  "components/calcdata/CalcDataVendor": {
    "VendorCaption": "Calculator",
    "VendorDesc": "Create calculated fields"
  },
  "components/calcdata/CalcItem": {
    "ErrExprParse": "Error parsing \"%s\" expression",
    "ExprCalculateError": "Error calculating \"%s\" expression, row %d of the input data set"
  },
  "components/calcdata/CalcItemChakra": {
    "ErrExprParse": "Error parsing \"%s\" expression",
    "ErrExprUsesUndefinedVariable": "%1:s undefined variable used in \"%0:s\" expression",
    "ExprCalculateError": "Error calculating \"%s\" expression, row %d of the input data set"
  },
  "components/calcdata/ExprColumns": {
    "ColumnMetaDesc": "Column",
    "DefaultExprDisplayName": "Expression",
    "ItemDisplayNamePrefix": "Expression"
  },
  "components/calcdata/LineParser": {
    "ErrBracket": "Invalid bracket order",
    "ErrIllegalCharacter": "Invalid \"%s\" character",
    "ErrInvalidExpression": "Invalid expression: \"%s\"",
    "ErrQuote": "Unclosed string constant in %d line",
    "ErrUnknownFunction": "Unknown function: %s"
  },
  "components/calctree/CalcTree": {
    "ErrCannotAddExprChild": "Failed to add expression \"%s\" as expression \"%s\" exists",
    "ErrCannotAddExprReplaceContainer": "Failed to add expression \"%s\" because expressions with \"%s.\" path exist",
    "ErrCannotCastNodeInfoID": "Failed to perform type casting for the node with identifier %d",
    "ErrCannotGetForeignKey": "Failed to get the foreign key for the node with identifier %d: the node is not an array",
    "ErrCannotGetNodeExistFlag": "Failed to get the node exist flag with identifier %d: the node is not a simple container",
    "ErrCannotGetRowCount": "Failed to get the row count for the node with identifier %d: the node is not an array",
    "ErrCannotGetRowRange": "Failed to get the row range for the node with identifier %d: the node is not an array",
    "ErrExceededRecursiveCalls": "Maximum number of recursive calls (%d) in expression \"%s\" exceeded.",
    "ErrGetVarArrayUnsupported": "Variable-type arrays can return intermediate expressions (expression \"%s\") only",
    "ErrInvalidNodeInfoID": "Invalid node identifier: %d",
    "ErrReplacingInputNodeNotFound": "Input node to replace with expression \"%s\" not found",
    "InputVariables": "Input variables",
    "NameNotExists": "No node, variable or expression with name \"%s\" exists",
    "PreviewProcess": "Calculations preview",
    "PreviewSourceNodeSuffix": "to",
    "VarNameNotExists": "No variable with name \"%s\" exists",
    "WarnPreviewRunning": "Preview already running"
  },
  "components/calctree/CalcTreeItemChakra": {
    "ErrExprParse": "Error parsing \"%s\" expression",
    "ErrExprUsesUndefinedVariable": "%1:s undefined variable used in \"%0:s\" expression",
    "ErrNodeArrayTooBig": "Error creating the object Array \"%s\". The number of nodes %d exceeds maximum length of JavaScript array: 4_294_967_295",
    "ExprCalculateError": "Error calculating expression \"%s\", path \"%s\""
  },
  "components/calctree/CalcTreeVendor": {
    "VendorCaption": "Calculator (Tree)",
    "VendorDesc": "Creating calculatable tree nodes"
  },
  "components/calcvariables/CalcVariables": {
    "ErrExprCalculate": "Error calculating \"%s\" expression",
    "ErrExprIsStringType": "\"%s\" expression of string type",
    "ErrExprParse": "Error parsing \"%s\" expression",
    "ErrReplacingInputVariableNotFound": "Input variable to replace with expression \"%s\" not found",
    "ErrVarValueSet": "Error setting \"%s\" expression value",
    "ExprNameNotExists": "No expression with name \"%s\" exists",
    "NameNotExists": "No input variable or expression with \"%s\" name exists",
    "PreviewProcess": "Calculations preview",
    "PreviewSourceVariableSuffix": "to",
    "WarnPreviewRunning": "Preview already running"
  },
  "components/calcvariables/CalcVariablesVendor": {
    "VendorCaption": "Calculator (variables)",
    "VendorDesc": "Creating calculated variables"
  },
  "components/clope/ClopeEngine": {
    "ClopeApplyNotify": "Model applying",
    "ClopeTrainNotify": "Clustering",
    "ClopeTransactionNotify": "Transactions preparing",
    "ColumnNameCluster": "Cluster number",
    "ColumnNameN": "N",
    "ColumnNameS": "S",
    "ColumnNameTransaction": "Transaction identifier",
    "ColumnNameW": "W",
    "ErrMoreThanOneItemColumn": "More than one transaction item column in the input data",
    "ErrMoreThanOneTransactionColumn": "More than one transaction identifier column in the input data",
    "ErrNoItemColumn": "No transaction item column in the input data",
    "ErrNoModel": "Model is not trained. Training of the node before its application is required",
    "ErrNonDiscreteItemColumn": "Transaction items must relate to the discrete type",
    "ErrNoTransactionColumn": "No transaction identifier column in the input data",
    "ErrTransactionTypeNotMatched": "Transaction identifier types do not match",
    "InputDataSourceSuppl": "Supplementary input",
    "OutDataSetClusters": "Clustering",
    "OutDataSetParameters": "Cluster parameters"
  },
  "components/clope/CLOPEVendor": {
    "VendorCaption": "Transaction Clustering",
    "VendorDesc": "CLOPE algorithm transaction clustering"
  },
  "components/clusterization/Clusterization": {
    "ErrNoTrainData": "No train data",
    "NAdditionalIters": "Pretraining iteration count"
  },
  "components/clusterization/ClusterizationEngine": {
    "ClusterizationTrainNotify": "Clustering",
    "ColumnNameCluster": "Cluster number",
    "ColumnNameDistance": "Distance to cluster center",
    "ColumnNameUniqueCoordSuffix": "|Coordinate",
    "ColumnNameUniqueValueSuffix": "|Value",
    "ErrClustersRowCountOverflow": "Row count overflow of the \"Cluster Centers\" output data set",
    "ErrNoColumnsForProcessing": "No columns for processing specified",
    "ErrNoModel": "Model is not trained. Training of the node before its application is required",
    "ErrWrongModel": "Model does not match the input data",
    "OutDataSetCenters": "Cluster centers",
    "OutDataSetClusters": "Clustering",
    "PrepareDataNotify": "Data preparing"
  },
  "components/clusterization/ClusterizationVendor": {
    "VendorCaption": "Clustering",
    "VendorDesc": "Data clustering"
  },
  "components/clusterization/ClusterProfiles": {
    "ClusterNamePrefix": "Cluster "
  },
  "components/coarseclasses/CoarseClassesBuilder": {
    "ErrCantApplyExternalBinning": "Failed to apply binning for %s column.",
    "ErrCantApplyFineClassesBinning": "Failed to apply fine classes for binning for %s column. There are too many unique values",
    "ErrCantLoadBackup": "Failed to restore binning",
    "ErrCantSaveBackup": "Failed to save current binning",
    "ErrContDataKindExpected": "Continuous data kind of %s column expected",
    "ErrDiscreteDataKindExpected": "Discrete data kind of %s column expected",
    "ErrIncorrectEventValue": "The output field does not contain \"%s\" value",
    "ErrInputBinningIsNotCorrected": "External binning for \"%s\" column incorrectly specified",
    "ErrOutColumnNotDefined": "Undefined output field",
    "ErrOutColumnNotValid": "The output field must be discrete with 2 unique values",
    "ErrOverflow": "Number of input data source binning operations exceeds the allowable value",
    "ErrVoidDataKind": "Data kind of the processed column not defined"
  },
  "components/coarseclasses/CoarseClassesConfig": {
    "EquabilityCoefficient": "Uniformity coefficient",
    "ErrDoNotFitAsTargetColumn": "The output column must have the discrete data kind and contain exactly 2 unique values",
    "ErrIncorrectColumnPurpose": "Incorrect \"%s\" field usage type",
    "ErrNotAllowedInputBinningKind": "The input field does not support the new usage type in the external partition (data type restriction)",
    "ErrRequiredContinuousOrDiscrete": "Continuous or discrete data kind is required",
    "MaxClassCount": "Required class count",
    "MinClassRate": "Minimum class rate"
  },
  "components/coarseclasses/CoarseClassesEngine": {
    "ActiveInputPortRequired": "Activation of input port is required to build the coarse classes",
    "ClassMarkPostfix": " Caption",
    "ClassNumPostfix": " Class number",
    "ClassSignificantPostfix": " Significance",
    "CoarseClassesCalcStatDesc": "Coarse Classes statistics calculation",
    "CoarseClassesProcessDesc": "Coarse classes building",
    "ErrClassStorageNotDefined": "The fine classes storage of one of the columns not defined",
    "ErrCoarseClassBuilderNotValid": "The fine classes storage does not comply with the customized settings",
    "ErrExternalBinningOverFlow": "The external binning size for \"%s\" column exceeds the allowable value",
    "ErrInputBinningIsNotCorrected": "External binning for \"%s\" column incorrectly specified",
    "ErrInputBinningIsNotExist": "No external binning for \"%s\" column or port not activated",
    "ErrInputBinningIsNotFull": "External binning for \"%s\" column does not contain all required data",
    "ErrInputBinningMissValue": "External binning for \"%s\" column does not contain unique \"%s\" value",
    "ErrInputBinningMissValues": "External binning contains not all unique values of \"%s\" column",
    "ErrInputRangeDataSourceIsNotExist": "No external binning data source",
    "ErrNoModel": "Model is not trained. Training of the node before its application is required",
    "InputRangesDataSource": "External quantization ranges"
  },
  "components/coarseclasses/CoarseClassesMapper": {
    "ErrNotAllowedDataType": "Column data type %s not supported",
    "ErrNoUniqueValues": "Failed to get unique values for \"%s\" column",
    "ErrPrevBinningDoesNotExist": "No previous binning for \"%s\" column"
  },
  "components/coarseclasses/CoarseClassesVendor": {
    "OutputBinningParams": "Column significance",
    "OutputClassParams": "Class parameters",
    "VendorCaption": "Coarse Classes",
    "VendorDescription": "Minimize input values diversity"
  },
  "components/coarseclasses/CoarseClassingOptimalAlgorithm": {
    "MaxClassCount": "Maximum class count",
    "MinClassRate": "Minimum class rate",
    "UniformityCoef": "Uniformity coefficient"
  },
  "components/coarseclasses/FineClassesStorage": {
    "BlanksClass": "[blank]",
    "ErrColumnIsNotDifenied": "Failed to define the column to process",
    "ErrColumnNullDataFmt": "Failed to generate fine classes for \"%s\" field: all values are null",
    "ErrDataTypesNotMatch": "The specified column data type does not match the data type of the coarse classes",
    "ErrNotPositiveIntervalsCount": "Bin count must be more than 0",
    "ErrProcessKeptStatisticsExistentValue": "There is no previously present \"%s\" value in \"%s\" field while fine classes building",
    "ErrProcessKeptStatisticsNonExistentValue": "Previously missing value appeared in \"%s\" field while fine classes building",
    "From": "from ",
    "NullClass": "Null class",
    "To": "to "
  },
  "components/columnflipping/ColumnFlipping": {
    "ColumnFlippingProcess": "Unpivoting",
    "DataTypesColumnDisplayName": "Data types",
    "DisplayNamesColumnDisplayName": "Captions",
    "ErrRowCountExceedMaxValue": "Row count of the result data set exceeded maximum value",
    "NamesColumnDisplayName": "Names",
    "ValuesColumnDisplayName": "Values"
  },
  "components/columnflipping/ColumnFlippingVendor": {
    "VendorCaption": "Unpivoting",
    "VendorDesc": "Create flat table from pivot table"
  },
  "components/coluniondata/ColUnionData": {
    "ErrNoActiveInputs": "No active inputs",
    "ErrNoTailsAlignDataSource": "No data source for appending",
    "JoinedDataSource": "Joined table",
    "JoinedVariables": "Joined variables",
    "MainDataSource": "Main table"
  },
  "components/coluniondata/ColUnionDataVendor": {
    "VendorCaption": "Column Union",
    "VendorDescription": "Combine several data sets by vertical gluing"
  },
  "components/condition/Condition": {
    "AggregateCountColumnDisplayName": "*",
    "ConditionBranchMetaDesc": "Branch",
    "ErrAggregateCountColumnNotFound": "No row count aggregation column found for the specified data set",
    "ErrCannotAccessLinkedFieldInfos": "Invalid operation: GetLinkedFieldInfos method calling",
    "ErrDebugConditionNotSpecified": "No condition branches are specified for execution in the debug mode",
    "ErrFieldNotSpecified": "No comparison field specified",
    "ErrIncorrectConditionConfiguration": "The condition list contains errors",
    "ErrInvalidAggregationType": "\"%s\" aggregation function does not apply to the specified field",
    "ErrInvalidCompareValue": "\"%s\" value is not compatible with \"%s\" data type",
    "ErrInvalidRelationType": "\"%s\" relation type is not applicable to the specified field and aggregation function",
    "ErrNoConditionBranchItems": "No condition branches specified",
    "ErrNoConditionItems": "Condition branch cannot be empty"
  },
  "components/condition/ConditionComponent": {
    "ElseBranchDesc": "Otherwise",
    "ErrInputSocketDefIsEmtpy": "The following input types are not specified: ",
    "OutputSocketDisplayNameTemplate": "%s - %s"
  },
  "components/condition/ConditionComponentVendor": {
    "VendorCaption": "Condition",
    "VendorDesc": "Conditional execution of model branch"
  },
  "components/corranalysis/CorrAnalysis": {
    "ColumnSet1": "Field 1",
    "ColumnSet2": "Field 2",
    "CorrAnalysisExtremumCFNotify": "Extremes of cross-correlation functions calculating",
    "CorrAnalysisNotify": "Correlation coefficients calculating",
    "CorrAnalysisPirsonNotify": "Pearson correlation coefficients calculating",
    "CorrAnalysisRankedStatNotify": "Ancillary statistics calculating",
    "CorrAnalysisSpearmanNotify": "Spearman's correlation coefficients calculating",
    "CorrAnalysisTauBKendallNotify": "Kendall's Tau-b correlation coefficients calculating",
    "DisplayName": "Caption",
    "ErrNoColumnsForProcessing": "No columns for processing specified",
    "ErrTooMuchCorrelations": "The number of calculated correlations cannot exceed %d",
    "ErrTooMuchRows": "The number of processed rows cannot be more than %d",
    "Name": "Name"
  },
  "components/corranalysis/CorrAnalysisVendor": {
    "VendorCaption": "Correlation Analysis",
    "VendorDesc": "Calculation of correlation coefficients"
  },
  "components/crosstab/CrossTab": {
    "CountCaseDisplayName": "Count",
    "CrossTabProcess": "Cross table building",
    "ErrTooManyDimensionsInColumns": "Too many column dimensions selected",
    "InvalidColumnNameFmt": "Failed to generate column name from \"%s\" unique value",
    "NullGroupCaption": "<...>",
    "OtherGroupCaption": "<Other>"
  },
  "components/crosstab/CrossTabVendor": {
    "VendorCaption": "Cross Table",
    "VendorDesc": "Create pivot table from flat table"
  },
  "components/datarecovery/DataRecovery": {
    "DataRecovery": "Imputation",
    "NullStrDefaultValue": "Unspecified",
    "PaymentAdditionalFeatures": "Calculation of the additional features",
    "QualityEngine": "Data quality",
    "ScanningInputData": "Input data scanning"
  },
  "components/datarecovery/DataRecoveryVendor": {
    "VendorCaption": "Imputation",
    "VendorDesc": "Fill in missing data"
  },
  "components/datatotree/DataToTreeEngine": {
    "ErrCannotSetSourceColumnForContainer": "Failed to set the source column for %s node-container",
    "ErrCanOnlySetIndexColumnForArray": "Failed to set the column with index for %s node that is not an array",
    "ErrIndexColumnNotFound": "Column with %s index for %s node not found",
    "ErrIndexColumnTypeMismatch": "Index type of %s node is not compatible with %s source column type",
    "ErrNoColumnsForProcessing": "No columns for processing specified",
    "ErrRepeatedGlobalNodeIndex": "Invalid repeated value of global index of \"%s\" node: %d",
    "ErrSourceColumnNotFound": "Failed to find source %s column for %s node",
    "ErrSourceColumnTypeMismatch": "%s node type is not compatible with %s source column type"
  },
  "components/datatotree/DataToTreeModelComponentEngine": {
    "InputDataSource": "Input data source",
    "OutputDataTree": "Output data tree"
  },
  "components/datatotree/DataToTreeVendor": {
    "VendorCaption": "Table to Tree",
    "VendorDesc": "Create data tree from data table"
  },
  "components/datatovariables/DataToVariables": {
    "ErrMaxStringLengthReached": "Maximum string length of %d characters exceeded"
  },
  "components/datatovariables/DataToVariablesEngine": {
    "DataToVariablesNotify": "Variable calculating",
    "ErrNoColumnsForProcessing": "No columns for processing specified",
    "ErrNoOneAggregation": "At least one aggregation option for \"%s\" field must be specified",
    "FindMedianNotify": "Median calculating"
  },
  "components/datatovariables/DataToVariablesVendor": {
    "VendorCaption": "Table to Variables",
    "VendorDesc": "Aggregate data into variables"
  },
  "components/datatoxml/DataToXML": {
    "ErrCannotProceedWithoutRootElement": "To perform the operation it is required to select the root XML element first",
    "ErrDocIDColumnNotAssigned": "No field that is the Document Identifier defined",
    "ErrExportNotConfigured": "XML tree not configured",
    "ErrIncorrectExportConfiguration": "Errors in configuration",
    "ErrInputSchemaHasChanged": "Input XSD schema does not comply with the node settings.",
    "ErrMapInputNodeTypesMismatch": "The data type of %s column does not match the data type of %s tree node",
    "ErrMappedNodeNotOwnedByExportTree": "%s node for which input data set column selection is requested is not included into XML tree",
    "ErrNodeDoesNotDescendFromSelectedRoot": "%s node is not a descendant of the selected %s root element",
    "ErrNodeDoesNotExist": "\"%s\" node not found in XSD schema",
    "ErrNotRootElement": "\"%s\" node is not XSD schema root element",
    "ErrNoXSDInput": "There is no XSD schema at the component input",
    "ErrRootNodeNotSelected": "No root XML element selected",
    "ErrUnmappedNodeNotOwnedByExportTree": "%s node for which link reset is requested is not included into XML tree",
    "ErrXMLExport": "Error generating XML:\n  Error code: %d\n  %s",
    "ExportDataSetProcessCaption": "Data set processing",
    "IDName": "ID",
    "WriteXMLFileProcessCaption": "XML document generation",
    "XMLName": "XML",
    "XSDConnection": "Connection to XSD schema source"
  },
  "components/datatoxml/DataToXMLVendor": {
    "VendorCaption": "XML Generation",
    "VendorDesc": "XML document generation according to given XSD schema"
  },
  "components/datereform/DateReform": {
    "ErrFormatingString": "Error converting date\/time to string with %s format",
    "ISO8601": "ISO8601"
  },
  "components/datereform/DateReformVendor": {
    "VendorCaption": "Date and Time",
    "VendorDescription": "Reform date\/time"
  },
  "components/duplicates/DuplicatesEngine": {
    "Contradiction": "Contradiction",
    "ContradictionGroup": "Contradiction group",
    "Duplicate": "Duplicate",
    "DuplicateGroup": "Duplicate group",
    "DuplicatesIndexingNotify": "Search for duplicates and contradictions",
    "ErrNoColumnsForProcessing": "No columns for processing specified",
    "SortingNotify": "Data sorting"
  },
  "components/duplicates/DuplicatesVendor": {
    "VendorCaption": "Duplicates Detection",
    "VendorDesc": "Detection of duplicates and contradictions"
  },
  "components/elimoutlier/ElimOutlier": {
    "ErrOutDataSetIndexOutOfRange": "The output data set index %d is out of [%d; %d] range",
    "ErrSetValueRestricted": "Replacement with set value is prohibited in the ordered data set for \"%s\" column with continuous data kind",
    "GenerationOutputSets": "Output data sets generation",
    "OutData": "Output data set",
    "OutDataExtr": "Extremes",
    "OutDataOut": "Outliers",
    "PaymentAdditionalFeatures": "Calculation of the additional features",
    "QualityEngine": "Data quality",
    "ScanningInputData": "Input data scanning"
  },
  "components/elimoutlier/ElimOutlierVendor": {
    "VendorCaption": "Eliminate Outliers",
    "VendorDesc": "Eliminate outliers and extremes"
  },
  "components/em/EMEngine": {
    "ColumnNameCluster": "Cluster number",
    "ColumnNameProbability": "Ownership probability",
    "ColumnNameUniqueCoordSuffix": "|Coordinate",
    "ColumnNameUniqueValueSuffix": "|Value",
    "ErrClustersRowCountOverflow": "Row count overflow of the \"Cluster Centers\" output data set",
    "ErrNoColumnsForProcessing": "No columns for processing specified",
    "ErrNoModel": "Model is not trained. Training of the node before its application is required",
    "ErrWrongModel": "Model does not match the input data",
    "OutDataSetCenters": "Cluster centers",
    "OutDataSetClusters": "Clustering",
    "PrepareDataNotify": "Data preparing",
    "TrainNotify": "Clustering"
  },
  "components/em/EMVendor": {
    "VendorCaption": "EM Clustering",
    "VendorDesc": "EM algorithm data clustering"
  },
  "components/enrichdata/EnrichData": {
    "DisplayNamePrefix": "Enrich",
    "ErrLinkMustContainColumnOfMainTable": "Link must contain a field from the main table",
    "ErrRowCountExceedMaxValue": "Row count of the result data set exceeded maximum value %d",
    "ProgessOutputBuild": "Build result data set",
    "ProgressJoinedTableIndex": "Joined table %d indexing"
  },
  "components/enrichdata/EnrichDataVendor": {
    "VendorCaption": "Enrich Data",
    "VendorDescription": "Enrich data using guides"
  },
  "components/execcmd/ExecCmd": {
    "ErrBadCmdLine": "Failed to determine executable file name.",
    "ErrCmdLineIsEmpty": "Empty command line.",
    "ErrCurrentDirectory": "Failed to get current directory",
    "ErrDisallowedExecution": "Node execution forbidden by security settings",
    "ErrMsgDisplayName": "Error message",
    "ErrResultCmdLineIsEmpty": "Empty result command line.",
    "ExecTimeoutExpired": "Execution time expired.",
    "ResultDisplayName": "Execution result"
  },
  "components/execcmd/ExecCmdVendor": {
    "VendorCaption": "Program Execution",
    "VendorDesc": "External program execution"
  },
  "components/execnode/ExecNodeComponent": {
    "ErrExecNodeNotAllowed": "Execution of %s component is not allowed",
    "ErrNodeComponentVendorIsSealed": "Failed to set reference to \"%s\" component for which inheritance is not possible",
    "ErrPortNotConfigurable": "Port configuration not supported",
    "ErrReferencedVendorMalfunction": "\"%s\" GUID=%s source component is malfunctioning",
    "ErrReferencedVendorNotAvailable": "\"%s\" GUID=%s source component not available",
    "ErrReferencedVendorNotFound": "GUID=%s source component not found",
    "ErrReferencedVendorNotSpecified": "Source component not set",
    "ErrUnableToLoadComponentConfig": "Failed to load the internal component configuration"
  },
  "components/execnode/ExecNodeComponentVendor": {
    "InputBaseNode": "Base node",
    "NodeDisplayNameFormatString": "%s (execution)",
    "VendorCaption": "Node Execution",
    "VendorDesc": "Apply model to new data"
  },
  "components/extractxml/ExtractXML": {
    "DocIDColumn": "Document ID",
    "ErrExtractXML": "Error parsing XML from row %d of the input data set:\n  Error code: %d\n  Message: %s",
    "ErrExtractXMLInitError": "XML parsing initialization error:\n  %s",
    "ErrImportNotConfigured": "Import tree not configured",
    "ErrInputFieldNotSelected": "It is required to specify XML containing field",
    "ErrInputSchemaHasChanged": "Input XSD schema does not comply with the node settings.",
    "ErrLinuxTimeZoneNotSupported": "\"Default time zone\" configuration is not supported in the Linux application version (\"%s\" time zone is specified)",
    "ErrNoInputDataSource": "No input data source connected",
    "ErrNothingSelected": "No nodes selected for import",
    "ErrNoXSDInput": "There is no XSD schema at the component input",
    "ErrorCodeColumn": "Error Code",
    "ErrorDataSet": "Errors and exit codes",
    "ErrorDescColumn": "Error Description",
    "ErrWindowsTimeZoneNotSupported": "\"%s\" time zone is not supported",
    "InputDataSource": "Input data source",
    "XSDConnection": "Connection to XSD schema source"
  },
  "components/extractxml/ExtractXMLVendor": {
    "VendorCaption": "XML Parsing",
    "VendorDescription": "Parses the string field of the data set as XML and imports it to the output data set according to the specified schema"
  },
  "components/factoranalysis/FactorAnalysis": {
    "ErrFactorMatrixAfterRot": "Ill-conditioned factor mapping matrix",
    "ErrFactorMatrixBadSize": "Invalid factor mapping matrix size",
    "ErrNoColumnsForProcessing": "No columns for processing specified",
    "ErrNoModel": "Model is not trained. Training of the node before its application is required",
    "ErrWrongModel": "Input data does not match previously trained model",
    "FactorAnalysisColumnsDisplayNames": "Caption",
    "FactorAnalysisColumnsNames": "Name",
    "FactorAnalysisDisplayName": "Factor",
    "FactorAnalysisNotify": "Factor calculating",
    "OutDataSetFactors": "Factors",
    "OutDataSetLoadings": "Factor loadings"
  },
  "components/factoranalysis/FactorAnalysisVendor": {
    "VendorCaption": "Factor Analysis",
    "VendorDesc": "Identification of significant factors"
  },
  "components/filterdata/FilterColumns": {
    "CompareTipFmt": "%s and %s",
    "DayFirstPostfix": "first",
    "DayLastPostfix": "last",
    "ErrColumnNotFound": "Field is specified incorrectly",
    "ErrDatePeriodUndefined": "Failed to define time span",
    "ErrDateSourceTypeDataNotSupported": "Use date from data set is not supported to define time span",
    "ErrEmptyCompareValueList": "No list of values specified",
    "ErrIncorrectCompareLowerBound": "The entered lower bound value does not match the filtered column type",
    "ErrIncorrectCompareUpperBound": "The entered upper bound value does not match the filtered column type",
    "ErrIncorrectCompareValue": "The entered value does not match the filtered column type",
    "ErrIncorrectCompareValueList": "List values do not match the filtered column type",
    "ErrIncorrectRelationType": "Relation type does not match the filtered column type",
    "ErrNoConditions": "No filtering criteria",
    "ErrRowNumberNotSupported": "Row numerators not supported",
    "ErrUnknownDataType": "No data type specified",
    "ManyFirstPostfix": "first",
    "ManyLastPostfix": "last",
    "MonthFirstPostfix": "first",
    "MonthLastPostfix": "last",
    "OtherFirstPostfix": "first",
    "OtherLastPostfix": "last",
    "QuarterFirstPostfix": "First",
    "QuarterLastPostfix": "last",
    "WeekFirstPostfix": "first",
    "WeekLastPostfix": "last",
    "YearFirstPostfix": "first",
    "YearLastPostfix": "last"
  },
  "components/filterdata/FilterData": {
    "ErrPreviewDataSourceNotActive": "Failed to apply filter, input not activated",
    "FilterDataNotify": "Data filtering",
    "FilterPreviewProcess": "Data filtering preview",
    "OutputDataSource": "Filtered",
    "OutputDataSourceElse": "Filtered Out",
    "WarnReachedLimitScanRow": "Maximum scanned row count reached: %d"
  },
  "components/filterdata/FilterDataVendor": {
    "VendorCaption": "Row Filter",
    "VendorDesc": "Row filtering by criteria"
  },
  "components/forecast/ARIMAXBuilder": {
    "ErrIncorrectData": "Incorrect data passed to %s procedure",
    "ErrOptimGradientVerificationFailed": "Analytical gradient verification failed",
    "ErrOptimIntegrityFailed": "The infinite value of the optimized function or its gradient was detected",
    "NotEnoughData": "Not enough data points in the series to train the model with the given structure",
    "TrainARIMAXProcessCaption": "Model training"
  },
  "components/forecast/ARIMAXModel": {
    "ARDisplayName": "AR[%d]",
    "ARIMAForecastProcessCaption": "Forecast calculating",
    "ErrCoefsLengthMismatch": "Vector lengh of %d parameters does not match the required %d",
    "ErrModelHasNoIntercept": "The current model has no intercept",
    "ErrUnknownCoefficients": "Model contains unknown coefficients",
    "InterceptDisplayName": "Intercept",
    "MADisplayName": "MA[%d]",
    "SARDisplayName": "Seasonal AR[%d]",
    "SMADisplayName": "Seasonal MA[%d]"
  },
  "components/forecast/ARIMAXParams": {
    "ConfidenceInterval": "Confidence interval",
    "D": "Integration order",
    "DS": "Seasonal integration order",
    "ErrNoStructuralElements": "No structural model element specified",
    "ForecastHorizon": "Forecast horizon",
    "P": "AR part order",
    "PS": "Seasonal AR part order",
    "Q": "MA part order",
    "QS": "Seasonal MA part order",
    "SeasonalPeriod": "Period of the seasonal component"
  },
  "components/forecast/ARIMAXTasks": {
    "ARIMAXProcessCaption": "%s model training",
    "ErrNotARIMAXTaskContext": "Internal error: context is not the training context for ARIMAX model",
    "MessageCurrentModel": "ARIMAX: AIC of the current selected %s model: %.8f",
    "MessageNewModel": "ARIMAX: AIC of %s model: %.8f",
    "MessageSelectedModel": "ARIMAX: %s model selected, number of degrees of freedom: %d"
  },
  "components/forecast/ARIMAXTeacher": {
    "ErrInvalidTrainData": "The model cannot be trained on the basis of the specified data",
    "ErrNoTrainData": "No train data"
  },
  "components/forecast/ARIMAXTrainingResults": {
    "ErrDuplicateNodeIndex": "Node #%d is duplicate in the configuration",
    "ErrParentNodeNotLoaded": "Parent node #%d not found in configuration",
    "ErrSetTrainedWithoutModel": "Attempt to set the \"trained\" status not specifying the selected model",
    "TotalSamples": "Total samples",
    "TotalSelectedSamples": "Total selected samples",
    "TrainSamples": "Samples in the training set"
  },
  "components/forecast/ForecastEngine": {
    "AdjustedR2": "Adjusted coefficient of determination",
    "AIC": "Akaike information criterion",
    "AICc": "Akaike information criterion corrected",
    "BIC": "Bayesian information criterion",
    "CoefficientColumn": "Coefficient",
    "CoefficientTypeColumn": "Type",
    "ColumnName": "Input field name",
    "ColumnUniqueValue": "Unique value",
    "ErrInvalidFieldsSettings": "Invalid input data set field settings",
    "ErrModelWithNoParams": "Invalid model settings: no matched parameters",
    "ErrMultipleOutputsNotSupported": "%s model allows only one output field",
    "ErrNoOutputFieldsSelected": "No output data field specified",
    "ErrNotTrained": "Model not trained",
    "ErrWrongInputField": "Invalid %s input field properties, %s data kind, %s data type",
    "ErrWrongModelInput": "Input columns do not match previously trained model",
    "ForecastModelCoefficients": "Model coefficients",
    "ForecastOutputDataSet": "Model output",
    "ForecastOutputVariables": "Summary",
    "LagColumn": "Lag",
    "LBoundColumn": "%s|Lower bound",
    "ModelDF": "Degrees of freedom for model",
    "ParameterNameColumn": "Parameter",
    "PredictedColumn": "%s|Prediction",
    "PValueColumn": "P-value",
    "R2": "Coefficient of determination",
    "ResDF": "Residual degrees of freedom",
    "ResidualColumn": "%s|Approximation error",
    "SEColumn": "Standard deviation",
    "TrainAvgError": "The mean absolute error of the training set",
    "TrainAvgRelError": "The mean relative error of the training set",
    "TrainRMSError": "The root-mean-square error of the training set",
    "TStatColumn": "T-statistic",
    "UBoundColumn": "%s|Upper bound"
  },
  "components/forecast/ForecastVendor": {
    "VendorCaption": "ARIMAX",
    "VendorDesc": "Time series forecast using ARIMA Model able to include exogenous factors (ARIMAX)"
  },
  "components/groupdata/GroupData": {
    "ErrNoColumnsForProcessing": "No columns for processing specified",
    "ErrNoOneAggregation": "At least one aggregation option for \"%s\" fact must be specified",
    "FindMedianNotify": "Median calculating",
    "GroupDataNotify": "Data grouping",
    "SortNotify": "Grouped data sorting"
  },
  "components/groupdata/GroupDataSet": {
    "ErrMaxStringLengthReached": "Maximum string length of %d characters exceeded"
  },
  "components/groupdata/GroupDataVendor": {
    "VendorCaption": "Grouping",
    "VendorDesc": "Group data"
  },
  "components/javascript/JavaScriptEngine": {
    "InputDataSource": "Input data source",
    "JavaScriptConfigureOutputTable": "Preparing output columns",
    "OutputDataSet": "Output data set"
  },
  "components/javascript/JavaScriptVendor": {
    "VendorCaption": "JavaScript",
    "VendorDesc": "JavaScript code execution"
  },
  "components/javascript/JavaScriptWrappers": {
    "ErrColumnInfoNoRequiredProperty": "Column definition does not contain required '%s' property",
    "ErrInvalidArgWrongType": "Invalid type of argument [%d]",
    "ErrInvalidColumnDataKind": "Invalid data kind",
    "ErrInvalidColumnDataType": "Invalid data type",
    "ErrInvalidColumnInfo": "Invalid column definition",
    "ErrInvalidColumnUsageType": "Invalid usage type",
    "ErrInvalidThis": "Method called for invalid object",
    "ErrNoCorrespondingColumn": "Object not associated with column"
  },
  "components/joindata/JoinData": {
    "DisplayNamePrefix": "Join",
    "ErrInvalidColNamePrefix": "\"%s\" name prefix is not a valid identifier",
    "ErrRowCountExceedMaxValue": "Row count of the result data set exceeded maximum value %d",
    "ProgressCompareIndexes": "Index mapping",
    "ProgressFormResult": "Output data set generation",
    "ProgressJoinedTableIndex": "Joined table indexing",
    "ProgressMainTableIndex": "Main table indexing"
  },
  "components/joindata/JoinDataVendor": {
    "VendorCaption": "Join",
    "VendorDescription": "Join two data sets"
  },
  "components/linregression/LinRegression": {
    "ErrWrongPreNormLength": "The normalized string size %d differs from nominal %d"
  },
  "components/linregression/LinRegressionBuilder": {
    "ErrTooLessRowsCount": "Row number (%d) in the training set must not be less than the number of model coefficients (%d)",
    "ErrWrongLinRegContext": "Invalid linear regression model builder context",
    "ErrWrongLinRegModel": "The trained model is not linear regression model",
    "WarnMaxDepthForForwardSelection": "The model coefficients number must be limited by the training sample size. For best results, increase the observations number in the training sample"
  },
  "components/linregression/LinRegressionBuilderContext": {
    "ErrContextCreateNoRows": "The linear regression model builder context cannot be created for empty data set"
  },
  "components/linregression/LinRegressionEngine": {
    "ColumnDisplayName": "Input field captions",
    "ColumnName": "Input field names",
    "ColumnUniqueValues": "Unique values",
    "DFE": "Degrees of freedom for error",
    "ErrInvalidFieldsSettings": "Invalid input data set field settings",
    "ErrMultipleOutputFields": "Only one output data field allowed",
    "ErrNoLearnData": "The training data set must contain at least two rows",
    "ErrNoValidationData": "The validation data set must contain at least one row",
    "ErrNoValidationSet": "Validation partition must be enabled for the automatic search for regularization coefficient",
    "ErrOutputColumnNotValid": "Invalid specified output column",
    "ErrTeachNoOutputField": "No output data field specified",
    "ErrWrongInputField": "Invalid \"%s\" input field properties, \"%s\" data kind, \"%s\" data type",
    "ErrWrongOutputColumnsCount": "Exactly 1 output column must be defined, %d output columns are currently defined",
    "ErrWrongOutputField": "Invalid \"%s\" output field properties, \"%s\" data kind, \"%s\" data type",
    "FStatistic": "F-statistic",
    "Intercept": "<Intercept>",
    "LinRegTrainProcessName": "Model training",
    "LogLikelihood": "Log-likelihood",
    "ModelDF": "Degrees of freedom for model",
    "ModelPValue": "Model P-value",
    "RegressionCoefsNamePostfix": "|Coefficients",
    "RegressionColumn": "%s|Regression",
    "RegressionLBoundNamePostfix": "|CI lower bound",
    "RegressionPValueNamePostfix": "|P-value",
    "RegressionStdErrorNamePostfix": "|Std. error",
    "RegressionTStatNamePostfix": "|T-statistic",
    "RegressionUBoundNamePostfix": "|CI upper bound",
    "StdDev": "Standard deviation",
    "TestSamples": "Samples in the test set",
    "TotalSamples": "Total samples",
    "TotalSelectedSamples": "Total selected samples",
    "TrainSamples": "Samples in the training set",
    "ValidationPartitions": "Number of validation partitions",
    "ValidationSamples": "Samples in the validation set"
  },
  "components/linregression/LinRegressionModelTree": {
    "ErrFactorIndexesPrepared": "Full factor model indexes not prepared"
  },
  "components/linregression/LinRegressionTasks": {
    "ErrNotLinRegTaskContext": "Internal error: context is not the training context for the linear regression model",
    "ErrWrongValidationPartitionCount": "Validation partition count must be more than 0 (given partition count = %d)",
    "RegBackwardAssignProcessName": "Excluding %s factor from the final model",
    "RegBackwardStepProcessName": "Stepwise selection - %s factor exclusion",
    "RegFoldSet": "Validation partition %d",
    "RegForwardAssignProcessName": "%s factor adding to the final model",
    "RegForwardStepProcessName": "Stepwise selection - %s factor adding",
    "RegPrepareData": "Preparing data before training",
    "RegTrainElnetGridProcessName": "Model training (L1-regularization coefficient = %.4f L2-regularization coefficient = %.4f)",
    "RegTrainLassoGridProcessName": "Model training (L1-regularization coefficient = %.4f)",
    "RegTrainProcessName": "%s method - model training",
    "RegTrainRidgeGridProcessName": "Model training (L2-regularization coefficient = %.4f)",
    "ValidationProcess": "Model validation"
  },
  "components/linregression/LinRegressionVendor": {
    "VendorCaption": "Linear Regression",
    "VendorDesc": "Linear regression"
  },
  "components/logregression/LogRegression": {
    "ErrWrongPreNormLength": "The normalized string size %d differs from nominal %d"
  },
  "components/logregression/LogRegressionBuilder": {
    "ErrWrongLogRegContext": "Incorrect context of the log. regression model builder",
    "ErrWrongLogRegModel": "The trained model is not log. regression model"
  },
  "components/logregression/LogRegressionBuilderContext": {
    "ErrContextCreateNoRows": "The log. regression model builder context cannot be created for empty data set"
  },
  "components/logregression/LogRegressionEngine": {
    "ActualEvent": "Event|Actual",
    "CalcTestSetProportionProcessCaption": "Calculation of event weight in test set",
    "CalcTrainSetProportionProcessCaption": "Calculation of event weight in training set",
    "Chi2": "Chi-square",
    "ColumnDisplayName": "Input field captions",
    "ColumnName": "Input field names",
    "ColumnUniqueValues": "Unique values",
    "CVAvgCE": "Average cross-entropy in cross validation",
    "CVClsErrorPercentage": "Cross validation error percentage",
    "CVRMSError": "Root-mean-square error in cross validation",
    "DFE": "Degrees of freedom for error",
    "ErrClassifierMultipleOutputs": "Only one output field is allowed for the classification task, %d is currently specified",
    "ErrEmptyTestSet": "Empty test set cannot be used for event weight correction",
    "ErrInvalidFieldsSettings": "Invalid input data set field settings",
    "ErrNoLearnData": "The training data set must contain at least two rows",
    "ErrNotImplemented": "Functionality not implemented",
    "ErrNoValidationData": "The validation data set must contain at least one row",
    "ErrNoValidationSet": "Validation partition must be enabled for the automatic search for regularization coefficient",
    "ErrOutputColumnNotValid": "Invalid specified output column",
    "ErrTeachNoOutputField": "No output data field specified",
    "ErrWrongInputField": "Invalid \"%s\" input field properties, \"%s\" data kind, \"%s\" data type",
    "ErrWrongOutputColumnsCount": "Exactly 1 output column must be defined, %d output columns are currently defined",
    "ErrWrongOutputField": "Invalid \"%s\" output field properties, \"%s\" data kind, \"%s\" data type",
    "ErrWrongOutputFieldNotDiscrete": "Invalid \"%s\" output field properties, \"%s\" data kind, whereas \"%s\" is only valid",
    "ErrWrongOutputUniqueCount": "Number of \"%s\" output column unique values is %d (exactly 2 required)",
    "ErrWrongProportionGeneralSet": "Event weight in the general set must be more than 0 % and less than 100 %",
    "Intercept": "<Intercept>",
    "LogRegStoreStatProcessName": "Quality indicators calculating",
    "LogRegTrainProcessName": "Model training",
    "ModelDF": "Degrees of freedom for model",
    "ModelPValue": "Model P-value",
    "NullMinusTwoLogL": "-2 Log-likelihood of null model",
    "OutputUniqueValuesNotCalculated": "Unique values of \"%s\" output column not calculated",
    "PredictedValue": "%s|Prediction",
    "PredictionEvent": "Event|Prediction",
    "PredictionProbability": "Event probabillity|Prediction",
    "PredictionScore": "Score|Prediction",
    "PrepareSetsProportionsProcessCaption": "Preparing sets",
    "R2": "McFadden pseudo-R^2",
    "R2Adj": "McFadden pseudo-R^2 (adj.)",
    "RegressionCoefsNamePostfix": "|Coefficients",
    "RegressionLBoundNamePostfix": "|CI lower bound of odds ratio",
    "RegressionOddsRatioPostfix": "|Odds ratio",
    "RegressionScoreNamePostfix": "|Score",
    "RegressionStdErrorNamePostfix": "|Std. error",
    "RegressionUBoundNamePostfix": "|CI upper bound of odds ratio",
    "RegressionWaldPValueNamePostfix": "|P-value",
    "RegressionWaldStatNamePostfix": "|Wald statistic",
    "StoreEventsProcessCaption": "Output data set defining",
    "TestAvgCE": "Average cross-entropy in the test set",
    "TestClsErrorPercentage": "Percentage of classification errors in the test set",
    "TestRMSError": "Root-mean-square error in the test set",
    "TestSamples": "Samples in the test set",
    "TotalSamples": "Total samples",
    "TotalSelectedSamples": "Total selected samples",
    "TrainAvgCE": "The average cross-entropy of the training set",
    "TrainClsErrorPercentage": "Percentage of classification errors of the training set",
    "TrainRMSError": "The root-mean-square error of the training set",
    "TrainSamples": "Samples in the training set",
    "TrainThreshold": "Model train cutoff",
    "ValidationPartitions": "Number of validation partitions",
    "ValidationSamples": "Samples in the validation set",
    "WarnPrepareSetsProportionsRunning": "Preparation of sets already started"
  },
  "components/logregression/LogRegressionModelTree": {
    "ErrFactorIndexesPrepared": "Full factor model indexes not prepared"
  },
  "components/logregression/LogRegressionTasks": {
    "ErrNotLogRegTaskContext": "Internal error: context is not the training context for the log. regression model",
    "ErrTooManyWeightColumns": "The weight column count cannot be more than 1",
    "ErrWrongValidationPartitionCount": "Validation partition count must be more than 0 (given partition count = %d)",
    "RegBackwardAssignProcessName": "Excluding %s factor from the final model",
    "RegBackwardStepProcessName": "Stepwise selection - %s factor exclusion",
    "RegFoldSet": "Validation partition %d",
    "RegForwardAssignProcessName": "%s factor adding to the final model",
    "RegForwardStepProcessName": "Stepwise selection - %s factor adding",
    "RegPrepareData": "Preparing data before training",
    "RegTrainElnetGridProcessName": "Model training (L1-regularization coefficient = %.4f L2-regularization coefficient = %.4f)",
    "RegTrainLassoGridProcessName": "Model training (L1-regularization coefficient = %.4f)",
    "RegTrainProcessName": "%s method - model training",
    "RegTrainRidgeGridProcessName": "Model training (L2-regularization coefficient = %.4f)",
    "ValidationProcess": "Model validation"
  },
  "components/logregression/LogRegressionVendor": {
    "VendorCaption": "Logistic Regression",
    "VendorDesc": "Logistic regression"
  },
  "components/loop/LoopComponent": {
    "ErrCannotSetLinkedVariables": "Invalid operation: LinkedVariables property change",
    "ErrColumnCountChanged": "The column count in the data set differs from the previous iteration",
    "ErrColumnDataTypesChanged": "The column data types in the data set differ from the previous iteration",
    "ErrCompareValueUnassigned": "No comparison value specified for the loop termination condition",
    "ErrConditionComponentInLoopNotAllowed": "Execution of the Condition in the loop component is not possible",
    "ErrGroupColumnNotFound": "\"%s\" column used for data grouping not found",
    "ErrGroupCountMustBePositive": "Group count must be positive",
    "ErrGroupDataSourceSocketNotFound": "No port with \"%s\" identifier containing columns to group found",
    "ErrGroupDataSourceSocketNotSpecified": "No port containing columns to group specified",
    "ErrGroupSizeMustBePositive": "Group row count must be positive",
    "ErrIncompatibleTerminateCondition": "\"%s\" loop termination condition is not compatible with \"%s\" data type",
    "ErrIncorrectMaxThreadCount": "Maximum thread count must be no less than %d",
    "ErrInvalidMappedVariable": "Invalid mapped variables passed from output to input",
    "ErrIterationCountCannotBeNegative": "Iteration count cannot be negative",
    "ErrIterationCountOverflow": "Maximum allowable number of iterations exceeded: %d",
    "ErrLoopVariableCannotBeMapped": "The loop variable cannot receive at the inlet the output variable value",
    "ErrMappedVariableDuplicate": "The linked variables list contains duplicate links to \"%s\" variable",
    "ErrMappedVariableTypesMismatch": "Type mismatch between linked variables \"%s\" and \"%s\"",
    "ErrNoConditionVariable": "No variable to check the loop termination condition",
    "ErrParallelProcessingError": "Error occurred while parallel loop processing",
    "ErrParallelProcessingNotSupportedInRepeatLoop": "Posttested loop does not support parallel processing",
    "ErrPortNotConfigurable": "Port configuration not supported",
    "ErrSocketIsNotInputDataSourceSocket": "\"%s\" port is not input port containing data set",
    "ErrSocketNotConfigured": "\"%s\" port not configured",
    "ErrUnsupportedInputSocketType": "Unsupported \"%s\" port type",
    "IterationCaption": "Iteration #%d",
    "IterationErrorDetailsFieldDisplayName": "Detailed error information",
    "IterationErrorMessageFieldDisplayName": "Error message",
    "IterationIdFieldDisplayName": "Iteration identifier",
    "IterationStatusSocketName": "Iteration execution status",
    "IterationSuccessFlagFieldDisplayName": "Success flag field",
    "ProcessActivate": "Activating \"%s\" component",
    "ProcessAppendDataSet": "Output data set appending",
    "ProcessGroupProcessing": "Group processing",
    "ProcessInputDataSourceGrouping": "Defining groups in the source data set",
    "WarningTeachCriticalIterationCount": "Node training started with iterations count %d. Training with many iterations can cause memory overflow error."
  },
  "components/loop/LoopComponentVendor": {
    "NodeDisplayNameFormatString": "%s (loop)",
    "VendorCaption": "Loop",
    "VendorDesc": "Multiple model execution based on new data"
  },
  "components/neuralnet/ClassificationReport": {
    "ErrActualPredictedSizeMismatch": "Actual and predicted array sizes mismatch",
    "ErrBetasArraySizeMismatch": "The coefficient array size for F-measure calculation mismatches the class count"
  },
  "components/neuralnet/NeuralNet": {
    "AutofitProcessCaption": "Neural network parameters selection",
    "CalcModelErrorsProcessCaption": "Quality indicators calculating",
    "CVPassProcessCaption": "Iteration %d",
    "CVProcessCaption": "Cross validation",
    "CVTrainSetPrepareProcessCaption": "Preparing training set",
    "CVValidationSetPrepareProcessCaption": "Preparing validation set",
    "DecayDegree": "Decay degree",
    "ErrCannotContinueTraining": "Failed to continue training since the structure of the trained neural network does not correspond to the new training parameters",
    "ErrClassifierUnknownClass": "Unknown class is present in the output classifier column",
    "ErrDataSourceNumInputsMismatch": "The input data dimensionality %d mismatches the neural network inputs number %d",
    "ErrInvalidNeuronKind": "Invalid neuron kind: %d",
    "ErrLayerNeuronCountMismatch": "The layer neuron count mismatches the required value %d",
    "ErrMissingOrInfiniteValue": "Only non-empty final values are allowed in the data",
    "ErrMustSetEqualLayerSizes": "Before requesting the coarse size of the neural network, the setting of the same number of neurons in the hidden layers is required",
    "ErrNetworkUntrained": "Failed to perform the requested operation using the untrained neural network",
    "ErrNeuronWeightsCountMismatch": "The specified number of the input neuron weights %d mismatches the required number %d",
    "ErrNoInputColumns": "Neural network input data columns not set",
    "ErrNoOutputColumns": "Neural network output data columns not set",
    "ErrNotEnoughClasses": "Representatives of at least 2 classes (currently %d) must be present in the training set",
    "ErrNoTrainData": "No train data",
    "ErrNoValidCasesSpecifiedForTraining": "No valid examples in the training set",
    "ErrRowLengthMismatch": "Length of %d row does not match the column count in matrix %d",
    "ErrTrainNetworkError": "Neural network training failed",
    "ErrWrongNeuronCounts": "One or several invalid neuron count values specified",
    "ExecuteProcessCaption": "Input data iteration",
    "FitDecayProcessCaption": "Training: decay degree = %.1f",
    "FitH0DecayProcessCaption": "Training: without hidden layers; decay degree = %.1f",
    "FitH0ProcessCaption": "Training: without hidden layers",
    "FitH1DecayProcessCaption": "Training: one hidden layer = %d neurons; decay degree = %.1f",
    "FitH1ProcessCaption": "Training: one hidden = %d layer of neurons",
    "FitH2DecayProcessCaption": "Training: first hidden layer = %d neurons; second hidden layer = %d neurons; decay degree = %.1f",
    "FitH2ProcessCaption": "Training: first hidden layyer = %d neurons; second hidden layer = %d neurons",
    "HLSize": "Number of neurons in the hidden layers (same)",
    "Nh1": "Number of neurons in the first hidden layer",
    "Nh2": "Number of neurons in the second hidden layer",
    "NHL": "Number of hidden layers",
    "PrepareProcessCaption": "Data preparing",
    "TestSetProcessCaption": "Test data set iteration",
    "TrainProcessCaption": "Neural network training",
    "ValidationSetProcessCaption": "Validation data set iteration"
  },
  "components/neuralnet/NeuralNetEngine": {
    "ActualClsIDColumn": "Class ID|Actual",
    "CVAvgCE": "Average cross-entropy in cross validation",
    "CVAvgError": "The mean absolute error in cross validation",
    "CVAvgRelError": "The mean relative error in cross validation",
    "CVClsErrorPercentage": "Cross validation error percentage",
    "CVRMSError": "Root-mean-square error in cross validation",
    "ErrInvalidClassifierResult": "Invalid classification result in row %d",
    "ErrInvalidFieldsSettings": "Invalid input data set field settings",
    "ErrMultipleOutputs": "Only one output data field allowed",
    "ErrNetworkUntrained": "Neural network is untrained",
    "ErrNoInputFields": "No input data fields specified",
    "ErrNoLearnData": "The training data set must contain at least two rows",
    "ErrNoValidationData": "The validation data set must contain at least one row",
    "ErrTeachNoOutputFields": "No output data fields specified In the training mode",
    "ErrUnbalancedEndUpdateNeuralNetParameters": "Call of EndUpdateNeuralNetParameters without corresponding BeginUpdateNeuralNetParameters",
    "ErrWrongModelInput": "Input columns do not match previously trained model",
    "ErrWrongModelOutput": "Output column does not match previously trained model",
    "GiniIndexColumn": "Gini index",
    "GTest_Multiple": "%s|%s|G-test",
    "GTest_Single": "%s|G-test",
    "GTestDF_Multiple": "%s|%s|Number of G-test degrees of freedom",
    "GTestDF_Single": "%s|Number of G-test degrees of freedom",
    "GTestPValue_Multiple": "%s|%s|P-value of G-test",
    "GTestPValue_Single": "%s|P-value of G-test",
    "MutualInf_Multiple": "%s|%s|Mutual information",
    "MutualInf_Single": "%s|Mutual information",
    "NeuralNetOutputDataSet": "Neural network output",
    "NeuralNetOutputVariables": "Summary",
    "PredictedClsIDColumn": "Class ID|Prediction",
    "PredictedClsProbColumn": "Posterior probability",
    "PredictedColumn": "%s|Prediction",
    "TestAvgCE": "Average cross-entropy in the test set",
    "TestAvgError": "The test set mean absolute error",
    "TestAvgRelError": "The test set mean relative error",
    "TestClsErrorPercentage": "Percentage of classification errors in the test set",
    "TestRMSError": "Root-mean-square error in the test set",
    "TestSamples": "Samples in the test set",
    "TotalSamples": "Total samples",
    "TotalSelectedSamples": "Total selected samples",
    "TrainAvgCE": "The average cross-entropy of the training set",
    "TrainAvgError": "The mean absolute error of the training set",
    "TrainAvgRelError": "The mean relative error of the training set",
    "TrainClsErrorPercentage": "Percentage of classification errors of the training set",
    "TrainRMSError": "The root-mean-square error of the training set",
    "TrainSamples": "Samples in the training set"
  },
  "components/neuralnet/NeuralNetParams": {
    "Decay": "Decay parameter",
    "ErrFloatValuesRelation": "\"%s\": parameter value (%f) must not exceed \"%s\" parameter value (%f)",
    "MaxEpochs": "Maximum number of epochs",
    "NRestarts": "Number of restarts",
    "RegNNOutputInf": "Output layer activation function infimum",
    "RegNNOutputSup": "Output layer activation function supremum",
    "WStep": "Minimum weight change threshold"
  },
  "components/neuralnet/NeuralNetVendor": {
    "ClassifierVendorCaption": "Neural Net (classification)",
    "ClassifierVendorDesc": "Trains multilayer perceptron to complete the classification tasks",
    "RegressionVendorCaption": "Neural Net (regression)",
    "RegressionVendorDesc": "Trains multilayer perceptron to complete the regression tasks"
  },
  "components/partition/PartitionEngine": {
    "OutDataSetCommon": "Common output data set",
    "OutDataSetTeach": "Training output data set",
    "OutDataSetTest": "Test output data set",
    "PartitionDisplayName": "Test set"
  },
  "components/partition/PartitionVendor": {
    "VendorCaption": "Partitioning",
    "VendorDesc": "Selection of test and training sets"
  },
  "components/python/PythonComponentSettings": {
    "PythonExe": "Interpreter path",
    "PythonExePassEnv": "Pass node environment variables",
    "PythonLib": "Library path"
  },
  "components/python/PythonEngine": {
    "CodeIsHere": "Data processing code can be here",
    "ConfigureOutputTable": "Preparing output columns",
    "CreateDateFrameFromInputTable": "Create pd.DataFrame from input data set No1",
    "ErrCurrentDirectory": "Failed to get current directory",
    "ErrDisallowedExecution": "Python execution forbidden in security settings",
    "ErrGetNativePath": "Failed to resolve the file system path from the \"%s\" path in the file storage",
    "ErrPythonInProcessNotSupported": "Python execution inside the process is not supported, Python is started in the separate process.",
    "InputPortOptional": "Input port is optional",
    "OutputDataFrameExample": "Resulting output pd.DataFrame",
    "PrepareCompatibleComment": "If \"Allow creating output columns in script\" option is enabled, the output data set structure can be prepared from pd.DataFrame"
  },
  "components/python/PythonEngineImpl": {
    "ErrPreviewPythonIsBusy": "Python is busy. Failed to start preview",
    "ErrVerifyPythonIsBusy": "Python is busy. Failed to start syntax checking",
    "ErrWaitTimeoutElapsed": "Failed to capture Python during the set timeout as Python code is still executing in another node."
  },
  "components/python/PythonExecutor": {
    "DocFileStoragePathFunc": "filestoragepath(path)\n--\n\nResolve the path in the file system from the path in the file storage\nArguments:\n  path: str\n    Path in the file storage.\nResult:\n  Path in the file system.",
    "DocGetLocaleFunc": "getLocale()\n--\n\nGet locale name of the current node\nResult:\n Locale name of the current node under RFC 4646.",
    "ErrNumExprFinalize": "Failed to finalize numexpr module",
    "ErrResNotFound": "%s resource not found",
    "ErrTCLFinalize": "Error occurred during TCL finalization",
    "ErrUnloadExtension": "Error occurred while \"%s\" extension unloading",
    "WarnExecuting": "Python already executing"
  },
  "components/python/PythonExeEngineImpl": {
    "ErrCannotCreateProcess": "Failed to start \"%s\"",
    "ErrInt32Overflow": "Value %d is out of 32-bit integer range",
    "ErrPythonExeNotFound": "Python interpreter path specified in application settings does not exist",
    "ErrRowLimitExceeded": "Maximum table row limit exceeded",
    "PreviewProcess": "Data preview",
    "PythonDumpData": "Writing input data",
    "PythonDumpInputTableData": "Writing input table data",
    "PythonDumpInputTableDataN": "Writing input table #%d data",
    "PythonDumpInputTablesData": "Writing input tables data",
    "PythonExeFailed": "Python interpreter execution finished with error code %d",
    "PythonExeTerminatedBySignal": "Python interpreter execution was interrupted by signal %d",
    "PythonLoadOutputTable": "Reading output table",
    "PythonScriptExecution": "Executing script",
    "ShmBaseDir": "\/dev\/shm\/loginom",
    "WarnPreviewRunning": "Preview already running"
  },
  "components/python/PythonInterface": {
    "ErrPythonDllNotUnloaded": "Failed to unload \"%s\" library from the process memory",
    "ErrPythonDllStillLoaded": "\"%s\" library was not unloaded from the process memory. It can be caused by use of the module unsupported in the Python execution mode inside the application process. Application restart is required for Python operation.",
    "ErrPythonLibraryIncompatibleVersion": "Python version %d.%d is not supported. %d.%d is minimum supported version.",
    "ErrPythonLibraryNotFound": "Python library not found"
  },
  "components/python/PythonModuleData": {
    "ColumnGet": "Get($self, row, \/)\n--\n\nGet column cell value\nArguments:\n  row: int\n    Table row index.\nResult:\n  Cell value according to the column type (bool, int, str, float or datetime.datetime). If the cell is null, None is returned.",
    "ColumnIsNull": "IsNull($self, row, \/)\n--\n\nCheck if there is a value in the column cell\nArguments:\n  row: int\n    Table row index.\nResult:\n  True, if the table cell is null.\n  False, if the table cell contains a value.",
    "ColumnSet": "Set($self, value, \/)\n--\n\nSet value in the column cell of the appended row\nArguments:\n  value: Union[bool, int, str, float, datetime.datetime, None]\n    The value of the type compatible with column (bool, int, str, float, datetime.datetime, datetime.date, datetime.time, time.struct_time and their descendants) or None.\nResult:\n  None",
    "ErrColumnInfoNoRequiredProperty": "Column definition does not contain required '%s' property",
    "ErrInvalidColumnDataKind": "Invalid data kind",
    "ErrInvalidColumnDataType": "Invalid data type",
    "ErrInvalidColumnUsageType": "Invalid usage type",
    "ErrNoCorrespondingObject": "Python object not associated with work object",
    "TableAddColumn": "AddColumn($self, ColumnInfo=None, Name=None, DisplayName=None, DataType=None, DataKind=None, DefaultUsageType=None)\n--\n\nAdd new column\nArguments:\n  ColumnInfo\n    Any object with the column metadata, for example, another column. Name is a required attribute; DisplayName, DataType, DataKind, DefaultUsageType are optional.\n  Name: str\n    Column name.\n  DisplayName: str\n    Column caption.\n  DataType: int\n    Column data type.\n  DataKind: int\n    Column data kind.\n  DefaultUsageType: int\n    Column default usage type.\nResult:\n  A new table column. Unspecified attributes of the new column are initialized with default values.",
    "TableAppend": "Append($self, \/)\n--\n\nAppend new row\n\nResult:\n  None",
    "TableAssignColumns": "AssignColumns($self, source, \/)\n--\n\nCreate columns by decriptions\nArguments:\n  source: Iterable\n    The object returning iterator over the column metadata objects, for example, InputTable.Columns. The column metadata object must contain the Name attribute and optionally DisplayName, DataType, DataKind, DefaultUsageType.",
    "TableClearColumns": "ClearColumns($self, \/)\n--\n\nDelete all columns\nResult:\n  None",
    "TableDeleteColumn": "DeleteColumn($self, col, \/)\n--\n\nDelete column by index or name\nArguments:\n  col: Union[int, str]\n    Index or name of deleted column.\nResult:\n  None",
    "TableGet": "Get($self, row, col, \/)\n--\n\nGet table cell value\n\nArguments:\n  row: int\n    Table row index\n  col: Union[int, str]\n    Index or name of table column\nResult:\n  Cell value according to the column type (bool, int, str, float or datetime.datetime). If the cell is null, None is returned.",
    "TableGetColumn": "GetColumn($self, col, \/)\n--\n\nGet column by index or name\n\nArguments:\n  col: Union[int, str]\n    Index or name of table column\nResult:\n  Table column",
    "TableInsertColumn": "InsertColumn($self, Index, ColumnInfo=None, Name=None, DisplayName=None, DataType=None, DataKind=None, DefaultUsageType=None)\n--\n\nInsert a new column according to the given index\nArguments:\n  Index: int\n    The index according to which the column is inserted.\n  ColumnInfo\n    Any object with the column metadata, for example, another column. Name is a required attribute; DisplayName, DataType, DataKind, DefaultUsageType are optional.\n  Name: str\n    Column name.\n  DisplayName: str\n    Column caption.\n  DataType: int\n    Column data type.\n  DataKind: int\n    Column data kind.\n  DefaultUsageType: int\n    Column default usage type.\nResult:\n  A new table column. Unspecified attributes of the new column are initialized with default values.",
    "TableIsNull": "IsNull($self, row, col, \/)\n--\n\nCheck if there is a value in the table cell\n\nArguments:\n  row: int\n    Table row index\n  col: Union[int, str]\n    Index or name of table column\nResult:\n  True, if the table cell is null.\n  False, if the table cell contains a value.",
    "TableSet": "Set($self, col, value, \/)\n--\n\nSet value in the cell of the appended row\nArguments:\n  col: Union[int, str]\n    Index or name of table column\n  value: Union[bool, int, str, float, datetime.datetime, None]\n    The value of the type compatible with column (bool, int, str, float, datetime.datetime, datetime.date, datetime.time, time.struct_time and their descendants) or None\nResult:\n  None"
  },
  "components/python/PythonUtils": {
    "ErrLoadedExtensionRegistrationFailed": "Error executing service code of Python extensions loading registration",
    "ErrPyObjectAsVariantUnsupported": "Transformation of the passed Python object into the variant type value is not supported",
    "ErrPyObjectFromVariantUnsupported": "Transformation of the passed variant type value into the Python object is not supported",
    "ErrServiceCodeFailed": "Error executing service code for integration with Python"
  },
  "components/python/PythonVendor": {
    "VendorCaption": "Python",
    "VendorDesc": "Python script execution"
  },
  "components/quality/Quality": {
    "ErrOutDataSetIndexOutOfRange": "The output data set index %d is out of [%d; %d] range",
    "GenerationOutputSets": "Output data sets generation",
    "OutData": "Output data set",
    "OutDataExtr": "Extremes",
    "OutDataNull": "Null data",
    "OutDataOut": "Outliers",
    "PaymentAdditionalFeatures": "Calculation of the additional features",
    "ScanningInputData": "Input data scanning",
    "SummaryTable": "Summary table"
  },
  "components/quality/QualityCommon": {
    "ErrUnhandledDataType": "Unhandled data type"
  },
  "components/quality/QualityVendor": {
    "VendorCaption": "Data Quality",
    "VendorDesc": "Data quality assessment"
  },
  "components/reformcolumns/ReformColumns": {
    "ErrExcludeAllColumnsFromProcessing": "Failed to exclude all columns from the further processing"
  },
  "components/reformcolumns/ReformColumnsVendor": {
    "VendorCaption": "Field Features",
    "VendorDesc": "Change field features"
  },
  "components/replace/ReplaceColumns": {
    "ErrSourceGuidNotFound": "No input replacement table with GUID = %s",
    "InputReplaceDataSource": "Substitution table",
    "PrecisionPostfix": " Deviation",
    "ReplacedPostfix": " Replaced",
    "ReplacePostfix": " Replace"
  },
  "components/replace/ReplaceColumnsVendor": {
    "VendorCaption": "Replace",
    "VendorDesc": "Replace field values"
  },
  "components/replace/ReplaceTable": {
    "ErrColumnsCount": "The field number in the input replacement table is less than 2",
    "ErrDataType": "The input replacement table data type does not match the replaced field data type",
    "ErrDuplicateValue": "Duplicate value in the replacement table",
    "ErrInputDataType": "Error getting input data type for \"%s\"",
    "ErrRegExValue": "Invalid regular expression specified",
    "ErrTypeCast": "Error converting value type in the replacement table for \"%s\"",
    "ErrUsageType": "No fields in the input replacement table specified"
  },
  "components/replacevariables/ReplaceVariables": {
    "ReplacePostfix": " Replace"
  },
  "components/replacevariables/ReplaceVariablesVendor": {
    "VendorCaption": "Replace (variables)",
    "VendorDesc": "Replace variable values"
  },
  "components/restclient/RESTClient": {
    "ErrNoInputLink": "Link to input port \"%s\" does not exist, the port contains required fields",
    "ErrNoParamFmt": "\"%s\" input data set field has been assigned for nonexistent \"%s\" parameter",
    "ErrNotCompatibleMessageBodyFmt": "Data type of the input data set field \"%s\" is incompatible with request body",
    "ErrNotCompatibleParamDataTypeFmt": "Data type of the input data set field \"%s\" is incompatible with \"%s\" parameter",
    "HttpStatusCodeColumn": "HTTP Status Code",
    "OutputDataSet": "Service Response",
    "RequestIDOutputColumn": "Request identifier",
    "ResponseColumn": "Server response",
    "RESTClientConnection": "Connection to REST service",
    "RESTClientErrorRowID": "Error executing request generated from row %d of the input data set:\n%s"
  },
  "components/restclient/RESTClientSend": {
    "ErrCodePageNotSupported": "\"%s\" codepage not supported",
    "ErrHTTPHeaderRedefined": "\"%s\" header already exists in the request",
    "ErrNotAcceptableResponseContentType": "Invalid Content-Type received: \"%s\", expected: \"%s\""
  },
  "components/restclient/RESTClientVendor": {
    "VendorCaption": "REST Request",
    "VendorDesc": "Request execution through REST service connection"
  },
  "components/sampling/SamplingVendor": {
    "VendorCaption": "Sampling",
    "VendorDesc": "Selection of representative subset"
  },
  "components/slidingwindow/SlidingWindow": {
    "ErrOutputColCountOverflow": "Too high values are specified for Depth period and\/or Forecast horizon"
  },
  "components/slidingwindow/SlidingWindowVendor": {
    "VendorCaption": "Lag",
    "VendorDescription": "Transpose one or several data columns using lag"
  },
  "components/smoothing/DWT": {
    "ErrLargeOrder": "This wavelet order is not supported"
  },
  "components/smoothing/SmoothingEngine": {
    "ErrNoColumnsForProcessing": "No columns for processing specified",
    "ErrSmoothingAlgorithmError": "Error in the smoothing algorithm",
    "ErrSmoothingLambdaIsNegative": "Lambda parameter set to negative",
    "ErrSmoothingPeriodLessThenTwo": "The smoothing period cannot be less than two",
    "SmoothingDisplayNamePostfix": "_smoothed",
    "SmoothingNotify": "Smoothing"
  },
  "components/smoothing/SmoothingVendor": {
    "VendorCaption": "Smoothing",
    "VendorDesc": "Data smoothing with wavelets"
  },
  "components/sonn/SONNEngine": {
    "ColumnNameCluster": "Cluster number",
    "ColumnNameDistance": "Distance to node",
    "ColumnNameNode": "Node number",
    "ColumnNameUniqueCoordSuffix": "|Coordinate",
    "ColumnNameUniqueValueSuffix": "|Value",
    "ErrClustersRowCountOverflow": "Row count overflow of the \"Cluster Centers\" output data set",
    "ErrNoColumnsForProcessing": "No columns for processing specified",
    "ErrNoModel": "Model is not trained. Training of the node before its application is required",
    "ErrSONNIncorrectSize": "Invalid network size for %s: %d",
    "ErrSONNTypeNotSupported": "\"%s\" type of self-organizing network not supported",
    "ErrWrongModel": "Model does not match the input data",
    "OutDataSetCenters": "Coordinates of nodes",
    "OutDataSetClusters": "Clustering",
    "PrepareDataNotify": "Data preparing",
    "SONNTrainNotify": "Network training"
  },
  "components/sonn/SONNVendor": {
    "VendorCaption": "Self-Organizing Network",
    "VendorDesc": "Data clustering by self-organizing neural networks"
  },
  "components/sorting/Sorting": {
    "CacheNotify": "Caching",
    "SortingNotify": "Data sorting"
  },
  "components/sorting/SortingVendor": {
    "VendorCaption": "Sort",
    "VendorDesc": "Data sorting"
  },
  "components/treetodata/TreeToDataEngine": {
    "ComputeRowCountProcess": "Compute row count",
    "ErrInvalidGlobalIndexDataType": "Invalid data type of the global node index: %s",
    "ErrNoDataNodeSelected": "No data node selected",
    "ErrRowOutOfRange": "Row number %d is out of [%d; %d] range",
    "GlobalIndex": "Global index",
    "PrepareRowIndexesProcess": "Preparation of row indexes"
  },
  "components/treetodata/TreeToDataModelComponentEngine": {
    "InputDataTree": "Input data tree",
    "OutputDataSource": "Output data set"
  },
  "components/treetodata/TreeToDataVendor": {
    "VendorCaption": "Tree to Table",
    "VendorDesc": "Create data table from data tree"
  },
  "components/ungroupdata/UngroupData": {
    "ConfidenceBandLowerDisplayName": "Lower bound 95% CI",
    "ConfidenceBandUpperDisplayName": "Upper bound 95% CI",
    "ErrInSelectOutputFields": "No field with the ungrouped values names specified",
    "ErrInSelectQuotaCalcFields": "No field for quotas calculation selected",
    "ErrInSelectQuotaFields": "No field with quotas selected",
    "ErrInSelectTimeAxisFields": "No fields for data sequentializing selected",
    "ErrInSelectUngroupField": "Ungroupable values field not defined",
    "ErrNoLinksDefined": "No links defined for group identifiers",
    "ErrNoLinksFields": "No related fields to build AVL tree",
    "ErrPostProcessingTerminated": "Error in the ungrouping algorithm! The process has been terminated.",
    "GenerationOutputSets": "Output data sets generation",
    "GroupColumnAVLTreeBuilding": "Group initial data",
    "OutputSIDisplayName": "Seasonal index value",
    "OutputTrendDisplayName": "Trend value",
    "OutputValueAlgorithmFixed": "Fixed (algorithm)",
    "OutputValueDisplayName": "Ungrouped value",
    "OutputValueExcluded": "Excluded",
    "OutputValueInvalid": "Error",
    "OutputValueUnfixed": "Ungrouped (unfixed)",
    "OutputValueUngrouped": "Ungrouped",
    "OutputValueUserFixed": "Fixed (user)",
    "OutputValueUserFixedNotConsistent": "Fixed (user, inconsistent)",
    "OutputVTDescDisplayName": "Value type",
    "OutputVTDisplayName": "Value type code",
    "QuotaAVLTreeBuilding": "Group reference data for quota calculation",
    "QuotaAVLTreeCalc": "Quota calculation",
    "RoundedUngroupValueDisplayNamePostfix": "Rounded",
    "SeasonalIndex": "Seasonal index",
    "SupportInputDataSource": "Data for quota calculation",
    "UngroupInputDataSource": "Ungrouped data",
    "UngroupOutputDataSource": "Ungroup output",
    "UngroupQualityDisplayName": "Ungrouping quality indicator",
    "UngroupStatsDataSource": "Model quality indicators and seasonal indexes"
  },
  "components/ungroupdata/UngroupDataAVLTrees": {
    "ErrDatasetTooSparse": "Set points are too sparse for the given seasonality period",
    "ErrDuplicateGroup": "Each group in the ungroupable set must match a single row",
    "ErrEmptyGroup": "No data belonging to this group in the reference set",
    "ErrNoError": "No errors",
    "ErrNoGroupData": "Group time series is empty",
    "ErrNoSupportData": "No data suitable for ungrouping in the reference set",
    "ErrTrivialGroup": "The group consists of one element"
  },
  "components/ungroupdata/UngroupDataTimeseries": {
    "ErrOutputValueTypeOutOfRange": "Type code out of allowable ranges",
    "ErrWrongTimeseriesKeyDatatype": "Invalid time series key type"
  },
  "components/ungroupdata/UngroupDataTimeseriesModel": {
    "ErrBadlyConditionedMatrix": "(%1:d x %2:d) matrix is singular or ill-conditioned: U[%3:d;%4:d] = 0 in %0:d iteration",
    "ErrDFNotConsistent": "Failed to provide the required number of degrees of freedom",
    "ErrEngineUnassigned": "Engine not set for the ungroup model",
    "ErrOptimGradientVerificationFailed": "Analytical gradient verification failed",
    "ErrOptimIntegrityFailed": "The infinite value of the optimized function or its gradient was detected",
    "ErrSingularMatrixCol": "(%1:d x %2:d) matrix contains zero column #%3:d in %0:d iteration",
    "ErrSingularMatrixRow": "(%1:d x %2:d) matrix contains zero row #%3:d in %0:d iteration",
    "ErrSLECalcPrepare": "Error while preparing the equations system",
    "ErrSLEStructPrepare": "Error while preparing data structures of the equations system",
    "ErrSolver": "%d error when solving the equation system at iteration %d",
    "ErrUnknownTimeAxisDataType": "Unknown time field data type"
  },
  "components/ungroupdata/UngroupDataVendor": {
    "VendorCaption": "Ungroup",
    "VendorDesc": "Ungroup data"
  },
  "components/uniondata/UnionData": {
    "DisplayNamePrefix": "Union",
    "DisplayNamePrefixName": "Result column caption prefix",
    "ErrInvalidColNamePrefix": "\"%s\" name prefix is not a valid identifier",
    "ErrNoActiveInputs": "No active inputs",
    "ErrRowCountExceedMaxValue": "Row count of the result data set exceeded maximum value %d",
    "JoinedDataSource": "Joined table",
    "MainDataSource": "Main table",
    "NamePrefixName": "Result column name prefix"
  },
  "components/uniondata/UnionDataVendor": {
    "VendorCaption": "Union",
    "VendorDescription": "Union of several data sets"
  },
  "components/unionvariables/UnionVariables": {
    "ErrNoActiveInputs": "No active inputs",
    "InputJoinedVariables": "Added variables",
    "InputPortsOverFlow": "Number of input ports exceeded the maximum value = %d",
    "InputVariablesOverFlow": "Number of the input variables exceeded the maximum value = %d"
  },
  "components/unionvariables/UnionVariablesVendor": {
    "VendorCaption": "Variable Union",
    "VendorDesc": "Combine several sets of variables into one"
  },
  "components/variablestodata/VariablesToDataEngine": {
    "DisplayName": "Caption",
    "Name": "Name",
    "Value": "Value"
  },
  "components/variablestodata/VariablesToDataModelComponentEngine": {
    "InputVariables": "Input variables",
    "OutputDataSource": "Output data set"
  },
  "components/variablestodata/VariablesToDataVendor": {
    "VendorCaption": "Variables to Table",
    "VendorDesc": "Create data set from variables set"
  },
  "components/wsdlclient/WSDLClient": {
    "ErrLinuxTimeZoneNotSupported": "\"Default time zone\" configuration is not supported in the Linux application version (\"%s\" time zone is specified)",
    "ErrWindowsTimeZoneNotSupported": "\"%s\" time zone is not supported",
    "FaultNameOutputColumn": "Exception name",
    "FaultsDataSet": "Exceptions (WSDL fault)",
    "FileNotAccessible": "\"%s\" file not available",
    "ImportIDOutputColumn": "Part identifier",
    "OutputDataSet": "Service Response",
    "RawOutputColumn": "Raw Response",
    "RequestIDOutputColumn": "Request Identifier",
    "WSDLClientConnection": "Connection to SOAP service",
    "WSDLClientError": "Error executing request with %s identifier:\n%s",
    "WSDLClientErrorNoID": "Error executing request:\n%s",
    "WSDLClientErrorRowID": "Error executing request generated from row #%d of the input data set:\n%s"
  },
  "components/wsdlclient/WSDLClientBase": {
    "ErrIncorrectWSDLClientRequestConfiguration": "Web service request configuration contains errors",
    "ErrInputSchemaHasChanged": "Input XSD schema does not comply with the node settings.",
    "ErrMapInputNodeTypesMismatch": "The data type of %s column does not match the data type of %s tree node",
    "ErrMappedNodeNotOwnedByRequestTree": "%s node for which input set column selection is requested not included in the request tree",
    "ErrNothingSelected": "No nodes selected for service response import",
    "ErrOperationNotFound": "\"%s\" operation not found in \"%s\" endpoint description of \"%s\" service",
    "ErrOperationNotSelected": "No WSDL operation selected for request execution",
    "ErrPartElementNotFound": "\"%s\" element referenced in \"%s\" part of \"%s\" message of \"%s\" operation not found in XSD schema",
    "ErrPortNotSelected": "No WSDL service endpoint for the request execution selected",
    "ErrResponseNotConfigured": "Service response not configured",
    "ErrTransmissionPrimitiveNotSupported": "Operations with \"%s\" exchange primitive are not supported",
    "ErrUnmappedNodeNotOwnedByRequestTree": "%s node for which link reset is requested is not included in the request tree"
  },
  "components/wsdlclient/WSDLClientVendor": {
    "VendorCaption": "SOAP Request",
    "VendorDesc": "Request execution through connection to WSDL described web service and conversion of the received response into a data set"
  },
  "Embedded/EmbeddedMain": {
    "ErrOpenURL": "Failed to go to the following address: %s",
    "LocalStorageLoadFailed": "Local Storage load failed",
    "LocalStorageSaveFailed": "Local Storage save failed"
  },
  "Embedded/EmbeddedTiny": {
    "EnvVarKDEFileDialog": "NO_LOGINOM_KDE_FILE_DIALOG"
  },
  "exports/database/DBExport": {
    "AddToTableNotify": "Addition of records to table",
    "ConnectProcess": "Connection to DB",
    "CreateTableProcess": "Create table",
    "DeleteFromTableNotify": "Deletion of records from table",
    "ErrCodeDisplayName": "Error Code",
    "ErrColumnNotFound": "\"%s\" column not found in the data source",
    "ErrColumnTypesMismatch": "\"%s\" column type is not compatible with \"%s\" source column type",
    "ErrDataSourceSelect": "No data source mapping provided",
    "ErrDuringExportError": "Error while exporting to DB",
    "ErrExecQuery": "Error executing DB query.",
    "ErrFieldForDeleteNotSelected": "No fields by which data should be deleted specified",
    "ErrFieldForUpdateNotSelected": "No fields to update specified",
    "ErrFillTable": "Failed to fill \"%s\" table",
    "ErrKeyFieldForUpdateNotSelected": "No key field by which data should be updated specified",
    "ErrMsgDisplayName": "Error message",
    "ErrNotConnectedToDatabase": "No connection with database",
    "ErrSyncKeyDeletedDest": "Synchronization error: \"%s\" key field not found in the table",
    "ErrSyncKeyDeletedSource": "Synchronization error: source field not found for \"%s\" key field",
    "ErrSyncKeyTypesMismatch": "Synchronization error: \"%s\" key field type is not compatible with \"%s\" source field type",
    "ErrTableNameNotSelected": "No table name specified",
    "ErrTruncateNotSupported": "TRUNCATE operation not supported by the current database",
    "ErrUpdateNotSupported": "Record update by key not supported by the current database",
    "ExecQueryProcess": "Query executing",
    "GetTablesProcess": "Querying table list",
    "GroupDataNotify": "Data grouping",
    "ResultStatusVariables": "Execution status",
    "TruncateTableNotify": "Executing TRUNCATE table",
    "UpdateRecordsNotify": "Update existing table records",
    "WarnDBConnectionIsBusy": "Connection to DB is busy"
  },
  "exports/database/DBExportVendor": {
    "ResultStatus": "Execution status",
    "VendorCaption": "Database",
    "VendorDesc": "Export to database through configured connection"
  },
  "exports/excelfile/ExportExcelFile": {
    "PropErrErrSheetName": "The excel sheet name cannot contain the following characters: ? * \/ [ ]",
    "PropErrLongSheetName": "Excel sheet name cannot be longer than 31 characters",
    "PropErrNoSheetName": "No sheet name specified",
    "SaveExcelBookProcess": "Saving to file",
    "WriteDataProcess": "Writing data to Excel workbook"
  },
  "exports/excelfile/ExportExcelFileVendor": {
    "VendorCaption": "Excel File",
    "VendorDesc": "Export data to Excel file"
  },
  "exports/kafka/KafkaExport": {
    "ErrDeliveryReportFmt": "Failed to export message: %s",
    "ErrKafkaFlushErrorFmt": "Error when sending Kafka messages \"%s\"",
    "ErrKeyFieldDataType": "Key field must be related to the string or integer type",
    "ErrKeyFieldNotFound": "Key field with \"%s\" name not found",
    "ErrMessageFieldDataType": "Message field must be related to the string type",
    "ErrMessageFieldNotFound": "Message field with \"%s\" name not found",
    "ErrProduceBatchFmt": "No message sent in %d iterations",
    "ExportProcess": "Sending messages to Kafka",
    "FlushProcess": "Messages sending finished",
    "LogProduceInfoFmt": "%d messages for batch from %d added to queue",
    "LogRowSkipedFmt": "Message was not created for row %d. The message or key field contains the null value",
    "PropErrBatchMessagesCount": "Messages count in the batch must not be less than 1",
    "PropErrMessageField": "No field with messages set",
    "PropErrTopic": "No topic set"
  },
  "exports/kafka/KafkaExportVendor": {
    "VendorCaption": "Kafka",
    "VendorDesc": "Export to Kafka queue"
  },
  "exports/native/ExportNative": {
    "ErrLZ4NotAvailable": "LZ4 compression not available",
    "ErrLZONotAvailable": "LZO compression not available"
  },
  "exports/native/ExportNativeVendor": {
    "VendorCaption": "Loginom Data File",
    "VendorDesc": "Export data to Loginom Data file"
  },
  "exports/tableau/ExportTableau": {
    "AddToTableNotify": "Addition of records to table",
    "ErrAPIInit": "Tableau API initialization error",
    "ErrAppendOverwriteForbidden": "It is not possible to append and overwrite records simultaneously",
    "ErrCantCreateEmptyTable": "Failed to create empty table",
    "ErrColumnNotFound": "\"%s\" field not found in the data source",
    "ErrColumnTypesMismatch": "\"%s\" field type is not compatible with \"%s\" source field type",
    "ErrCouldntCreateTable": "Failed to create \"%s\" table",
    "ErrCouldntRewriteTable": "Failed to recreate \"%s\" table",
    "ErrDataSourceSelect": "No data source mapping provided",
    "ErrDuringExport": "Error while exporting to Tableau file",
    "ErrExtensionNotSupported": "\"%s\" extension is not a correct extension of Tableau Extract file",
    "ErrExtractSDKNotFound": "Tableau Extract SDK not installed",
    "ErrFilePath": "Failed to get path to file",
    "ErrFillTable": "Failed to fill \"%s\" table",
    "ErrHyperExtractSDKNotFound": "Tableau Extract API 2.0 SDK not installed",
    "ErrHyperNotSupportedInWin32": "\"*.hyper\" data format suported only in 64-bit software version",
    "ErrMissingServerConnection": "No connection with Tableau server",
    "ErrNoColumnDefs": "Column definitions missing",
    "ErrNoFileStorage": "No file storage found",
    "ErrProjectNameNotSelected": "No project name specified",
    "ErrServerFileNameNotSelected": "No source name specified on server",
    "ErrTableAlreadyExists": "\"%s\" table already exists",
    "ErrTableNameNotSelected": "No table name specified",
    "ErrTableNotFound": "No \"%s\" table found",
    "FileConnection": "Connection to file storage",
    "PublishToServerNotify": "Publish file on server",
    "TableauRestConnection": "Connection to Tableau server"
  },
  "exports/tableau/ExportTableauVendor": {
    "VendorCaption": "Tableau file",
    "VendorDesc": "Data export to Tableau file"
  },
  "exports/textfile/ExportTextFile": {
    "CalculateColumnSizeProcess": "Column width calculating",
    "WriteDataProcess": "Writing data to file"
  },
  "exports/textfile/ExportTextFileVendor": {
    "VendorCaption": "Text File",
    "VendorDesc": "Export data to text file"
  },
  "exports/xml/ExportXML": {
    "ErrCannotProceedWithoutRootElement": "To perform the operation it is required to select the root XML element for export first",
    "ErrExportNotConfigured": "Export tree not configured",
    "ErrIncorrectExportConfiguration": "Errors in configuration",
    "ErrInputSchemaHasChanged": "Input XSD schema does not comply with the node settings.",
    "ErrMapInputNodeTypesMismatch": "The data type of %s column does not match the data type of %s tree node",
    "ErrMappedNodeNotOwnedByExportTree": "%s node for which input set column selection is requested is not included into the export tree",
    "ErrNodeDoesNotDescendFromSelectedRoot": "%s node is not a descendant of the selected %s root element",
    "ErrNodeDoesNotExist": "\"%s\" node not found in XSD schema",
    "ErrNotRootElement": "\"%s\" node is not XSD schema root element",
    "ErrNoXSDInput": "There is no XSD schema at the component input",
    "ErrRootNodeNotSelected": "No root element selected for export",
    "ErrUnmappedNodeNotOwnedByExportTree": "%s node for which link reset is requested is not included into the export tree",
    "ErrXMLExport": "Error exporting XML:\n  Error code: %d\n  %s",
    "ExportDataSetProcessCaption": "Data set exporting",
    "FileConnection": "Connection to file storage",
    "WriteXMLFileProcessCaption": "XML file writing",
    "XSDConnection": "Connection to XSD schema source"
  },
  "exports/xml/ExportXMLVendor": {
    "VendorCaption": "XML File",
    "VendorDesc": "Export data to XML file according to the specified XSD schema"
  },
  "imports/1cv8/1Cv8QueryImport": {
    "ErrInterpretValue": "Failed to convert value from query result to standard type",
    "FillDataSetProcess": "Data importing",
    "NotConnected": "Not connected to infobase",
    "OpenResultSetProcess": "Query opening",
    "PrepareFieldDefsProcess": "Query executing",
    "PreviewProcess": "Data preview"
  },
  "imports/1cv8/1Cv8QueryImportVendor": {
    "VendorCaption": "1C Query",
    "VendorDesc": "1C:Enterprise 8 - Query"
  },
  "imports/database/DBImport": {
    "ConnectProcess": "Connection to DB",
    "ErrCodeDisplayName": "Error Code",
    "ErrExecQuery": "Error executing DB query.",
    "ErrMsgDisplayName": "Error message",
    "ErrNotConnectedToDatabase": "No connection with database",
    "ErrSQLNotSpecified": "SQL query text not specified",
    "ErrTableNotSpecified": "Database table not specified",
    "ExecQueryProcess": "Query executing",
    "ExecTimeoutExpired": "Execution time expired.",
    "GetTablesProcess": "Querying table list",
    "ImportDataProcess": "Data importing",
    "OpenTableProcess": "Table opening",
    "PrepareFieldList": "Field list query",
    "PreviewProcess": "Data preview",
    "ResultStatusVariables": "Execution status",
    "WarnDBConnectionIsBusy": "Connection to DB is busy"
  },
  "imports/database/DBImportVendor": {
    "ResultStatus": "Execution status",
    "VendorCaption": "Database",
    "VendorDesc": "Import from database by configured connection"
  },
  "imports/excelfile/ExcelCustomPreview": {
    "ErrLoadSheetData": "Failed to get Excel worksheet data"
  },
  "imports/excelfile/ImportExcelFile": {
    "ErrBooleanTypeCast": "Failed to convert \"%1:s\" value in \"%0:s\" field to logical value.",
    "ErrColumnExcistFmt": "\"%s\" field already exists",
    "ErrColumnInvalidIdentFmt": "\"%s\" cannot be an identifier",
    "ErrExcelNotOpen": "Operation failed, Excel file not open",
    "ErrGetRealRange": "Excel file is not open. According to the current settings it is impossible to determine the range for data import",
    "ErrInvalidExplicitRange": "Invalid range",
    "ErrNoUsedRange": "Excel workbook error, incorrect sheet range",
    "ErrOpenExcelBook": "Failed to open %s Excel file",
    "ErrParseFmt": "Error occurred while parsing line %d: %s",
    "ErrPropInvalidNamedRange": "Invalid named range",
    "ErrPropInvalidSheetName": "The excel sheet name cannot contain the following characters: ? * \/ [ ]",
    "ErrPropNamedRange": "Named range name not specified",
    "ErrPropNamedRangeNotFound": "\"%s\" named range not found in \"%s\" file",
    "ErrPropSheetName": "Excel sheet name not specified",
    "ErrPropSheetNumber": "Incorrect Excel worksheet index",
    "ErrSheet": "Failed to find Excel sheet",
    "ErrSuggestRange": "Excel file is not open. According to the current settings it is impossible to determine the column count for import",
    "ProcessCaptionOpenExcelFile": "File opening",
    "ProcessCaptionReadData": "Data reading",
    "ProcessCaptionReadMetadata": "Read file metadata"
  },
  "imports/excelfile/ImportExcelFileVendor": {
    "VendorCaption": "Excel File",
    "VendorDesc": "Import data from Excel file"
  },
  "imports/kafka/KafkaImport": {
    "ErrFailedCloseConsumerFmt": "Error when closing Consumer: %s",
    "ErrPollErrorFmt": "Error when receiving Kafka messages \"%s\"",
    "FailedFmt": "Failed: %s",
    "GroupRebalancedFmt": "Group %s rebalanced (memberid %s)",
    "ImportDataProcess": "Read messages from Kafka queue",
    "IncrementalAssignmentRebalancedFmt": "Group %s rebalanced: incremental assignment of %d partition(s) (memberid %s, assignment lost %d, %s rebalance protocol)",
    "IncrementalRevokeRebalancedFmt": "Group %s rebalanced: incremental revoke of %d partition(s) (memberid %s, assignment lost %d, %s rebalance protocol)",
    "KeyDisplayName": "Key",
    "LogLimitReachedFmt": "Maximum number of %d messages reached. Import stopped",
    "MessageDisplayName": "Message",
    "OffsetDisplayName": "Offset",
    "PartitionDisplayName": "Partition",
    "PropErrNoGroupID": "Group identifier not set",
    "PropErrOffsetInvalid": "Offset must be equal or more than 0",
    "PropErrTopic": "Topic not set",
    "RebalanceAssignErrFmt": "Rebalance assign of %d partition(s) failed: %s",
    "RebalanceUnassignErrFmt": "Rebalance unassign of %d partition(s) failed: %s",
    "SubscribeErrFmt": "Failed to subscribe to %d topics: %s",
    "WaitingGroupRebalanceProcess": "Waiting for group rebalance"
  },
  "imports/kafka/KafkaImportVendor": {
    "VendorCaption": "Kafka",
    "VendorDesc": "Import of Kafka queue"
  },
  "imports/native/DDFCommonReader": {
    "ErrHeaderReadError": "Header reading error"
  },
  "imports/native/DDFStreamReader": {
    "BadNativeStringData": "Invalid string data",
    "OutOfMaximumRows": "File contains too many rows"
  },
  "imports/native/DDFTupleCompatibilityReader": {
    "BadNativeStringData": "Invalid string data",
    "BadNativeVariantData": "Invalid Variant data",
    "CanNotConvert": "Failed to convert data to 32-bit format"
  },
  "imports/native/DDFTupleOldRowCachedConverter": {
    "BadNativeStringData": "Invalid string data",
    "UnknownOperation": "Unknown string converter operation"
  },
  "imports/native/DDFTupleOldRowConverter": {
    "BadNativeStringData": "Invalid string data",
    "UnknownOperation": "Unknown string converter operation"
  },
  "imports/native/DDFTupleReader": {
    "BadNativeStringData": "Invalid string data",
    "BadNativeVariantData": "Invalid Variant data",
    "DifferentMetaData": "Metadata does not comply with the previously declared metadata",
    "NegativeRowsCount": "Invalid rows count %d is specified in the file header",
    "OutOfMaximumRows": "File contains too many rows",
    "TypeChangeNotSupported": "Change of \"%s\" column type is not supported in LGD Import"
  },
  "imports/native/DDFTupleRowConverter": {
    "BadNativeStringData": "Invalid string data",
    "BadVariantType": "Unsupported Variant subtype",
    "CanNotConvert": "Failed to convert data to 32-bit format",
    "UnknownOperation": "Unknown string converter operation",
    "UnsupportedOperation": "Operation not supported",
    "VariantArrayNotSupported": "Unsupported arrays in Variant variables",
    "VariantByRefNotSupported": "Unsupported Variant byRef type",
    "VariantTypeNotSupported": "Unsupported Variant type mask"
  },
  "imports/native/DDFTupleVersion2x64Reader": {
    "BadNativeStringData": "Invalid string data",
    "BadNativeVariantData": "Invalid Variant data"
  },
  "imports/native/ImportNative": {
    "ErrFileFormat": "Not Loginom Data file",
    "ErrSignature": "Signature mismatch",
    "ErrSystemUnsupported": "Bitness not supported",
    "ErrVersion": "Invalid version",
    "UnknownCompression": "Unknown compression",
    "WarnCompatibilityMode": "File was opened in compatibility mode"
  },
  "imports/native/ImportNativeVendor": {
    "VendorCaption": "Loginom Data File",
    "VendorDesc": "Import data from Loginom Data file"
  },
  "imports/native/LZ4": {
    "BlockError": "LZ4-block error",
    "ChecksumError": "Checksum error"
  },
  "imports/textfile/ImportTextFile": {
    "ErrBooleanTypeCast": "Failed to convert \"%1:s\" value in \"%0:s\" column to logical value.",
    "ErrDateTimeTypeCast": "Failed to convert \"%1:s\" value in \"%0:s\" column to date\/time.",
    "ErrFloatTypeCast": "Failed to convert \"%1:s\" value in \"%0:s\" column to real number.",
    "ErrIntegerTypeCast": "Failed to convert \"%1:s\" value in \"%0:s\" column to integer.",
    "ErrMaxBytesCountReaded": "While parsing the text file, the reading limit of %d bytes was reached",
    "ErrMaxMultilineLengthReaded": "When parsing the text file, the multiline exceeded maximum length %d character before closing text qualifier was found. The file line number with multiline start: %d. The last file line included into the multiline: %d.",
    "ErrMultilineEofAchieved": "The text file end was reached before closing text qualifier was found. The file line number with multiline start: %d.",
    "ErrParseFmt": "Error occurred while parsing line %d: %s",
    "ErrUnsupportedCodePage": "Codepage %d not supported",
    "ErrUsedColumnDefsNotSpecified": "Imported fields not specified",
    "PrimaryKeyDisplayName": "<Key>"
  },
  "imports/textfile/ImportTextFileVendor": {
    "VendorCaption": "Text File",
    "VendorDesc": "Import data from text file"
  },
  "imports/xml/ImportXML": {
    "ErrImportNotConfigured": "Import tree not configured",
    "ErrInputSchemaHasChanged": "Input XSD schema does not comply with the node settings.",
    "ErrLinuxTimeZoneNotSupported": "\"Default time zone\" configuration is not supported in the Linux application version (\"%s\" time zone is specified)",
    "ErrNothingSelected": "No nodes selected for import",
    "ErrNoXSDInput": "There is no XSD schema at the component input",
    "ErrWindowsTimeZoneNotSupported": "\"%s\" time zone is not supported",
    "ErrXMLImport": "Error importing XML:\n  Error code: %d\n  %s",
    "FileConnection": "Connection to file storage",
    "XSDConnection": "Connection to XSD schema source"
  },
  "imports/xml/ImportXMLVendor": {
    "VendorCaption": "XML File",
    "VendorDesc": "Import data from XML file according to the specified XSD schema"
  },
  "Libraries/1CConnection/1CConnection": {
    "ErrDBPath": "Failed to get path to DB",
    "ErrEmptyConnectionString": "Empty connection string",
    "ErrLocalDBForbidden": "Connections to local databases on server are forbidden"
  },
  "Libraries/1CConnection/1Cv8Connection": {
    "ErrConnect": "1C connection error",
    "ErrConnectionString": "Error in connection string",
    "ErrTestConnection": "1C connection test error",
    "NotConnected": "Not connected to infobase"
  },
  "Libraries/1CConnection/1Cv8ConnectionVendor": {
    "1Cv8ConnectionVendorCaption": "1C:Enterprise 8",
    "1Cv8ConnectionVendorDesc": "Database - 1C:Enterprise 8"
  },
  "Libraries/bgdbrtl/ClickHouse/ClickHouseBlockReader": {
    "ErrColOutOfRange": "Column number %d is out of [%d; %d] range",
    "ErrFetch": "Error occurred while data set reading",
    "ErrGetFieldDesc": "Failed to get descriptions of fields for \"%s\" table",
    "ErrNoSuchSetting": "Configuration parameter with \"%s\" name does not exist",
    "ErrRowOutOfRange": "Row number %d is out of [%d; %d] range"
  },
  "Libraries/bgdbrtl/ClickHouse/ClickHouseBlockWriter": {
    "ErrColNotNullable": "Column \"%s\" (type %s) cannot have Null values",
    "ErrColOutOfRange": "Column number %d is out of [%d; %d] range",
    "ErrColValueLenOutOfRangeString": "String length %d exceeds the length allowed for column \"%s\" (type %s)",
    "ErrColValueOutOfRange": "Value %g is out of allowed range for column \"%s\" (type %s)",
    "ErrColValueOutOfRangeInt": "Value %d is out of allowed range for column \"%s\" (type %s)",
    "ErrConvertFloatToDecimal": "Failed to convert the real value %g to the Decimal value (\"%s\" column)",
    "ErrUnsupportedDataType": "Column data type \"%s\" not supported"
  },
  "Libraries/bgdbrtl/ClickHouse/ClickHouseClient": {
    "ErrInvalidPort": "Invalid port number specified: %s"
  },
  "Libraries/bgdbrtl/ClickHouse/ClickHouseDB": {
    "DatabaseTypeName": "ClickHouse",
    "ErrColumnNotFound": "\"%s\" column not found in target table",
    "ErrInsertDataFormatUnsupported": "\"%s\" data format not supported in INSERT",
    "ErrInsertFormatUnsupported": "Used INSERT format not supported",
    "ErrInsertParamsInvalidCount": "Mismatching count of table fields and parameters",
    "ErrInsertUnsupported": "INSERT queries are not supported, SELECT query is expected",
    "ErrInsertValuesUnsupported": "Only parametrized INSERT supported",
    "ErrNotOwnSession": "Session does not belong to the database",
    "ErrStoredProcUnsupported": "ClickHouse does not support the stored procedures"
  },
  "Libraries/bgdbrtl/ClickHouse/ClickHouseDBUtils": {
    "ErrClickHouse": "ClickHouse error: %s",
    "ErrDate32OutOfRange": "%s date is out of allowable range [%s; %s)",
    "ErrDateOutOfRange": "%s date is out of allowable range [%s; %s]"
  },
  "Libraries/bgdbrtl/DB": {
    "ConnectionTimeout": "Connection timeout",
    "ErrCommandTypeNotYetSupported": "%s type of SQL command not supported yet",
    "ErrConnectionCancelled": "Connection aborted",
    "ErrConnectionString": "Empty connection string",
    "ErrDatabasePathNotExists": "\"%s\" file not found",
    "ErrDBPath": "Failed to get path to DB",
    "ErrExecuteProcedure": "Error executing stored procedure \"%s\"",
    "ErrExecuteQuery": "Error while SQL executing:\n%s",
    "ErrGetFieldDefs": "Error when receiving table fields \"%s\"",
    "ErrIncorrectConnectionString": "Invalid format of connection string",
    "ErrIncorrectDatabase": "Invalid database name",
    "ErrIncorrectPort": "Invalid port",
    "ErrIncorrectServer": "Invalid server",
    "ErrIndexColumnsNotSelect": "No columns to make an index are specified",
    "ErrLocalDBForbidden": "Connections to local databases on server are forbidden",
    "ErrLoginTimeout": "The time for entering the username and password has expired",
    "ErrOpenQuery": "Error while SQL opening :\n%s",
    "ErrParameterTypesDoNotMatch": "Parameter types do not match",
    "ErrPrepareProcedure": "Error preparing stored procedure \"%s\"",
    "ErrPrepareQuery": "SQL preparation error:\n%s",
    "ErrSetSequence": "Sequence initialization error for DB. Old Sequence = %d",
    "ErrTableNameNotSelect": "No table name specified",
    "ErrTestConnection": "Connection test error:\n%s",
    "ErrUnPrepareQuery": "Error clearing prepared query",
    "LockTimeout": "Lock timeout",
    "WarnNoPassword": "Password for connection to \"%s\" not provided",
    "WarnQueryExecuting": "Query already executing"
  },
  "Libraries/bgdbrtl/DBSSL": {
    "DecryptPrivateKey": "Error decrypting private key",
    "ErrFileNoAccess": "\"%s\" file unavailable",
    "ErrFileNotFound": "\"%s\" file not found",
    "ErrGetFileStorage": "No reference to file storage",
    "SSLOptions": "SSL settings"
  },
  "Libraries/bgdbrtl/UniDAC/AccessODBCUniDACDB": {
    "DatabaseTypeName": "MS Access (ODBC)",
    "ErrODBCAccessNotExists": "ODBC driver for connection to MS Access databases not installed"
  },
  "Libraries/bgdbrtl/UniDAC/BigQueryODBCUniDACDB": {
    "DatabaseTypeName": "BigQuery (ODBC)",
    "ErrEmailIsEmpty": "No service account e-mail specified",
    "ErrIncorrectDataset": "Invalid data set name",
    "ErrIncorrectProject": "Invalid project name",
    "ErrKeyFilePathIsEmpty": "Path to the private key file is not specified",
    "ErrKeyFilePathNotExists": "\"%s\" key file not found",
    "ErrODBCBigQueryNotExists": "ODBC driver \"%s\" for connection to BigQuery not installed. Installation packages and brief driver description are available at the following address:",
    "ErrRefreshTokenIsEmpty": "No token specified for authentication",
    "SSLCANotExists": "\"%s\" certificate file not found"
  },
  "Libraries/bgdbrtl/UniDAC/ExcelODBCUniDACDB": {
    "DatabaseTypeName": "MS Excel (ODBC)",
    "ErrODBCExcelNotExists": "ODBC driver for Excel files not installed"
  },
  "Libraries/bgdbrtl/UniDAC/FBUniDACDB": {
    "DatabaseTypeName": "Firebird"
  },
  "Libraries/bgdbrtl/UniDAC/IBUniDACDB": {
    "DatabaseTypeName": "InterBase"
  },
  "Libraries/bgdbrtl/UniDAC/MsSQLOleDbUniDACDB": {
    "DatabaseTypeName": "MS SQL (OLE DB)"
  },
  "Libraries/bgdbrtl/UniDAC/MyUniDACDB": {
    "DatabaseTypeName": "MySQL",
    "ErrLibraryNotFound": "Failed to load MySQL client library (%s)"
  },
  "Libraries/bgdbrtl/UniDAC/ODBCDriverDescs": {
    "ErrIncorrectRegEx": "Error parsing driver name template: %s"
  },
  "Libraries/bgdbrtl/UniDAC/ODBCStringBuilder": {
    "ErrInvalidODBCDriverName": "\"%s\" driver not registered in Loginom",
    "ErrODBCDriverName": "No ODBC driver specified in connection string"
  },
  "Libraries/bgdbrtl/UniDAC/ODBCUniDACDB": {
    "DatabaseTypeName": "ODBC",
    "ErrDriverDoesNotSupportQuotes": "Data source does not support quoted identifiers, \"%s\" driver",
    "ErrFileDSNForbidden": "Connections through file DSN are forbidden",
    "ErrInvalidTableNameRedundantDot": "Redundant number of \".\" delimiters in \"%s\" table name"
  },
  "Libraries/bgdbrtl/UniDAC/OracleUniDACDB": {
    "DatabaseTypeName": "Oracle",
    "ErrInvalidTableNameRedundantDot": "Redundant number of \".\" delimiters in \"%s\" table name"
  },
  "Libraries/bgdbrtl/UniDAC/PostgresUniDACDB": {
    "DatabaseTypeName": "PostgreSQL"
  },
  "Libraries/bgdbrtl/UniDAC/SQLiteUniDACDB": {
    "DatabaseTypeName": "SQLite",
    "ErrBlankConnectionString": "No file name specified",
    "ErrFileNoAccess": "\"%s\" file unavailable",
    "ErrIncorrectFileName": "File name is incorrectly specified, the following characters are prohibited: %s",
    "ErrNotCursor": "The last command in SQL script does not return the cursor",
    "SQLiteError": "SQLite error: ",
    "SQLiteFuncOverridingNotSupported": "Function override for SQLite versions below 3.7.3 not supported"
  },
  "Libraries/bgdbrtl/UniDAC/UniDACDB": {
    "Direct": "Do not use DBMS client",
    "ErrNotOwnSession": "Session does not belong to the database",
    "ServerListInaccessible": "List of DBMS servers unavailable"
  },
  "Libraries/bgrtl/ArchiveManager": {
    "ErrCannotGetFilePath": "Failed to get path to \"%s\" file",
    "ErrExtractCannotCreateFolder": "Failed to create \"%s\" folder while archive extraction",
    "ErrExtractFileNameTaken": "Failed to extract \"%s\" file, a folder with the same name already exists",
    "ErrExtractFolderNameTaken": "Failed to create \"%s\" folder, a file with the same name already exists"
  },
  "Libraries/bgrtl/BetaTestingService": {
    "BetaTestingNameStarting": "LOGINOM_BETA_"
  },
  "Libraries/bgrtl/BigSet": {
    "ErrBitsIndex": "Bit index is out of range",
    "ErrStringIsNotSet": "\"%s\" string is not a valid set representation",
    "ErrSubSetPowerIsZerro": "Attempt to extract all subsets with the power less than 0 or more than the set power as such"
  },
  "Libraries/bgrtl/CachedDataSet": {
    "ErrRowCountLimitReached": "Maximum row count limit reached"
  },
  "Libraries/bgrtl/CachedDataTree": {
    "ErrCannotGetForeignKey": "Failed to get the foreign key for the node with identifier %d: the node is not an array",
    "ErrCannotGetNodeExistFlag": "Failed to get the node exist flag with identifier %d: the node is not a simple container",
    "ErrCannotGetNodeValue": "Failed to get the node value with identifier %d: the node is a container",
    "ErrCannotGetRowCount": "Failed to get the row count for the node with identifier %d: the node is not an array",
    "ErrCannotGetRowRange": "Failed to get the row range for the node with identifier %d: the node is not an array",
    "ErrColumnIndexOutOfRange": "Column number %d is out of [%d; %d] range",
    "ErrInvalidNodeInfo": "Invalid node description: %s",
    "ErrInvalidNodeInfoID": "Invalid node identifier: %d",
    "ErrRowCountLimitReached": "Maximum row count limit reached",
    "ErrRowOutOfRange": "Row number %d is out of [%d; %d] range",
    "ErrTableIndexOutOfRange": "Table number %d is out of [%d; %d] range"
  },
  "Libraries/bgrtl/Classes": {
    "ErrConfigApplyModeNotSupported": "This method of configuration loading not supported",
    "ErrInvalidName": "\"%s\" is not a valid identifier",
    "ErrItemAlreadyExist": "%s with \"%s\" name already exists",
    "ErrItemByGuidNotFound": "%s with %s identifier not found",
    "ErrItemByIDNotFound": "%s with identifier %d not found",
    "ErrItemByNameNotFound": "%s with \"%s\" name not found",
    "ErrItemWithGuidAlreadyExist": "%s with identifier %s already exists",
    "ErrItemWithIDAlreadyExist": "%s with %d identifier already exists",
    "ErrLoadCollectionItemConfig": "Error loading collection item",
    "ErrSameItemsGuid": "\"%s\" and \"%s\" items have the same \"%s\" identifiers",
    "ErrSameItemsID": "\"%s\" and \"%s\" items have the same identifiers \"%d\"",
    "ErrSameItemsName": "\"%s\" and \"%s\" items have the same \"%s\" names",
    "ErrUnableToRecreateNamesIndex": "Failed to recreate node name index",
    "ErrVendorAlreadyRegistered": "\"%s\" vendor has already been registered",
    "ErrVendorNameConverterAlreadyRegistered": "Name converter from \"%s\" to\"%s\" vendors already registered",
    "ItemMetaDesc": "Item"
  },
  "Libraries/bgrtl/ClassFactory": {
    "ClassFactoryMetaDesc": "factory of objects"
  },
  "Libraries/bgrtl/ClassObjectsLocator": {
    "ErrInitChildScope": "Error initializing the context of the added object %p",
    "ErrObjectAlreadyExist": "%s already exists in %s identifier list",
    "ErrObjectNotFound": "%s does not exist in %s identifier list",
    "ObjMetaDesc": "object"
  },
  "Libraries/bgrtl/ClipboardAdapter": {
    "ErrHTMLFormatNotImplemented": "Invalid clipboard format. Only text\/plain is supported",
    "ErrReadForbidden": "It is forbidden to read values",
    "ErrUnsupportedDelimiter": "Only CR+LF and LF line breaks are supported",
    "ErrWriteForbidden": "It is forbidden to write values"
  },
  "Libraries/bgrtl/ColumnDefs": {
    "ColumnMetaDesc": "Column",
    "ErrColumnByUsageNotFound": "Column with usage type \"%s\" not found",
    "ErrColumnCantBeContinuous": "\"%s\" column of \"%s\" type cannot be continuous",
    "ErrSize": "Data size must be more than or equal to zero"
  },
  "Libraries/bgrtl/ColumnDefsVendor": {
    "ErrColumnTypesMismatch": "%s column type is not compatible with %s source column type",
    "ErrInvalidUsageType": "Usage type \"%s\" is not valid for the configurable column \"%s\""
  },
  "Libraries/bgrtl/ColumnInfoLinks": {
    "ErrLinkedColumnInfoNotFound": "Column with %s name not found",
    "ErrLinkedColumnInfoNotSpecified": "No column link set",
    "ErrLinkedColumnInfoTypesMismatch": "%s column type is not compatible with the source column type"
  },
  "Libraries/bgrtl/ColumnsMultiLinks": {
    "ErrAlienLinkedColumn": "\"%s\" field does not belong to any of the used field lists",
    "ErrCannotDeleteNotDynamicLink": "Failed to delete non-dynamic link",
    "ErrCannotLinkColumnsFromSameTable": "Failed to link \"%s\" and \"%s\" columns from the same table",
    "ErrColumnCanBeIncludedInOnlyOneLink": "\"%s\" column of table %d can only be part of a \"single\" link",
    "ErrLinkedColumnTypesMismatch": "Type mismatch between linked columns \"%s\" and \"%s\"",
    "ErrLinkMustContainMainTableColumn": "The main table field must be provided while link is created",
    "ErrMaxOccursOfMultiLinksIsReached": "Maximum multiple links count reached"
  },
  "Libraries/bgrtl/Couplers": {
    "ErrModelSocketCouplerDefAlreadyCoupled": "Already coupled"
  },
  "Libraries/bgrtl/DataSet": {
    "ContainedStatisticsCompute": "Calculate statistics",
    "ErrColOutOfRange": "Column number %d is out of [%d; %d] range",
    "ErrColumnDefsNotAssigned": "Column definitions not initialized",
    "ErrDataSourceActive": "Data set is not in the closed state",
    "ErrDataSourceClosed": "Data set is not in the opened state",
    "ErrDataSourceNotConfigured": "Data set not configured",
    "ErrDataSourceNotEditing": "Data set is not in the edited state",
    "ErrRowOutOfRange": "Row number %d is out of [%d; %d] range",
    "ErrUnexpectedEndUpdate": "Failed to call EndUpdate method without calling BeginUpdate first"
  },
  "Libraries/bgrtl/DataSetColumns": {
    "ErrDataSoureNotAssigned": "No data set reference"
  },
  "Libraries/bgrtl/DataTree": {
    "ErrAlienNodeInfo": "Description of \"%s\" node does not belong to the current tree",
    "ErrCannotAppendNodeBeforeParentNode": "Failed to append \"%s\" node before the parent node",
    "ErrCannotPostNodeBeforeChildNodes": "Post method calling for \"%s\" node before the Post call for the child nodes is forbidden",
    "ErrCannotPostNodeWithoutAppend": "Post method calling for \"%s\" node without the Append call is forbidden",
    "ErrCannotRepeatAppendNode": "Repeated Append calling for \"%s\" node without the Post call is forbidden",
    "ErrCanOnlyAppendContainerOrArray": "Append calling method for \"%s\" node that is not a container or array is forbidden",
    "ErrDataTreeActive": "Data tree is not in the closed state",
    "ErrDataTreeClosed": "Data tree is not in the opened state",
    "ErrDataTreeNotConfigured": "Data tree not configured",
    "ErrDataTreeNotEditing": "Data tree is not in the edited state",
    "ErrIsNotAncestorNode": "\"%s\" node is not ancestor of \"%s\" node",
    "ErrUnexpectedEndUpdate": "Failed to call EndUpdate method without calling BeginUpdate first"
  },
  "Libraries/bgrtl/DataTreeNodeDefs": {
    "ErrCannotInitializeNodeWithDifferentContainerFlag": "Failed to initialize the node from the source node which differs by the container flag value",
    "ErrChangeDataKindNotAllowed": "Failed to change the data kind of the node that is a container",
    "ErrChangeDataTypeNotAllowed": "Failed to change the data type of the node that is a container",
    "ErrChangeIsContainerNotAllowed": "Failed to change the container indicator of a node that is a root node, or contains child nodes",
    "ErrNodeCantBeContinuous": "\"%s\" node of \"%s\" type cannot be continuous",
    "ErrOnlyContainerNodeCanHaveSubNodes": "Only container node can have subnodes",
    "RootNodeDisplayName": "Root"
  },
  "Libraries/bgrtl/DataTreeNodeDefsVendor": {
    "ErrInvalidUsageType": "Usage type \"%s\" is not valid for the configurable node \"%s\"",
    "ErrNodeTypesMismatch": "%s node type is not compatible with %s source node type"
  },
  "Libraries/bgrtl/DateUtils": {
    "AvailableData": "data set",
    "CurrentData": "current date",
    "DayPeriodNameFew": "days",
    "DayPeriodNameMany": "days",
    "DayPeriodNameOne": "day",
    "FirstLastDateFmt": "%s %s %s from %s",
    "MonthPeriodNameFew": "months",
    "MonthPeriodNameMany": "months",
    "MonthPeriodNameOne": "month",
    "QuarterPeriodNameFew": "quarters",
    "QuarterPeriodNameMany": "quarters",
    "QuarterPeriodNameOne": "quarter",
    "WeekPeriodNameFew": "weeks",
    "WeekPeriodNameMany": "weeks",
    "WeekPeriodNameOne": "week",
    "WrongPeriodNameFew": "periods",
    "WrongPeriodNameMany": "periods",
    "WrongPeriodNameOne": "period",
    "YearPeriodNameFew": "years",
    "YearPeriodNameMany": "years",
    "YearPeriodNameOne": "year"
  },
  "Libraries/bgrtl/DelayLoadHook": {
    "ErrInvalidDelayedProc": "No delayed loaded procedure found"
  },
  "Libraries/bgrtl/DelegateHelpers": {
    "ErrWeakDelegateTargetIsDisposed": "Event handler object disposed"
  },
  "Libraries/bgrtl/Delegates": {
    "ErrSingleConnectionPointAdvise": "Connection point supports only one connection",
    "ErrSingleConnectionPointSinkIsNil": "Connection point has no connection"
  },
  "Libraries/bgrtl/DerivedCollectionItemAspects": {
    "ErrCannotChangeDerivedCollectionItemName": "It is not possible to change the derived collection item name",
    "ErrCannotChangeDerivedFieldDataType": "It is not possible to change the derived field data type",
    "ErrCannotDeleteDerivedCollectionItem": "It is not possible to delete the derived collection items",
    "ErrCannotMoveDerivedCollectionItem": "It is not possible to change position of the derived collection items"
  },
  "Libraries/bgrtl/DerivedDataSet": {
    "ErrColumnTypesMismatch": "%s column type is not compatible with %s source column type",
    "ErrNoMappingForRequiredColumn": "The required input column %s has not been mapped to the output column",
    "ErrSourceColumnNotFound": "Failed to find source %s column for output %s column",
    "ErrTargetColumnWithoutSource": "The required output column %s has not been mapped to the input column"
  },
  "Libraries/bgrtl/DerivedDataTree": {
    "ErrCannotGetForeignKey": "Failed to get the foreign key for the node with identifier %d: the node is not an array",
    "ErrCannotGetRowCount": "Failed to get the row count for the node with identifier %d: the node is not an array",
    "ErrCannotGetRowRange": "Failed to get the row range for the node with identifier %d: the node is not an array",
    "ErrInvalidNodeInfoID": "Invalid node identifier: %d",
    "ErrNodeTypesMismatch": "%s node type is not compatible with %s source node type",
    "ErrNoMappingForRequiredNode": "The required input node %s has not been mapped to the output node",
    "ErrSourceNodeNotFound": "Failed to find source %s node for output %s node",
    "ErrTargetNodeWithoutSource": "The output node %s has not been mapped to the input node"
  },
  "Libraries/bgrtl/DerivedVariables": {
    "ErrNoMappingForRequiredVariable": "The required input variable %s has not been mapped to the output variable",
    "ErrSourceVariableNotFound": "Failed to find the source variable %s for the configurable variable %s",
    "ErrTargetVariablesWithoutSource": "The input variable %s has not been mapped to the output variable",
    "ErrVariableTypesMismatch": "%s variable type is not compatible with %s source variable type"
  },
  "Libraries/bgrtl/Encoding": {
    "ErrCodePageNotExist": "Codepage with number %d not supported",
    "ErrConvertToASCII": "\"%s\" string cannot be converted to ASCII encoded string"
  },
  "Libraries/bgrtl/EnumTypInfo": {
    "ErrEnumNotRegistered": "\"%s\" enumeration not registered"
  },
  "Libraries/bgrtl/Exceptions": {
    "ErrUnknownInnerExceptionIsDisposed": "Internal unknown exception of %s type disposed",
    "ExceptionClassFmt": "EXCEPTION CLASS: %s",
    "InnerExceptionTitle": "INTERNAL EXCEPTIONS:",
    "MessageFmt": "MESSAGE: %s",
    "SenderNameFmt": "SENDER: %s",
    "StackTraceFmt": "STACK TRACE:\n%s"
  },
  "Libraries/bgrtl/ExceptUtils": {
    "ErrAbstract": "Abstract method calling %s",
    "ErrAbstractMethod": "Abstract method calling %s.%s",
    "ErrAssign": "Failed to assign property values of %s object to the object values of the unsupported class %s",
    "ErrAssignIntf": "Failed to assign property values of %s object to the object values of the unsupported interface",
    "ErrFieldIsNull": "%s field must be initialized",
    "ErrFloatParamIsNan": "\"%s\" parameter value equal to NaN is not allowed",
    "ErrFunctionRefIsNull": "Reference to %s function must be initialized",
    "ErrInvalidIndex": "Index value %d of \"%s\" parameter is out of [%d; %d] range",
    "ErrInvalidMethodParam": "Invalid value of %s parameter for %s method: \"%s\"",
    "ErrInvalidParam": "Invalid value of %s parameter: \"%s\"",
    "ErrMethodParamIsNull": "%s parameter of %s method must be initialized",
    "ErrMustGreaterOrEqualThan": "Value %g of \"%s\" parameter must be more than or equal to %g",
    "ErrMustGreaterOrEqualThanInt": "Value %d of \"%s\" parameter must be more than or equal to %d",
    "ErrMustGreaterThan": "Value %g of \"%s\" parameter must be more than %g",
    "ErrMustGreaterThanInt": "Value %d of \"%s\" parameter must be more than %d",
    "ErrMustLessOrEqualThan": "Value %g of \"%s\" parameter must be less than or equal to %g",
    "ErrMustLessOrEqualThanInt": "Value %d of \"%s\" parameter must be less than or equal to %d",
    "ErrMustLessThan": "Value %g of \"%s\" parameter must be less than %g",
    "ErrMustLessThanInt": "Value %d of \"%s\" parameter must be less than %d",
    "ErrOutOfRange": "Value %g of \"%s\" parameter is out of range [%g; %g]",
    "ErrOutOfRangeInt": "Value %d of \"%s\" parameter is out of [%d; %d] range",
    "ErrParamIsNull": "%s parameter must be initialized",
    "ErrPropertyIsNull": "%s property must be initialized",
    "ErrPropertyIsReadOnly": "%s property is read-only"
  },
  "Libraries/bgrtl/ExecutionContext": {
    "ErrDeleteValueMismatch": "Failed to retrieve the element with %s key from the execution context that does not match the current element in the context",
    "ErrExecutionContextAlreadyExists": "Failed to install the external execution context: context already exists",
    "ErrExistingExecutionContextIsLocal": "The execution context used is not external",
    "ErrExternalExecutionContextNotInstalled": "The external execution context not installed",
    "ErrKeyNotExist": "No element with %s key in the execution context",
    "ErrUninstallFromParallelThreadNotSupported": "The execution context deletion from the parallel thread is not supported while the thread in which it has been created exists"
  },
  "Libraries/bgrtl/ExportHTMLTable": {
    "ErrTableCellsOverflow": "Number of cells in the exported table exceeds the allowable maximum of %d",
    "ErrTableColsOverflow": "Number of columns in the exported table exceeds the allowable maximum of %d",
    "ErrTableRowsOverflow": "Number of rows in the exported table exceeds the allowable maximum of %d",
    "ErrTableTooManyCols": "Number of columns %d in the exported table exceeds the allowable maximum of %d",
    "ErrTableTooManyRows": "Number of rows %d in the exported table exceeds the allowable maximum of %d",
    "ExcelSheetDefaultName": "Sheet1"
  },
  "Libraries/bgrtl/ExportStream": {
    "ErrDataProducerCloseFail": "Error occurred while closing the data generator: %s",
    "ErrReadAfterForceStop": "Failed to read: stream was forcedly stopped."
  },
  "Libraries/bgrtl/Extensions": {
    "ErrBaseExtensionMultipleFound": "There are several extensions for %s base identifier",
    "ErrBaseExtensionNotFound": "No extension for %s base identifier found",
    "ErrDeleteExtension": "Failed to delete extension with index %d",
    "ErrExtensionAlreadyExists": "\"%s\" extension already exists",
    "ErrExtensionAlreadyInitialized": "Extension already initialized",
    "ErrExtensionsInstanceDestroyForbidden": "Explicit deletion of the extension list instance is forbidden",
    "ErrNotSupportedExtensionVendor": "%s extension not supported",
    "ExtensionVendorMetaDesc": "extension vendor",
    "ExtLoadErrConfigNotFound": "%s extension not loaded as configuration not found",
    "ExtLoadErrVendorNotFound": "Extension not loaded as %s extension vendor not found",
    "SynchronizeExtensionsQuery": "The following configured extensions differ from the original ones:\n%s.\n\nDo you want to sync all extensions?"
  },
  "Libraries/bgrtl/ExtensionsStd": {
    "DisplayFormatExtensionCaption": "Display Format"
  },
  "Libraries/bgrtl/ExternalColumnDef": {
    "ErrColumnCantBeContinuous": "\"%s\" column of \"%s\" type cannot be continuous"
  },
  "Libraries/bgrtl/FieldInfoLinks": {
    "ErrLinkedFieldInfoNotFound": "Field with %s name not found",
    "ErrLinkedFieldInfoNotSpecified": "No link to column or variable set",
    "ErrLinkedFieldInfoTypesMismatch": "%s field type is not compatible with the source field type"
  },
  "Libraries/bgrtl/FileMask": {
    "ACCDBFilesDesc": "MS Access 2007 Database",
    "AllExcelFilesDesc": "Excel files",
    "AllFilesDesc": "All files",
    "AllSQLiteFilesDesc": "SQLite database",
    "AllTableauFilesDesc": "Tableau Data Extracts",
    "BMPFilesDesc": "Bitmaps",
    "CertFilesDesc": "Certificate",
    "DbfFilesDesc": "dBase files",
    "DdfFilesDesc": "DDF file",
    "DocFilesDesc": "MS Word documents",
    "EMFFilesDesc": "Extended metafile",
    "FdbFilesDesc": "Firebird database",
    "GdbFdbFilesDesc": "IB\\FB database",
    "GdbFilesDesc": "InterBase database",
    "GIFFilesDesc": "GIF format",
    "HlpFilesDesc": "Help file",
    "HtmFilesDesc": "Webpages",
    "HyperFilesDesc": "Tableau Hyper Extracts",
    "ICOFilesDesc": "Icon",
    "JPGFilesDesc": "JPEG format",
    "JSFilesDesc": "JavaScript files",
    "JSONFilesDesc": "Text file for data exchange",
    "KeyFilesDesc": "Private key",
    "LgdFilesDesc": "Loginom Data file",
    "LogFilesDesc": "Registration log files",
    "MASK_LGD_FILES": "*.lgd",
    "MASK_LGP_FILES": "*.lgp",
    "MdbFilesDesc": "MS Access database",
    "MhtFilesDesc": "Web archive, one file",
    "ODSFilesDesc": "OpenDocument spreadsheet",
    "P12FilesDesc": "PKCS #12 files",
    "PDFFilesDesc": "PDF documents",
    "PYFilesDesc": "Python files",
    "RtfFilesDesc": "Files in RTF format",
    "SELFilesDesc": "Request files",
    "SHPFilesDesc": "Shape format",
    "SQBFilesDesc": "Query designer files",
    "SQLFilesDesc": "SQL files",
    "SupportedExcelFilesDesc": "Excel files",
    "SupportedLgdFilesDesc": "Loginom Data files",
    "SysFilesDesc": "Configuration files",
    "TdeFilesDesc": "Tableau Extracts",
    "TxtFilesDesc": "Text files",
    "WMFFilesDesc": "Metafile",
    "WSDLFilesDesc": "Web service description files",
    "XlsbFilesDesc": "Excel 2007 binary workbook",
    "XlsFilesDesc": "MS Excel files",
    "XlsmFilesDesc": "Excel 2007 binary macro-enabled workbook",
    "XlsxFilesDesc": "Excel 2007 workbook",
    "XMLFilesDesc": "XML files",
    "XSDFilesDesc": "XML schema files",
    "XslXsltFilesDesc": "XML transformation file"
  },
  "Libraries/bgrtl/FileStorageEngine": {
    "ErrCreateDirectory": "Failed to create folder: %s",
    "ErrCreateFile": "Failed to create file: %s",
    "ErrDirectoryAlreadyMounted": "Directory with %s name is already mounted",
    "ErrDirectoryNotExist": "\"%s\" directory does not exist",
    "ErrFileAccess": "Error accessing file: %s",
    "ErrFileNotExist": "\"%s\" file does not exist",
    "ErrFileStorageNotConnected": "File storage not connected",
    "ErrInvalidBackupFileName": "Invalid backup file name: %s",
    "ErrInvalidCurrentDirectory": "Invalid current directory: %s",
    "ErrInvalidMountedDirectoryName": "Invalid mounted directory name: %s",
    "ErrMountedDirectoryPathIsNotAbsolutePath": "The specified path to the mounted directory is not an absolute path: \"%s\"",
    "ErrNoMountedDirectories": "No directories mounted",
    "ErrOpenFile": "Failed to open file: %s",
    "ErrParentFileStorageNotConnected": "Root file storage not connected",
    "ErrTestConnection": "Connection test error:\n%s"
  },
  "Libraries/bgrtl/FormatHook": {
    "Args": "Parameters",
    "ErrFormat": "Format error",
    "Format": "Format",
    "Message": "Error"
  },
  "Libraries/bgrtl/HTML": {
    "ErrItemAlreadyExists": "CSS item with \"%s\" name already exists",
    "ErrItemByNameNotFound": "CSS element with \"%s\" name not found",
    "ExcelSheetDefaultName": "Sheet1"
  },
  "Libraries/bgrtl/InterfacesScope": {
    "ErrInitializeChild": "Error initializing context of object %p",
    "ErrInterfacesScopeAlreadyInitialized": "Contect container already initialized",
    "ObjectNotFound": "Context does not contain the object with %s identifier"
  },
  "Libraries/bgrtl/IntfClasses": {
    "ErrAlienItem": "The processed item does not belong to the specified list"
  },
  "Libraries/bgrtl/IntfStream": {
    "ErrStreamIsReadOnly": "The data stream is open in the read-only mode",
    "ErrStreamReadBuffer": "When reading bytes from the data stream, %1:d was read instead of %0:d",
    "ErrStreamReadBufferInvalidParams": "Invalid parameter values when reading from the data stream: Length = %d; Count = %d; Offset = %d",
    "ErrStreamReadBufferLength": "When reading from the data stream, the resulting buffer size of %d is less than the number of bytes %d required for reading",
    "ErrStreamSeekOutOf2GbRange": "When moving, the cursor of the data stream went beyond 2 GB, it is required to use the 64-bit version of the function",
    "ErrStreamWriteBuffer": "When writing bytes to the data stream, %1:d was written instead of %0:d",
    "ErrStreamWriteBufferInvalidParams": "Invalid parameter values when writing to the data stream: Length = %d; Count = %d; Offset = %d",
    "ErrStreamWriteBufferLength": "When writing to the data stream, the initial buffer size of %d is less than the number of bytes %d required for writing"
  },
  "Libraries/bgrtl/LocaleUtils": {
    "ErrLocaleNotSupported": "\"%s\" locale not supported",
    "LocaleName": "Locale"
  },
  "Libraries/bgrtl/MathUtils": {
    "ErrBadMatrix": "Two-dimensional dynamic array is not rectangular matrix"
  },
  "Libraries/bgrtl/MSequence": {
    "ErrMSequenceCountOutOfBounds": "The required M-sequence length must be more than 0",
    "ErrMSequenceSetValueErr": "The shift register value cannot be equal to zero or exceed the sequence length."
  },
  "Libraries/bgrtl/OpenArray": {
    "ErrVariantToVarRec": "Failed to convert the Variant variable to the TVarRec value due to the unsupported data type %d of the Variant variable",
    "ErrVarRecToVariant": "Failed to convert the TVarRec variable to the Variant value due to the unsupported data type %d of the TVarRec variable"
  },
  "Libraries/bgrtl/OperationBracketsAssist": {
    "ErrActionAlreadyBeginning": "Action has already been started",
    "ErrActionCookieInvalidOwner": "The object action Cookie belongs to another object",
    "ErrActionNotBeginning": "Action hasn't been started",
    "ErrOwnerDiposedBeforeActionCookie": "The object has been disposed before the object action Cookie"
  },
  "Libraries/bgrtl/ProgressTracker": {
    "ErrCannotChangeMaxSavedProcessCount": "Failed to change the maximum count of saved processes: buffer of saved processes has already been used",
    "ErrUnableAddChildToTerminatedProcess": "Failed to add subprocess to the incorrectly terminated process"
  },
  "Libraries/bgrtl/QueueException": {
    "ErrAggregateExceptionMessage": "Exceptions occurred while processing",
    "ErrQueueExceptionEndUnexpected": "Attempt to end the queued exception block handling without its start"
  },
  "Libraries/bgrtl/ScalarUtils": {
    "ErrScalarToValue": "Error converting value from the scalar data type",
    "ErrValueToScalar": "Error converting value to the scalar data type"
  },
  "Libraries/bgrtl/SemverUtils": {
    "BuildMetadata": "built metadata",
    "ErrCaretRangeVersionMaskFormat": "Version mask must have the following format: ^Major[.Minor[.Patch[-Pre-releaseVersion]]]",
    "ErrIdentifierContainsInvalidCharacter": "\"%s\" identifier contains invalid character: %s",
    "ErrInvalidVersionMask": "\"%s\" is not a valid version mask",
    "ErrInvalidVersionNumber": "\"%s\" is not a valid version number",
    "ErrTildeRangeVersionMaskFormat": "Version mask must have the following format: ~Major[.Minor[.Patch[-Pre-releaseVersion]]]",
    "ErrVersionFormat": "Version must have the following format: Major.Minor.Patch[-Pre-releaseVersion][+Built Metadata]",
    "ErrVersionPartContainsEmptyIdentifier": "\"%s\" part contains an empty identifier: \"%s\"",
    "ErrVersionPartHasLeadingZero": "\"%s\" version number element contains leading zero",
    "ErrVersionPartIsEmpty": "\"%s\" part is an empty string",
    "ErrVersionPartIsNegative": "\"%s\" version number element is negative",
    "ErrXRangeVersionMaskFormat": "Version mask must have the following format: [Major.[Minor.]]*",
    "PreReleaseVersion": "prerelease version"
  },
  "Libraries/bgrtl/ServiceVariables": {
    "ErrServiceVariablesAlreadyInitialized": "Service variables have already been initialized"
  },
  "Libraries/bgrtl/SortUtils": {
    "ErrQuickSelectLeftRight": "The left bound %d has been set higher than the right one %d in QuickSelect function"
  },
  "Libraries/bgrtl/SparseArray": {
    "ErrItemNotExist": "Item with index %d does not exist"
  },
  "Libraries/bgrtl/StatisticConstraintsVariableExtension": {
    "StatisticConstraintsVariableExtensionCaption": "Statistic Constraints"
  },
  "Libraries/bgrtl/Statistics": {
    "ComputeStatistics": "Calculate statistics",
    "ErrDataSourceNotAssigned": "No data set reference",
    "ErrNullsNotAllowed": "Null values are not allowed (null value in \"%s\" column)",
    "ErrProcessKeptStatistics": "Errors occurred while calculating the list of unique values",
    "ErrProcessKeptStatisticsNonExistentNull": "Previously missing null value was found in \"%s\" field",
    "ErrProcessKeptStatisticsNonExistentValue": "Previously missing \"%1:s\" value was found in \"%0:s\" field",
    "ErrStatisticsBuildCookieInvalidOwner": "The statistics builder Cookie belongs to another object",
    "ErrStatisticsBuildCookieIsNil": "Attempt to complete the calculation completion operation with null reference to the statistics builder Cookie"
  },
  "Libraries/bgrtl/StatUniqueValues": {
    "ErrLoadRefCount": "The array length of the values count does not match the unique values count",
    "ErrNotImplemented": "This functionality not implemented",
    "ErrOrderIndexesLength": "The index array length does not match the unique values count",
    "ErrWrongSyncClass": "Invalid synchronization source class. Expected instance of %s class, actually %s"
  },
  "Libraries/bgrtl/StrDateUtils": {
    "ErrInvalidDateTime": "\"%s\" string cannot be converted to the date\/time value"
  },
  "Libraries/bgrtl/Streams": {
    "ErrCachedStreamSeek0AfterLargeRead": "It is not possible to move to the stream start as %d bytes already are read and it exceeds %d cache size"
  },
  "Libraries/bgrtl/StrUtils": {
    "ErrInvalidBoolean": "\"%s\" string cannot be converted to the boolean value",
    "ErrInvalidFloat": "\"%s\" string cannot be converted to the real type value",
    "ErrInvalidHexStr": "\"%s\" string is not a valid view of the sexadecimal number",
    "LocaleInvariant": "Invariant",
    "NotSet": "Unspecified",
    "NullValue": "<Null>"
  },
  "Libraries/bgrtl/SyncObjs": {
    "ErrSlimReadWriteLockDebugDowngradeToRead": "Failed to decreaase the lock level of synchronizer %p from write lock to read lock without first increasing the level",
    "ErrSlimReadWriteLockDebugFinalized": "Synchronizer %p finalized",
    "ErrSlimReadWriteLockDebugLockRead": "Failed to lock for reading synchronizer %p that has already been locked from the same stream",
    "ErrSlimReadWriteLockDebugLockWrite": "Failed to lock for writing synchronizer %p that has already been locked from the same stream",
    "ErrSlimReadWriteLockDebugTryUpgradeToWrite": "Failed to increase the lock level of synchronizer %p from read lock to write lock without first locking it for reading",
    "ErrSlimReadWriteLockDebugTryUpgradeToWriteSameThread": "Incorrect call of the method required to increase the synchronizer lock level %p from read lock to write lock",
    "ErrSlimReadWriteLockDebugUnLockRead": "Failed to release read lock from synchronizer %p without first blocking it for reading",
    "ErrSlimReadWriteLockDebugUnLockWrite": "Failed to release write lock from synchronizer %p without first blocking it for writing",
    "ErrSpinLockFinalize": "Synchronizer %p cannot be used as it has already been finalized",
    "ErrWaitCount": "Invalid count of %d objects for waiting operation"
  },
  "Libraries/bgrtl/SysHeap": {
    "ErrObjectDeleteRefCount": "Failed to delete the object of %s class due to interface references to it: %d"
  },
  "Libraries/bgrtl/System": {
    "ErrConvertDateTimeToBool": "Failed to convert the Date\/time value %g to the boolean value",
    "ErrConvertDateTimeToInt": "Failed to convert the Date\/time value %g to integer",
    "ErrConvertFloatToBool": "Failed to convert the real value %g to the boolean value",
    "ErrConvertFloatToDateTime": "Failed to convert the real value %g to the Date\/time value",
    "ErrConvertFloatToInt": "Failed to convert the real value %g to integer",
    "ErrConvertIntToDateTime": "Failed to convert the integer value %d to the Date\/time value",
    "ErrConvertIntToFloat": "Failed to convert the integer value %d to the real number without accuracy loss",
    "ErrConvertIntToSet": "Failed to convert number %d of %d bits to the set of %d bits",
    "ErrConvertSetToInt": "Failed to convert the set of %d bits to the number of %d bits",
    "ErrDestroyCallForbidden": "Direct call of destructor is forbidden",
    "ErrIIDNotSupported": "Interface with %s identifier not supported by the object",
    "ErrInterfaceNotSupported": "%s interface not supported by object",
    "ErrInvalidClassTypecast": "The object is not a descendant of %s class",
    "ErrInvalidGUID": "Failed to convert \"%s\" row to GUID",
    "ErrMaxEndThreadProcCountReached": "Failed to register more than %d procedures of finalization for a stream",
    "ErrObjectDeleteRefCount": "Failed to delete the object of %s class due to interface references to it: %d",
    "ErrObjectIsNil": "Null object reference",
    "ErrObjectIsNilFmt": "Null %s object reference"
  },
  "Libraries/bgrtl/SysUtils": {
    "ErrCopyPasteRecursive": "\"%s\" folder cannot be copied into itself",
    "ErrCutPasteRecursive": "\"%s\" folder cannot be moved into itself",
    "ErrDirectoryNotExists": "\"%s\" folder does not exist",
    "ErrFileMapping": "\"%s\" file mapping error"
  },
  "Libraries/bgrtl/TextStream": {
    "ErrBadUnicodeStream": "Source data stream has invalid Unicode format",
    "ErrCodePageNotSupported": "Codepage with number %d not supported",
    "ErrReadAfterEnd": "Attempted to read outside the file",
    "ErrStreamNotAssigned": "Source data stream not initialized"
  },
  "Libraries/bgrtl/ThreadPool": {
    "ErrCannotChangeParams": "Failed to change the thread pool parameters upon start of its applying",
    "ErrCannotWaitForSelf": "Failed to wait for completion of the same task inside the task",
    "ErrJoin": "One or several subtasks failed",
    "ErrThreadPoolDestroyed": "The task cannot be completed because the thread pool containing it has been deleted",
    "ErrWorkItemIsNull": "Reference to task object not initialized"
  },
  "Libraries/bgrtl/TimeZones": {
    "ErrCantOpenKey": "Error attempting to read %s registry key: %s (error code %d)"
  },
  "Libraries/bgrtl/Trees": {
    "ErrTreeWalk": "This tree walk implementation is missing",
    "ErrUnableToRecreateNamesIndex": "Failed to recreate node name index",
    "NodeMetaDesc": "Node",
    "RootDisplayName": "Root"
  },
  "Libraries/bgrtl/TuneDataSource": {
    "ErrInputColumnInfoNotFound": "Failed to find source %s column for configurable %s column",
    "ErrInputColumnInfoTypesMismatch": "%s column type is not compatible with %s source column type",
    "ErrInvalidUsageType": "Usage type \"%s\" is not valid for the configurable column \"%s\""
  },
  "Libraries/bgrtl/TuneDataTree": {
    "ErrInputNodeInfoNotFound": "Failed to find source %s node for the configurable node %s",
    "ErrInputNodeInfoTypesMismatch": "%s node type is not compatible with %s source node type",
    "ErrInvalidUsageType": "Usage type \"%s\" is not valid for the configurable node \"%s\""
  },
  "Libraries/bgrtl/TuneVariables": {
    "ErrInvalidUsageType": "Usage type \"%s\" is not valid for the configurable variable \"%s\"",
    "ErrSourceVariableAssigned": "Failed to edit the custom variable value for which the source variable is set",
    "ErrSourceVariableNotFound": "Failed to find the source variable %s for the configurable variable %s",
    "ErrVariableTypesMismatch": "%s variable type is not compatible with %s source variable type"
  },
  "Libraries/bgrtl/Tuple": {
    "BadNativeArrayStringData": "Invalid relative string reference format",
    "BadNativeData": "Invalid data",
    "BadNativeStringData": "Invalid string data",
    "BadVariantData": "Invalid Variant data",
    "BadVariantStringData": "Invalid format of Variant variable string data",
    "BadVariantType": "Unsupported Variant subtype",
    "IncompatibleTuples": "Tuple structures are incompatible",
    "VariantArrayNotSupported": "Unsupported arrays in Variant variables",
    "VariantByRefNotSupported": "Unsupported Variant byRef type",
    "VariantTypeNotSupported": "Unsupported Variant type mask"
  },
  "Libraries/bgrtl/TupleStrUtils": {
    "BadNativeStringData": "Invalid string data"
  },
  "Libraries/bgrtl/TupleVarUtils": {
    "BadNativeArrayStringData": "Invalid Variant array string data",
    "BadVariantArrayData": "Invalid Variant array data",
    "BadVariantData": "Invalid Variant data",
    "BadVariantType": "Unsupported Variant subtype",
    "CanNotConvert": "Failed to convert data to 32-bit format"
  },
  "Libraries/bgrtl/TypInfo": {
    "ErrEnumVendorInfoManagerNotRegistered": "Enumeration description manager not registered",
    "ErrTypeInfoVariableManagerNotRegistered": "Variable manager for %s type not registered"
  },
  "Libraries/bgrtl/UniqueValues": {
    "ErrNullAsValueChangeForbidden": "NullAsValue parameter value of a non-empty list of unique values cannot be changed",
    "ErrNullsNotAllowed": "Addition of the null values to the unique values list is forbidden",
    "ErrValueAlreadyExists": "\"%s\" value already exists in the list of unique values"
  },
  "Libraries/bgrtl/UniqueValuesData": {
    "UniqueValuesDataAlreadyInitialized": "Unique value data has already been initialized"
  },
  "Libraries/bgrtl/UpdateHelpers": {
    "ErrEndUpdateUnexpected": "Attempting to complete the update process without first starting it",
    "ErrLockCookieInvalidOwner": "The locked object Cookie belongs to another object",
    "ErrLockCookieIsNil": "Attempt to complete the operation with null reference to the locked object Cookie",
    "ErrUnlockUnexpected": "Attempt to unlock the object that has not been previously locked",
    "ErrUpdateCookieInvalidOwner": "The updated object cookie belongs to another object",
    "ErrUpdateCookieIsNil": "Attempt to complete the operation with null reference to the updated object Cookie"
  },
  "Libraries/bgrtl/URIUtils": {
    "ErrInvalidDomainName": "Invalid domain name",
    "ErrPunycodeOverflow": "Overflow in Punycode algorithm",
    "MalformedUTF8PercentEncodedSequence": "Invalid percent-encoded UTF8 sequence"
  },
  "Libraries/bgrtl/Utils": {
    "DaysNick": "days",
    "ErrIsNotValidSet": "\"%s\" string is not a valid set representation"
  },
  "Libraries/bgrtl/VariableDefs": {
    "ErrVariableByUsageNotFound": "Variable with \"%s\" usage type not found",
    "VariableMetaDesc": "Variable"
  },
  "Libraries/bgrtl/VariableInfoLinks": {
    "ErrLinkedVariableInfoNotFound": "Variable with %s name not found",
    "ErrLinkedVariableInfoNotSpecified": "No reference to variable specified",
    "ErrLinkedVariableInfoTypesMismatch": "%s variable type is not compatible with the source variable type"
  },
  "Libraries/bgrtl/Variables": {
    "ErrUnexpectedEndUpdate": "Failed to call EndUpdate method without calling BeginUpdate first",
    "ErrVariablesAlreadyEditing": "Variables already in the editing process",
    "ErrVariablesNotActive": "Variables not active",
    "ErrVariablesNotConfigured": "Variables not configured",
    "ErrVariablesNotEditing": "Variables not editable"
  },
  "Libraries/bgrtl/VariablesMultiLinks": {
    "ErrAlienLinkedVariable": "\"%s\" variable does not belong to any variable list being used",
    "ErrCannotDeleteNotDynamicLink": "Failed to delete non-dynamic link",
    "ErrCannotLinkVariablesFromSameTable": "Failed to link \"%s\" and \"%s\" variables from the same table",
    "ErrLinkedVariableTypesMismatch": "Type mismatch between linked variables \"%s\" and \"%s\"",
    "ErrLinkMustContainMainTableVariable": "When creating link, the main table variable must be provided",
    "ErrMaxOccursOfMultiLinksIsReached": "Maximum multiple links count reached",
    "ErrVariableCanBeIncludedInOnlyOneLink": "\"%s\" variable of table %d can only be part of a \"single\" link"
  },
  "Libraries/bgrtl/VariablesVendor": {
    "ErrInvalidUsageType": "Usage type \"%s\" is not valid for the configurable variable \"%s\"",
    "ErrVariableTypesMismatch": "%s variable type is not compatible with %s source variable type"
  },
  "Libraries/bgrtl/VarUtils": {
    "ErrConvertStrToType": "Error converting \"%s\" string to %s value",
    "ErrConvertToOpenArrayInvalidParams": "Invalid parameter values when converting the Variant vector to the open array: Length(Result) = %d; Length(Value) = %d; Count = %d; Offset = %d",
    "ErrInvalidBoolean": "\"%s\" string cannot be converted to the boolean value"
  },
  "Libraries/bgrtl/Vendors": {
    "ErrObjectNotFound": "%s does not exist in %s identifier list",
    "VendorGroupMetaDesc": "vendor group",
    "VendorMetaDesc": "vendor"
  },
  "Libraries/bgrtl/ZipArchive": {
    "ErrArchiveFormat": "Archive is damaged, failed to open",
    "ErrArchiveNotOpen": "Archive not open",
    "ErrCompressErr": "Data compression error",
    "ErrCompressStream": "Compressed data stream error",
    "ErrCreateReadStream": "Failed to create a read stream until the write stream is finished",
    "ErrCreateWriteStream": "Failed to create the write stream",
    "ErrDeleteFile": "Failed to update file headers",
    "ErrDirectoryEndRecordx64": "Failed to find directories in archive",
    "ErrFileExists": "%s file already exists in the archive",
    "ErrIdentName": "File with %s name already exists in the archive",
    "ErrIndexOutOfRange": "Out of range index",
    "ErrMultipleTransactions": "Adding several files to the archive in parallel is not supported",
    "ErrReopenArchive": "Failed to constantly open archive",
    "ErrReWriteLocalFileHeader": "Error updating local file header",
    "ErrSeekRead": "It is possible to move only forward in the data stream",
    "ErrSeekWrite": "Failed to move along the data stream",
    "ErrWriteAfterEnd": "Stream already completed",
    "ErrWrongHMAC": "Data encryption error",
    "ErrWrongPassword": "Wrong password"
  },
  "Libraries/ChakraCore/ChakraClasses": {
    "ErrDefineProperty": "Failed to set \"%s\" property",
    "ErrDisposeRuntime": "Error while disposing JavaScript runtime environment",
    "ErrHandlingPromiseRejection": "Error while uncaught Promise errors processing",
    "ErrOriginalDll": "Operation is not supported. Inncompatible version of ChakraCore library is used.",
    "ErrPromiseContinuation": "Unhandled exception when queuing JavaScript events",
    "ErrRaiseException": "Unhandled exception inside JavaScript built-in function: \"%s\"",
    "ErrRaiseModuleException": "Unhandled exception when loading JavaScript module",
    "ErrTooFewArgs": "Few arguments supplied to %s function (%d whereas %d is minimum number)",
    "ErrTooManyArgs": "Many arguments supplied to %s function (%d whereas %d is maximum number)",
    "ErrUnhandledPromiseRejection": "Unhandled Promise error",
    "ErrUnhandledPromiseRejections": "Unhandled Promise errors",
    "ErrUntrackedPromiseRejection": "Unhandled exception when tracking rejected Promise"
  },
  "Libraries/ChakraCore/ChakraRunRes": {
    "BadSerializedScript": "Service JavaScript code in %s resource incorrectly serialized, non-serialized code executed",
    "ErrResNotFound": "%s resource not found",
    "ErrRunServiceCode": "Failed to execute service JavaScript-code (source: %s)"
  },
  "Libraries/ChakraCore/ChakraUtils": {
    "ErrLibraryVersionNotFound": "%s ^%d.%d library not found"
  },
  "Libraries/ChakraCore/ChakraValue": {
    "ErrJsValuetAsVariantUnsupported": "Transformation of the passed JavaScript object into the variant type value is not supported"
  },
  "Libraries/Config/Config": {
    "ErrAttributeNotExist": "%s attribute does not exist.",
    "ErrConfigElementAlien": "The configuration element does not belong to the specified list",
    "ErrConfigElementByNameNotFound": "Configuration element with %s name not found",
    "ErrRefToClassNotInitOrWrongClass": "Collection reference has not been initialized or relates to an invalid class",
    "ErrUnmatchedAttrType": "Error occurred while accessing %s attribute value of %s type as the value of %s type",
    "ErrUnsupportedPropertyType": "Unsupported property type.",
    "ErrVectorLengthOverflow": "Length of array %d exceeds the allowable %d limit",
    "ErrWrongElementsClass": "Invalid configuration node list class"
  },
  "Libraries/Config/ConfigBackupManagers": {
    "AddAnnotationCaptionDef": "Annotation Added",
    "AddConnectionCaption": "\"%s\" Connection Added",
    "AddConnectionCaptionDef": "Connection Added",
    "AddLinkCaption": "\"%s.%s\" - \"%s.%s\" Link Added",
    "AddLinkCaptionDef": "Link Added",
    "AddNodeCaption": "\"%s\" Node Added",
    "AddNodeCaptionDef": "Node Added",
    "AddVendorCaption": "\"%s\" Component Added",
    "AddVendorCaptionDef": "Component Added",
    "AddViewCaption": "\"%s\" Visualizer Added",
    "AddViewCaptionDef": "Visualizer Added",
    "ComposeGenericCaption": "Nodes Composed in \"%s\" Supernode",
    "ComposeGenericCaptionDef": "Nodes Composed in Supernode",
    "ConfigureNodeCaption": "Configured \"%s\" Node",
    "ConfigureNodeCaptionDef": "Node Configured",
    "ConfigureNodePortCaption": "Configured \"%s\" port of \"%s\" node",
    "ConfigureNodePortCaptionDef": "Node Port Configured",
    "DeleteAnnotationCaptionDef": "Annotation Deleted",
    "DeleteConnectionCaption": "Delete \"%s\" connection",
    "DeleteConnectionCaptionDef": "Delete Connection",
    "DeleteLinkCaption": "\"%s.%s\" - \"%s.%s\" Link Deleted",
    "DeleteLinkCaptionDef": "Delete Link",
    "DeleteNodeCaption": "\"%s\" Node Deleted",
    "DeleteNodeCaptionDef": "Node Deleted",
    "DeleteVendorCaption": "\"%s\" Component Deleted",
    "DeleteVendorCaptionDef": "Component Deleted",
    "DeleteViewCaption": "\"%s\" Visualizer Deleted",
    "DeleteViewCaptionDef": "Visualizer Deleted",
    "ErrLinkIsNil": "No link set",
    "ErrModelNodeNotRestored": "Failed to restore \"%s\" node",
    "ErrModelPackageNotExist": "The package to which the object belonged was closed",
    "ErrNodeBlocked": "\"%s\" node is locked",
    "ErrNodeIsNil": "No node specified",
    "ExplodeGenericCaption": "Expanded \"%s\" supernode",
    "ExplodeGenericCaptionDef": "Expanded supernode",
    "MoveLinkCaption": "\"%s.%s\" - \"%s.%s\" Link Moved",
    "MoveLinkCaptionDef": "Link Moved",
    "SetPackageVarsCaption": "\"%s\" Package Variables Set",
    "SetPackageVarsCaptionDef": "Package Variables Set"
  },
  "Libraries/Config/ConfigBackupService": {
    "ErrBackupManagerNotRegistered": "Class not registered for \"%s\" identifier",
    "ErrBackupMarkerDelete": "Attempt to delete the current backup point: \"%s\"",
    "ErrBackupPointIncorrect": "Rollback to backup point \"%s\" failed",
    "ErrBackupPointInitialize": "Backup point initialization error: \"%s\"",
    "ErrBackupPointRollBack": "Failed to restore point: \"%s\"",
    "ErrBackupPointUpdate": "Failed to update point: \"%s\"",
    "ErrCookieInvalidOwner": "The locked object Cookie belongs to another object",
    "ErrCookieIsNil": "Attempt to complete the operation with null reference to the locked object Cookie",
    "ErrRollBackAggregateMessage": "Errors occurred during recovery",
    "ErrRootBackupContainerFinish": "Attempt to close root recovery point"
  },
  "Libraries/Config/ConfigBinary": {
    "ErrAttrTypeMismatch": "\"%s\" attribute data type mismatch",
    "ErrInvalidUTFInt": "Error reading packed integer number",
    "ErrUnknownConfigBinaryStream": "Unsupported configuration data stream",
    "ErrUnsupportedConfigBinaryStreamVersion": "Unsupported version of configuration data stream %d"
  },
  "Libraries/Config/ConfigFile": {
    "ErrLoadConfigFile": "Configuration file loading error: %s",
    "ErrSaveConfigFile": "Configuration file saving error: %s"
  },
  "Libraries/Config/ConfigScheme": {
    "ErrAttributeByNameNotFound": "Schema attribute with \"%s\" name not found.",
    "ErrDuplicateAttributeName": "Type of \"%s\" schema contains more than one attribute with \"%s\" name",
    "ErrElementByNameNotFound": "Schema element with \"%s\" name was not found.",
    "ErrItemNameNotFound": "Enumeration item with \"%s\" name was not found.",
    "ErrSameAttributeAndElementName": "Type of \"%s\" schema contains attribute and element with the same \"%s\" name",
    "ErrTypeByNameNotFound": "Type with \"%s\" name not found.",
    "ValueDesc": "Value"
  },
  "Libraries/Config/ConfigUtils": {
    "ErrConfigSchemeTypesMismatch": "Type of %s schema of the loaded configuration is not compatible with the schema type of %s object"
  },
  "Libraries/Config/ConfigWrappers": {
    "ErrBaseElementGuidNotExists": "No base element for the derived collection element with %s identifier",
    "ErrBaseElementIDNotExists": "No base element for the derived collection element with identifier %d",
    "ErrBaseElementNameNotExists": "No base element for the derived collection element with %s name",
    "ErrBaseElementNotExists": "No base element for the derived collection element",
    "ErrConfigElementByNameNotFound": "Configuration element with %s name not found",
    "ErrDuplicateDerivedItemGuids": "The collection contains more than one item derived from the item with %s identifier",
    "ErrDuplicateDerivedItemIDs": "The collection contains more than one item derived from the item with identifier %d",
    "ErrDuplicateDerivedItemNames": "The collection contains more than one item derived from the item with %s name",
    "ErrDuplicateSequenceItemGuidOverride": "The collection contained base and derived items with the same unique identifier %s. The base item was ignored",
    "ErrDuplicateSequenceItemGuids": "The collection contains more than one item with %s identifier",
    "ErrDuplicateSequenceItemIDChanged": "The collection contained base and derived items with the same identifier %d. The derived item identifier was changed to %d",
    "ErrDuplicateSequenceItemIDOverride": "The collection contained base and derived items with the same identifier %d. The base item was ignored",
    "ErrDuplicateSequenceItemIDs": "The collection contains more than one item with identifier %d",
    "ErrDuplicateSequenceItemNameChanged": "The collection contained base and derived items with the same %s name. The derived item was renamed to %s",
    "ErrDuplicateSequenceItemNameOverride": "The collection contained base and derived items with the same %s name. The base item was ignored",
    "ErrDuplicateSequenceItemNames": "The collection contains more than one item with %s name",
    "ErrGetConfigWriterItemByIndexNotSupported": "Getting derived configuration item by index not supported",
    "ErrGetConfigWriterItemCountNotSupported": "Getting derived item count of the configuration not supported",
    "HintConvertAtomicConfigElement": "When reading the atomic element of %s configuration converting will be performed"
  },
  "Libraries/Config/ConfigXML": {
    "ErrErrorReadingAttribute": "Failed to read the value of attribute \"%s\"",
    "ErrInvalidBoolean": "\"%s\" string cannot be converted to the boolean value",
    "ErrInvalidChar": "\"%s\" string cannot be converted to the \"character\" value",
    "ErrInvalidFloat": "\"%s\" string cannot be converted to the real type value",
    "ErrXmlParseError": "XML parsing error: message \"%s\", row %d, column %d"
  },
  "Libraries/Config/DelphiConfigScheme": {
    "ErrBindedConfigSchemeTypeNotFound": "Binded configuration schema type for %s type not found",
    "ErrConfigSchemeTypeAlreadyExist": "%s configuration schema type has already been added to the schema",
    "ErrUnsupportedPropertyType": "Unsupported property type"
  },
  "Libraries/Config/LoadConfigContext": {
    "ErrCannotLoadSomeConfigElements": "Failed to load some configuration elements"
  },
  "Libraries/DataPartition/LearnPartition": {
    "ErrNotReadyYet": "Partition method not implemented"
  },
  "Libraries/DataPartition/Partition": {
    "AVLTreeBuilding": "Group data",
    "BiasedSamplingDesc": "Biased sampling",
    "ErrInSelectFields": "No fields have been selected that define the stratum.",
    "ErrPartitionMethod": "No sampling method specified",
    "ErrSamplingRecordCount": "The selected row count %d is out of range [%d; %d]",
    "ErrSamplingRecordPercent": "The selected row percentage %d is out of range [%d; %d]",
    "RandomSamplingDesc": "Random sampling",
    "RandomUniformSamplingDesc": "Group sampling",
    "SequenceSamplingDesc": "Sequence sampling",
    "StratifiedSamplingDesc": "Stratified sampling",
    "TeachDataSet": "Training set selection",
    "TestDataSet": "Test set selection"
  },
  "Libraries/DataPartition/PartitionIndexGenerator": {
    "ErrExternalColumnNotReady": "No external partition column specified"
  },
  "Libraries/DataSampling/Sampling": {
    "AVLTreeBuilding": "Group data",
    "BiasedSamplingDesc": "Biased sampling",
    "ErrInSelectFields": "No fields have been selected that define the stratum.",
    "ErrSamplingMethod": "No sampling method specified",
    "RandomSamplingDesc": "Random sampling",
    "RandomUniformSamplingDesc": "Group sampling",
    "SequenceSamplingDesc": "Sequence sampling",
    "StratifiedSamplingDesc": "Stratified sampling"
  },
  "Libraries/DataSampling/SamplingBuilder": {
    "SplitIntoIntervals": "Interquantile separation"
  },
  "Libraries/DBConnection/ClickHouse/ClickHouseDBConnectionVendor": {
    "VendorCaption": "ClickHouse",
    "VendorDesc": "ClickHouse DBMS"
  },
  "Libraries/DBConnection/UniDAC/AccessODBCUniDACDBConnectionVendor": {
    "VendorCaption": "MS Access",
    "VendorDesc": "MS Access (ODBC) DBMS"
  },
  "Libraries/DBConnection/UniDAC/BigQueryODBCUniDACDBConnectionVendor": {
    "VendorCaption": "BigQuery",
    "VendorDesc": "Google BigQuery (ODBC)"
  },
  "Libraries/DBConnection/UniDAC/ExcelODBCUniDACDBConnectionVendor": {
    "VendorCaption": "MS Excel",
    "VendorDesc": "MS Excel File (ODBC)"
  },
  "Libraries/DBConnection/UniDAC/FBUniDACDBConnectionVendor": {
    "VendorCaption": "Firebird",
    "VendorDesc": "Firebird DBMS"
  },
  "Libraries/DBConnection/UniDAC/IBUniDACDBConnectionVendor": {
    "VendorCaption": "InterBase",
    "VendorDesc": "InterBase DBMS"
  },
  "Libraries/DBConnection/UniDAC/MsSQLOleDbUniDACDBConnectionVendor": {
    "VendorCaption": "MS SQL",
    "VendorDesc": "MS SQL (OLE DB) DBMS"
  },
  "Libraries/DBConnection/UniDAC/MyUniDACDBConnectionVendor": {
    "VendorCaption": "MySQL",
    "VendorDesc": "MySQL DBMS"
  },
  "Libraries/DBConnection/UniDAC/ODBCUniDACDBConnectionVendor": {
    "VendorCaption": "ODBC",
    "VendorDesc": "ODBC data access driver"
  },
  "Libraries/DBConnection/UniDAC/OracleUniDACDBConnectionVendor": {
    "VendorCaption": "Oracle",
    "VendorDesc": "Oracle DBMS"
  },
  "Libraries/DBConnection/UniDAC/PostgresUniDACDBConnectionVendor": {
    "VendorCaption": "PostgreSQL",
    "VendorDesc": "PostgreSQL DBMS"
  },
  "Libraries/DBConnection/UniDAC/SQLiteUniDACDBConnectionVendor": {
    "VendorCaption": "SQLite",
    "VendorDesc": "SQLite DB"
  },
  "Libraries/FileConnection/ExportFileModelComponentEngine": {
    "ErrFileNameEmpty": "File name cannot be empty"
  },
  "Libraries/FileConnection/FileConnectionVendor": {
    "FileConnectionVendorCaption": "Files",
    "FileConnectionVendorDesc": "Folder with files"
  },
  "Libraries/FileConnection/ImportFileModelComponentEngine": {
    "ErrFileNameEmpty": "File name cannot be empty",
    "ErrFileNotFound": "\"%s\" file not found",
    "FileName": "File name",
    "FileTimeDisplayName": "Modification time"
  },
  "Libraries/KafkaConnection/KafkaAuth": {
    "ErrFileNoAccess": "\"%s\" file unavailable",
    "ErrFileNotFound": "\"%s\" file not found",
    "ErrGetFileStorage": "No reference to file storage",
    "PropErrNoPassword": "Password not specified",
    "PropErrNoUsername": "Username not specified"
  },
  "Libraries/KafkaConnection/KafkaConnection": {
    "ErrKafkaConnectFmt": "Failed to connect to Kafka %s cluster: %s",
    "PropErrNoServer": "No Kafka cluster specified"
  },
  "Libraries/KafkaConnection/KafkaConnectionVendor": {
    "KafkaConnectionVendorCaption": "Kafka",
    "KafkaConnectionVendorDesc": "Kafka connector"
  },
  "Libraries/KafkaConnection/KafkaUtils": {
    "DebugCallBackMsgFmt": "%s|%s| %s",
    "ErrUnableToCreateConsumer": "Failed to create Consumer - %s",
    "ErrUnableToCreateProducer": "Failed to create Producer - %s",
    "LogErrKafkaCallBackFmt": "Kafka error: \"%s\", reason: \"%s\""
  },
  "Libraries/LDAP/LDAPConfigurator": {
    "Account": "User",
    "BaseDN": "Base",
    "ConnectionSecurity": "Connection security",
    "DefaultUserRole": "New user role",
    "Filter": "Filter",
    "FullNameAttribute": "Full name attribute",
    "Host": "Host",
    "NameAttribute": "Name attribute",
    "Password": "Password",
    "Port": "Port",
    "UseSASL": "Use SASL"
  },
  "Libraries/libxml2/LibXml2": {
    "ErrLibXml2Common": "libxml2 error (code %d): %s",
    "ErrLibXml2Unknown": "Unknown error libxml2",
    "ErrXMLParse": "Error parsing XML (line %d, position %d): %s",
    "ErrXMLParseUrl": "Error parsing XML at address \"%s\" (line %d, position %d): %s"
  },
  "Libraries/libxml2/LibXslt": {
    "LibXsltNotLoaded": "%s library not found"
  },
  "Libraries/Log/Logger_Journald": {
    "LibSystemdNotLoaded": "libsystemd.so library not found"
  },
  "Libraries/Log/Logger_Log4D": {
    "LogAnsiCodePage": "0"
  },
  "Libraries/Log/LoggerConfigurator": {
    "ErrCannotConfigureLogger": "Failed to use logging parameters",
    "LoggerType": "Logging type",
    "MinLogLevel": "Logging level",
    "NeedDN": "Resolve domain names",
    "NeedPackageName": "Log the package name for the node"
  },
  "Libraries/Log/LoggerConfigurator_Log4D": {
    "LogFileMaxIndex": "Number of backup files",
    "LogFileMaxSize": "Maximum file size",
    "LogFileName": "File name",
    "LogFileRewrite": "Rewrite file"
  },
  "Libraries/Math/AutoCorrelation": {
    "ErrNullData": "Data contains null values"
  },
  "Libraries/Math/LagOpPolynom": {
    "ErrPrepareLagMatrixIncorrectData": "Incorrect data passed to PrepareLagMatrix procedure"
  },
  "Libraries/Math/MatrixAlgebra": {
    "ErrBadMatrix": "Two-dimensional dynamic array is not rectangular matrix",
    "ErrDeterminantIsZero": "It is impossible to calculate the inverse matrix: determinant is zero."
  },
  "Libraries/Math/SparseSolvers": {
    "ErrCreateSolver": "Error creating sparse solver with type: %s",
    "ErrNoMatrixOrRhs": "Matrix or right side not set",
    "ErrNonSquareSuperMatrixNotSupportedYet": "Solver SuperLU does not support non-square matrices yet",
    "ErrSizesNotEqual": "The matrix column count and dimension of the right part\/solution do not match",
    "ErrSuperLUSolver": "SuperLU Solver procedure failed",
    "ErrSuperMatrixNotConverted": "Matrix not converted to SuperLU format",
    "ErrWrongArrayType": "Unsupported array type: %s",
    "ErrWrongMatrixType": "Unsupported matrix type: %s"
  },
  "Libraries/Math/Splines": {
    "ErrLinearFunctionReferencePoints": "Invalid coordinates to create linear function",
    "ErrUnknownSparseSolver": "Unknown sparse solver type: %s",
    "ErrWrongSplineType": "Invalid spline type for %s: %s algorithm"
  },
  "Libraries/Math/SplineTrend": {
    "ErrBuildSeasonalIndexesSolver": "Solver error %d when calculating seasonal indices",
    "ErrBuildTrendPSpline": "Error %d of the smoothing spline calculation procedure during trend building",
    "ErrSITimePointsExceedLimits": "Data points for seasonal indexes calculation must be within the following limits [0; Period)",
    "ErrTrendSmoothingNotSet": "The trend calculation procedure was called without specifying smoothing parameters"
  },
  "Libraries/Math/StatDistributions": {
    "ErrNotImplemented": "Functionality not implemented"
  },
  "Libraries/Math/StatUtils": {
    "ErrArraysDifferentLength": "Arrays have different lengths: %d and %d",
    "ErrInvalidBinsCount": "The specified bin count %d is less than 2",
    "ErrInvalidProbabilityValue": "Probability value %f is out of range [0;1]",
    "ErrNotImplemented": "Functionality not implemented"
  },
  "Libraries/Model/ComponentInputSocketConstraintDef": {
    "ErrInterfaceNotSupported": "Input and output ports are incompatible",
    "ErrInterfaceNotSupportedEx": "%s interface not supported"
  },
  "Libraries/Model/ComponentSettings": {
    "Disabled": "Execution forbidden",
    "ErrSettingIncompatibleType": "Value of incompatible type was passed to \"%s\" setting",
    "ErrSettingNotExists": "\"%s\" setting does not exist",
    "ErrSettingsAlreadyInitialized": "Settings already initialized"
  },
  "Libraries/Model/Connections/Connections": {
    "WarnTestingInProcess": "Testing already executing"
  },
  "Libraries/Model/Connections/ConnectionVendor": {
    "ConnectionVendorMetaDesc": "connection vendor"
  },
  "Libraries/Model/Connections/ConnectionVendorGroups": {
    "ConnectionVendorGroupMetaDesc": "connection vendor group",
    "DBConnectionVendorGroupCaption": "Data Sources"
  },
  "Libraries/Model/Connections/ConnectionVendorGroupsCommon": {
    "BusinessAppVendorGroupCaption": "Business Applications",
    "DatabaseVendorGroupCaption": "Databases",
    "FileDataBaseVendorGroupCaption": "File Databases",
    "UniDBIntfVendorGroupCaption": "Universal Drivers",
    "WareHouseVendorGroupCaption": "Data Warehouses",
    "WebServerVendorGroupCaption": "Web Services"
  },
  "Libraries/Model/Connections/ModelConnectionComponentEngine": {
    "Connection": "Connection"
  },
  "Libraries/Model/Connections/ModelConnectionComponentEngineVendor": {
    "ErrConnectionVendorMustBelongToGroup": "Connection vendor must belong to at least one group"
  },
  "Libraries/Model/Connections/ModelConnectionWorkFlow": {
    "ErrAlienConnectionNode": "\"%s\" connection does not belong to the current connection list",
    "ErrNodeIsNotConnectionReference": "\"%s\" node is not a connection reference",
    "ErrNodeNotInitialized": "\"%s\" node not initialized",
    "ErrNoReferencedConnection": "\"%s\" node does not refer to any connections",
    "ReplaceReferenceWithDerivedCaption": "\"%s\" Connection Node Replaced by Derived Node"
  },
  "Libraries/Model/DataSet/DataSourceModelComponentEngine": {
    "InputDataSource": "Input data source",
    "OutputDataSource": "Output data set"
  },
  "Libraries/Model/DataSet/DataSourceMultiInputDataSetOutputModelComponentEngine": {
    "InputDataSource": "Input data source",
    "OutputDataSet": "Output data set"
  },
  "Libraries/Model/DataSet/DataSourceMultiInputModelComponentEngine": {
    "InputDataSource": "Input data source",
    "OutputDataSource": "Output data set"
  },
  "Libraries/Model/DataSet/DataSourceMultiOutputModelComponentEngine": {
    "InputDataSource": "Input data source",
    "OutputDataSource": "Output data set"
  },
  "Libraries/Model/DataSet/DataSourceOutputSocket": {
    "Columns": "Columns",
    "Rows": "Rows"
  },
  "Libraries/Model/DataSet/DataSourceVariablesMultiInputDataSetOutputModelComponentEngine": {
    "InputVariables": "Input variables"
  },
  "Libraries/Model/DataSet/DataSourceVariablesMultiInputModelComponentEngine": {
    "InputVariables": "Input variables"
  },
  "Libraries/Model/DataSet/DataToVariablesModelComponentEngine": {
    "InputDataSource": "Input data source",
    "OutputVariables": "Output variables"
  },
  "Libraries/Model/DataSet/ExportModelComponentEngine": {
    "InputConnection": "Connection",
    "InputDataSource": "Data source"
  },
  "Libraries/Model/DataSet/ImportModelComponentEngine": {
    "InputConnection": "Connection",
    "OutputDataSet": "Data set"
  },
  "Libraries/Model/DataSet/InputDataSourceSocketDef": {
    "InputDataSourceSocketDefVendorCaption": "Table"
  },
  "Libraries/Model/DataSet/OutputDataSourceSocketDef": {
    "OutputDataSourceSocketDefVendorCaption": "Table"
  },
  "Libraries/Model/DataSet/SocketFieldInfoLinks": {
    "ErrFieldInfoDoesNotBelongToComponent": "\"%s\" field does not belong to the current component"
  },
  "Libraries/Model/DataTree/DataTreeModelComponentEngine": {
    "InputDataTree": "Input data tree",
    "OutputDataTree": "Output data tree"
  },
  "Libraries/Model/DataTree/InputDataTreeSocketDef": {
    "InputDataTreeSocketDefVendorCaption": "Data tree"
  },
  "Libraries/Model/DataTree/OutputDataTreeSocketDef": {
    "OutputDataTreeSocketDefVendorCaption": "Data tree"
  },
  "Libraries/Model/DerivedModelComponent": {
    "ErrCannotUpdateConfigDefault": "Failed to update configuration of the derived supernode before activation. Unsupported configuration of nodes dependence was used.",
    "ErrCannotUpdateConfigDesignMode": "Failed to update configuration of the derived supernode before activation. Try to update configuration of the current supernode manually."
  },
  "Libraries/Model/DerivedModelComponentVendor": {
    "BaseNode": "Base node",
    "ErrBaseComponentAlreadyExists": "Base component already exists",
    "ErrBaseComponentNotInitialized": "The node base component not initialized",
    "ErrBaseComponentVendorNotSpecified": "No vendor defined for the base node component",
    "ErrBaseNodeConfigNotFound": "Base node configuration not found",
    "ErrBaseNodeNotFound": "Base node not found",
    "ErrCircularInheritanceForbidden": "Circular inheritance of components is not possible",
    "ErrDerivedComponentVendorGuidNotFound": "No GUID of derived component found",
    "ErrDerivedNodesNotAllowed": "Creation of derived nodes by %s component is not allowed",
    "ErrIncompatibleBaseComponentVendor": "Base and derived components are incompatible",
    "ErrParentVendorIsDeleted": "Base component deleted",
    "ErrParentVendorNotFound": "Base component not found",
    "ErrUnknownCouplerDefType": "Unknown type of the coupler definition",
    "UpdateBaseConfigNodeLocked": "Failed to update configuration of derived \"%s\" component: base node locked"
  },
  "Libraries/Model/DerivedModelUnitAspects": {
    "ErrCannotChangeDerivedName": "It is not possible to change the derived ports name",
    "ErrCannotChangeDerivedSocketType": "It is not possible to change the derived ports data type",
    "ErrCannotDeleteDerivedConnections": "It is not possible to delete the derived connections",
    "ErrCannotDeleteDerivedSocket": "It is not possible to delete the derived ports",
    "ErrCannotDeleteDerivedVendors": "It is not possible to delete the derived components"
  },
  "Libraries/Model/Generic/ModelGenericComponent": {
    "ErrInputSocketDefsEmptyName": "No name of the following inputs specified: ",
    "ErrOnlySinglePortCanHaveEmptyName": "Port name can be unspecified only if the port is single",
    "ErrOutputSocketDefsEmptyName": "No name of the following outputs specified: ",
    "ErrUntypedInputSocketDefs": "The following input types are not specified: ",
    "ErrUntypedOutputSocketDefs": "The following output types are not specified: "
  },
  "Libraries/Model/Generic/ModelGenericComponentEngine": {
    "ActivateOuterData": "External data",
    "ErrInnerNodesLocked": "Internal Supernode nodes locked",
    "ErrInvalidModelLockContext": "Supernode already locked in another operation",
    "ErrLockedNodesExist": "Supernode contains locked nodes"
  },
  "Libraries/Model/Generic/ModelGenericComponentVendor": {
    "GenericVendorCaption": "Supernode"
  },
  "Libraries/Model/Generic/ModelGenericSocketItems": {
    "ErrOptionalChangeNotSupported": "The port related to this type does not support optionality flag change"
  },
  "Libraries/Model/Generic/ModelInnerComponent": {
    "ErrAlreadyConfiguringInnerSocket": "The external port component has already been configuring"
  },
  "Libraries/Model/Generic/ModelInputComponent": {
    "ErrInnerOutputSocketDefsEmptyName": "No name of the following inputs specified: ",
    "ErrOnlySinglePortCanHaveEmptyName": "Port name can be unspecified only if the port is single",
    "ErrUntypedInnerOutputSocketDefs": "The following input types are not specified: "
  },
  "Libraries/Model/Generic/ModelInputComponentVendor": {
    "VendorCaption": "Input Node"
  },
  "Libraries/Model/Generic/ModelOutputComponent": {
    "ErrInnerInputSocketDefsEmptyName": "No name of the following outputs specified: ",
    "ErrOnlySinglePortCanHaveEmptyName": "Port name can be unspecified only if the port is single",
    "ErrUntypedInnerInputSocketDefs": "The following output types are not specified: "
  },
  "Libraries/Model/Generic/ModelOutputComponentVendor": {
    "VendorCaption": "Output Node"
  },
  "Libraries/Model/ModelBlocks": {
    "Position": "Position"
  },
  "Libraries/Model/ModelCommon": {
    "ErrPortParentIsNil": "Reference to the node port is not included into list",
    "ErrPortsParentNodeIsNil": "The node port list does not belong to any node"
  },
  "Libraries/Model/ModelComponent": {
    "ErrAlreadyConfiguringSocket": "The node component is in the port configuring state",
    "ErrInvalidComponentEngineImplementation": "Invalid component engine implementation",
    "ErrModelComponentAlreadyInitialized": "The node component already initialized",
    "ErrUnknownCouplerDefType": "Unknown type of the coupler definition"
  },
  "Libraries/Model/ModelComponentCouplerDefItems": {
    "CouplerDefMetaDesc": "Coupler"
  },
  "Libraries/Model/ModelComponentCouplerItems": {
    "CouplerMetaDesc": "Coupler"
  },
  "Libraries/Model/ModelComponentCouplers": {
    "ErrModelElementAlreadyInitialized": "Coupler already initialized"
  },
  "Libraries/Model/ModelComponentEngineVendor": {
    "ModelComponentEngineVendorMetaDesc": "component engine vendor"
  },
  "Libraries/Model/ModelComponentMultiplePortsEngine": {
    "ErrModelComponentEngineAlreadyInitialized": "The component engine already initialized"
  },
  "Libraries/Model/ModelComponentVendor": {
    "ModelComponentVendorMetaDesc": "component"
  },
  "Libraries/Model/ModelComponentVendorGroups": {
    "ConnectionVendorGroupCaption": "Connections",
    "DefaultVendorGroupCaption": "Other",
    "ModelComponentVendorGroupMetaDesc": "component group",
    "ServiceVendorGroupCaption": "Service Nodes",
    "ViewerVendorGroupCaption": "Visualizers"
  },
  "Libraries/Model/ModelComponentVendorGroupsCommon": {
    "AnalyticVendorGroupCaption": "Data Mining",
    "CodeVendorGroupCaption": "Scripting",
    "DataTreeVendorGroupCaption": "Data tree",
    "ExploratoryVendorGroupCaption": "Exploration",
    "ExportVendorGroupCaption": "Export",
    "FlowControlVendorGroupCaption": "Control",
    "ImportVendorGroupCaption": "Import",
    "IntegrationVendorGroupCaption": "Integration",
    "PreprocessingVendorGroupCaption": "Preprocessing",
    "ReformVendorGroupCaption": "Transformation",
    "VariableVendorGroupCaption": "Variables"
  },
  "Libraries/Model/ModelEnginePortItems": {
    "PortMetaDesc": "Port"
  },
  "Libraries/Model/ModelEnginePorts": {
    "ErrModelEngineInputPortAlreadyInitialized": "The input port already initialized",
    "ErrModelEngineOutputPortAlreadyInitialized": "The output port already initialized"
  },
  "Libraries/Model/ModelNodesCopyUtils": {
    "CopyNodesCaption": "Nodes Copied",
    "ErrAnnotationNotConfigurable": "Failed to create annotation copy with GUID: %s",
    "ErrCantPasteBaseInsideDerived": "Failed to move \"%s\" base component inside \"%s\" derived node.",
    "ErrCantPasteDerivedInsideBase": "Failed to move \"%s\" derived node inside \"%s\" base node",
    "ErrCantPasteInsideSelf": "Failed to move \"%s\" node inside itself",
    "ErrCantRestoreReferenceNode": "Failed to restore link from \"%s\" node. \"%s\" source node is not available at the required destination.",
    "ErrCycleFound": "Circular link between nodes detected!",
    "ErrDuringMove": "Errors occurred while nodes moving",
    "ErrLinkPortNotConnetedToNode": "Link port with %s identifier not connected to node",
    "ErrMovedVendorUnavailableForNode": "Moved %s derived component is unavailable for %s node.",
    "ErrNodeNotConfigurable": "Failed to create the node copy with the following name: \"%s\" and GUID: %s",
    "ErrNoNodesSpecified": "Set of nodes and annotations not specified",
    "ErrNoSourceModelUnit": "Source module not found",
    "ErrNoTargetModelUnit": "Target module not found",
    "ErrSomeAnnotationDisposed": "One or several source annotations were deleted or moved",
    "ErrSomeNodeDisposed": "One or several source nodes have been deleted or moved",
    "ErrUnableToRestoreLinkBetween": "Failed to restore link between \"%s\" and \"%s\" nodes",
    "ErrVendorNotFound": "Derived component \"%s\" not found. The component could have been deleted.",
    "ErrVendorUnavailableForMovedNode": "%s derived component is unavailable for moved %s node.",
    "ErrVendorWithDependentNodeNotFound": "Derived component \"%s\" referenced by \"%s\" node not found. The component could have been deleted.",
    "ForceRepeatMovingForbidden": "Repeated forced move operation is forbidden",
    "MoveNodesCaption": "Nodes Moved",
    "OperationCanceled": "Operation canceled",
    "UnknownNodeName": "Unknown node",
    "UnknownVendorName": "Unknown component"
  },
  "Libraries/Model/ModelPackage": {
    "ErrAlienModelUnit": "Node does not belong to the current package",
    "ErrCannotRevivePackageLink": "Failed to restore the reference to the package with %s name and %s version",
    "ErrCannotRevivePackageLinkAlternativeHintPath": "Failed to restore reference to the package with \"%s\" file name and %s version. Instead \"%s\" file was found. Perhaps, invalid path to the file was specified in the package reference settings.",
    "ErrCircularPackageLinksNotAllowed": "Circular references between packages \"%s\" and \"%s\" are not possible",
    "ErrLocaleNotSupported": "\"%s\" locale is not supported by the system",
    "ErrModelNodeNotFound": "Node %s not found",
    "ErrPackageLinkAlreadyExists": "Reference to \"%s\" package already exists",
    "ErrPackageLinkToSelfNotAllowed": "Package cannot have a self-reference",
    "ErrPackageNameCannotBeEmpty": "Package name cannot be empty",
    "ErrPackageNameInvalidCharacter": "\"%s\" package name contains the invalid \"%s\" character",
    "ErrPackageNameInvalidFirstCharacter": "\"%s\" package name starts with the invalid \"%s\" character",
    "ErrPackageNotFoundByFileName": "Failed to find %s package",
    "ErrPackageWithNameLinkAlreadyExists": "Link to the package with \"%s\" name already exists",
    "ErrVariableNamesAndValuesCountMustBeEqual": "Number of names and variables values must be the same",
    "ErrVariableNotFound": "Variable with \"%s\" name not found",
    "ErrVariableValuesMustBeInOneArray": "Variable values must be contained in one array only",
    "LogPackageSetVersion": "%s package version changed to %s",
    "ModelUnitDisplayNameDefault": "Module",
    "RestoreVariablesBackupProcessCaption": "Restore Values of the Package Variables"
  },
  "Libraries/Model/ModelPackageContext": {
    "ErrBasePackageNotFound": "Base package not found"
  },
  "Libraries/Model/ModelPackageManager": {
    "BackupRestored": "Error occurred while saving \"%s\" package. File restored from backup.",
    "CompatConvertMessages": "Messages while converting \"%s\" package",
    "CompatConvertRequired": "While opening \"%s\" package of %s version, converting will be performed.",
    "ErrCannotLoadPackageElement": "Package load error: failed to load \"%s\" element",
    "ErrCannotOpenFile": "Failed to open file: \"%s\"",
    "ErrDecryptPackage": "The current application version cannot decrypt \"%s\" package: unsupported method of package encryption",
    "WarnPackageCreatedInNewerVersion": "\"%s\" package was created in a newer version of Loginom %s. In the current version, a part of the functionality may not work correctly."
  },
  "Libraries/Model/ModelReports": {
    "CantAddGenericInputViewToReport": "Addition of supernode input node visualizers to Reports is not supported",
    "ModelReportGroup": "Report group"
  },
  "Libraries/Model/ModelSocketConstraintDefItems": {
    "SocketConstraintMetaDesc": "Port constraint"
  },
  "Libraries/Model/ModelSocketConstraintDefs": {
    "ErrModelSocketDefConstraintAlreadyInitialized": "Socket constraint definition already initialized",
    "ErrSocketIsNil": "No reference to port specified"
  },
  "Libraries/Model/ModelSocketConstraintItems": {
    "SocketConstraintMetaDesc": "Port constraint"
  },
  "Libraries/Model/ModelSocketConstraints": {
    "ErrModelSocketConstraintAlreadyInitialized": "Socket constraint already initialized",
    "ErrSocketIsNil": "No reference to port specified"
  },
  "Libraries/Model/ModelSocketDefItems": {
    "ErrItemBySocketDefNotFound": "Socket definition not found in the list",
    "SocketMetaDesc": "Port"
  },
  "Libraries/Model/ModelSocketDefs": {
    "SocketDefAlreadyInitialized": "Socket definition already initialized"
  },
  "Libraries/Model/ModelSocketInterfaceConstraintDef": {
    "ErrInterfaceNotSupported": "Input and output ports are incompatible"
  },
  "Libraries/Model/ModelSocketItems": {
    "ErrCannotAddNotMultipleSocket": "Failed to add non-multiple port dynamically",
    "ErrCannotDeleteNotDynamicSocket": "Failed to delete non-dynamic port",
    "ErrItemBySocketNotFound": "Port not found in the list",
    "ErrMaxOccursOfMultipleSocketIsReached": "Maximum multiple port count reached",
    "SocketMetaDesc": "Port"
  },
  "Libraries/Model/ModelSockets": {
    "ErrModelSocketAlreadyInitialized": "Socket already initialized",
    "ErrModelSocketNotConfigured": "Port not configured"
  },
  "Libraries/Model/ModelUnit": {
    "CurrentModel": "Current module",
    "DeleteReferringVendorCaption": "Delete \"%s\" Derived Component",
    "ErrAlienExcludedNode": "\"%s\" node does not belong to the current module",
    "ErrAlienSubModel": "Supernode does not belong to the current workflow",
    "ErrComponentVendorIsSealed": "Creation of derived component for this node is not possible",
    "ErrNodeNotInitialized": "Node not initialized",
    "LocalModelComponentVendorMetaDesc": "local component",
    "ModelComponentVendorMetaDesc": "component"
  },
  "Libraries/Model/ModelWorkFlow": {
    "ActivateModelNodeInputs": "Activate node inputs",
    "ActivateModelNodes": "Activate nodes",
    "AddInputSocketCaption": "\"%s\" input added to \"%s\" node",
    "ComponentOutputPort": "Component",
    "CopyNodeCaption": "\"%s\" Element Copied",
    "DeleteElementsCaption": "Elements deleted",
    "DeleteInputSocketCaption": "\"%s\" Input of \"%s\" Node Deleted",
    "DependentNodeOutputPort": "Dependent nodes",
    "ErrActivateFromWebServiceCanceled": "Request processing cancelled",
    "ErrActivateModelNodes": "Error occurred while activating nodes",
    "ErrAllNodesLocked": "All workflow nodes locked",
    "ErrAlreadyConfiguringSocket": "\"%s\" node already in the port configuring state",
    "ErrCannotActivateRecursiveNode": "\"%s\" node cannot be activated because it recursively depends on its own activation",
    "ErrColumnDataTypeChanged": "\"%s\" column data type changed",
    "ErrComponentNotInitialized": "Base component not initialized",
    "ErrDuplicatePublishedNodeName": "The package already contains the published node with \"%s\" name",
    "ErrGetSourcePackageName": "Error occurred while package name defining. Perhaps, the message source could be deleted.",
    "ErrInactiveBranch": "\"%s\" node is in the inactive condition branch",
    "ErrInvalidModelCriticalSectionCookie": "Invalid Cookie for critical workflow section locking",
    "ErrInvalidModelLockCookie": "Invalid Cookie for workflow nodes locking",
    "ErrInvalidModelLockCookieOwner": "Invalid owner of Cookie for workflow nodes locking",
    "ErrModelHasLockedNodes": "Workflow contains %d locked nodes",
    "ErrModelNodeAlreadyInitialized": "Node already initialized",
    "ErrMultipleVariablesFound": "Multiple variables with \"%s\" name found",
    "ErrNodeConfigNotInitialized": "Node configuration not initialized",
    "ErrNodeIsNoMemberOfModel": "Node does not belong to the workflow",
    "ErrNodeLocked": "\"%s\" node is locked",
    "ErrNodeNotFoundInModel": "The requested node does not belong to the workflow",
    "ErrNodeNotInitialized": "No component specified for \"%s\" node",
    "ErrNodeOutputPortCountChanged": "Number of output ports was changed for \"%s\" node",
    "ErrNodeOutputPortTypeChanged": "Type of output \"%1:s\" port was changed for \"%0:s\" node",
    "ErrNodeParametersChanged": "\"%s\" tree node parameters changed",
    "ErrParentProcessError": "Error in parent process",
    "ErrPortMismatch": "Incompatible component: node port list does not match",
    "ErrPortParentIsNil": "Reference to the node port is not included into list",
    "ErrPublishedNodeNameIsEmpty": "No published node name specified",
    "ErrRequiredPortLinkNotConnected": "Link to the required port \"%s\" does not exist",
    "ErrSocketNotConfigured": "\"%s\" port not configured",
    "ErrUnableToLoadNodeConfig": "Failed to load the node configuration",
    "ErrVariableDataTypeChanged": "\"%s\" variable data type changed",
    "ErrVariableNamesAndValuesCountMustBeEqual": "Number of names and variables values must be the same",
    "ErrVariableNotFound": "Variable with \"%s\" name not found",
    "ErrVariableValuesMustBeInOneArray": "Variable values must be contained in one array only",
    "ErrVendorMalfunction": "\"%s\" node component is malfunctioning",
    "ExplodeGenericModel": "Expanded \"%s\" supernode",
    "LogActivateNodeStart": "Activating \"%s\" GUID=%s node",
    "LogActivateNodeSuccess": "Successfully activated \"%s\" GUID=%s node",
    "LogActivatePackagedNodeStart": "Activate node \"%s\" GUID=%s Package=%s",
    "LogActivatePackagedNodeSuccess": "Node \"%s\" GUID=%s Package=%s successfully activated",
    "LogDeactivateNode": "\"%s\" GUID=%s node deactivated",
    "LogNodeActivationError": "Error activating \"%s\" node, GUID=%s",
    "LogPackagedNodeActivationError": "Error while \"%s\" node activation GUID=%s Package=%s",
    "ResetModelNodeConfiguration": "Initial configuration of \"%s\" node reset",
    "RestoreBackupProcessCaption": "Backup configuration restoring",
    "SynchronizationInputPort": "Execution order",
    "SynchronizationOutputPort": "Execution order",
    "WarnLinkPortNotConnetedToNode": "Link port with %s identifier not connected to node"
  },
  "Libraries/Model/ModelWorkflowSubModelComposer": {
    "ErrSubModelVendorNotCreated": "Failed to create the supernode component In the current context",
    "ErrUnableToRestoreLinkBetween": "Failed to restore link between \"%s\" and \"%s\" nodes",
    "UnknownNodeDisplayName": "Unknown node",
    "WarnModelNotSupportInPort": "Failed to create input port for \"%s\" port",
    "WarnModelNotSupportOutPort": "Failed to create output port for \"%s\" port"
  },
  "Libraries/Model/PackageEditableVariables": {
    "ErrVariableRestriction": "Changing variable %s is forbidden",
    "ErrVariablesRestriction": "Variable list change forbidden"
  },
  "Libraries/Model/ReferenceNode/ReferenceNodeComponentEngine": {
    "ErrNodeLocked": "\"%s\" node is locked",
    "ErrNodeNotInitialized": "\"%s\" node not initialized",
    "ErrReferencedNodeNotActive": "Source \"%s\" GUID=%s node is not active",
    "ErrReferencedNodeNotAvailable": "Source \"%s\" GUID=%s node not available",
    "ErrReferencedNodeNotFound": "Source GUID=%s node not found",
    "ErrReferencedNodeNotSpecified": "No reference to node specified"
  },
  "Libraries/Model/ReferenceNode/ReferenceNodeComponentEngineVendor": {
    "NodeReference": "Reference to node"
  },
  "Libraries/Model/ReferenceNode/ReferenceNodeComponentVendor": {
    "VendorCaption": "Reference Node",
    "VendorDesc": "Reference to node"
  },
  "Libraries/Model/Variables/ControlVariablesInputSocketDef": {
    "ControlVariablesInputSocketDefVendorCaption": "Control Variables"
  },
  "Libraries/Model/Variables/ControlVariablesModelComponentEngine": {
    "InputControlVariables": "Control variables"
  },
  "Libraries/Model/Variables/InputVariablesSocketDef": {
    "InputVariablesSocketDefVendorCaption": "Variables"
  },
  "Libraries/Model/Variables/ModelVariables": {
    "ErrCannotEditServiceVariable": "Service variable editing is forbidden",
    "ErrFailedToPrepareVariables": "Failed to initialize %s variables",
    "ErrInvalidVariablesKind": "Invalid variable type: %s"
  },
  "Libraries/Model/Variables/ModelVariablesComponentEngine": {
    "CombinedVariables": "Variables",
    "PackageVariables": "Package variables",
    "SessionVariables": "Session variables",
    "SystemVariables": "System variables",
    "UserVariables": "User variables"
  },
  "Libraries/Model/Variables/ModelVariablesComponentVendor": {
    "VendorCaption": "Workflow Variables",
    "VendorDesc": "Configure variables used in the current workflow"
  },
  "Libraries/Model/Variables/OutputVariablesSocketDef": {
    "OutputVariablesSocketDefVendorCaption": "Variables"
  },
  "Libraries/Model/Variables/SocketVariableInfoLinks": {
    "ErrVariableInfoDoesNotBelongToComponent": "\"%s\" variable does not belong to the current component"
  },
  "Libraries/Model/Variables/SocketVariablesMultiLinks": {
    "ErrAlienLinkedVariable": "\"%s\" variable does not belong to any variable list being used",
    "ErrCannotLinkVariablesFromSameTable": "Failed to link \"%s\" and \"%s\" variables from the same table",
    "ErrLinkedVariableTypesMismatch": "Type mismatch between linked variables \"%s\" and \"%s\""
  },
  "Libraries/Model/Variables/TuneVariablesSocketConstraint": {
    "ErrValueNotAllowed": "\"%s\" value of the input variable \"%s\" does not match the specified constraints"
  },
  "Libraries/Model/Variables/VariablesModelComponentEngine": {
    "InputVariables": "Input variables",
    "OutputVariables": "Output variables"
  },
  "Libraries/Model/Variables/VariablesMultiInputModelComponentEngine": {
    "InputVariables": "Input variables",
    "OutputVariables": "Output variables"
  },
  "Libraries/Model/Variables/VariablesOutputSocket": {
    "VariablesCount": "Variables"
  },
  "Libraries/Model/Views/ModelViewDataSource": {
    "InputDataSource": "Data set"
  },
  "Libraries/Model/Views/ModelViewDataSourceEngine": {
    "ErrNotDefinedInputDataSource": "No input data set defined"
  },
  "Libraries/Model/Views/ModelViewVendorGroupsCommon": {
    "DefaultVendorGroupCaption": "Common",
    "DiagramVendorGroupCaption": "Charts",
    "TableDataVendorGroupCaption": "Table View"
  },
  "Libraries/Model/WebServiceInputNode/WebServiceInputNodeComponent": {
    "ErrColumnDataTypeChanged": "\"%s\" column data type changed",
    "ErrDataRowNotFound": "The string with index %d is not found in the matrix of values",
    "ErrInvalidInputColumnCount": "Invalid column count in the input matrix of values: %d; required: %d",
    "ErrInvalidInputElementCount": "Invalid element count in the input array: %d; required: %d",
    "ErrInvalidInputRowCount": "Invalid row count in the variable value matrix: %d",
    "ErrInvalidTreeDataRowLength": "Invalid element count in the array of %s node values: %d; required: %d",
    "ErrNodeInputPortCountChanged": "Number of input ports was changed for \"%s\" node",
    "ErrNodeInputPortTypeChanged": "Type of \"%1:s\" input port was changed for \"%0:s\" node",
    "ErrNodeParametersChanged": "Parameters of \"%s\" tree node were changed",
    "ErrRootElementMustBeSingle": "Matrix of values must contain only one root element",
    "ErrUnexpectedColumn": "\"%s\" column nonexisting at the moment of publication was detected in data set",
    "ErrUnexpectedNode": "\"%s\" node nonexisting at the moment of publication was detected in data tree",
    "ErrVariableDataTypeChanged": "\"%s\" variable data type changed"
  },
  "Libraries/Model/WorkFlow": {
    "ErrCircularLink": "Circular link between nodes is not possible",
    "ErrInputLinkAlreadyExists": "Link to the input port \"%s\" of \"%s\" node already exists",
    "ErrUnableToRestoreLinkBetween": "Failed to restore link between \"%s\" and \"%s\" nodes",
    "ErrUnableToRestoreLinkTo": "Failed to restore link to the input of \"%s\" node",
    "Node": "Node",
    "UnknownNodeDisplayName": "Unknown node"
  },
  "Libraries/Normalization/DataSourceMultiOutputNormModelComponentEngine": {
    "InputDataSource": "Input data source",
    "OutputDataSource": "Output data set",
    "PartitionColumnNotBoolean": "\"%s\" column for partition by column must be related to the logical data type",
    "PartitionColumnNotFound": "No %s column for partition by column",
    "PartitionColumnNotSet": "No column for partition by column set",
    "PartitionColumnUsageTypeRedefined": "Usage type was changed for \"%s\" column for partition by column"
  },
  "Libraries/Normalization/FixedNormalData": {
    "ErrArrayExpceted": "Failed to denormalize a single element. Array from %d elements must be at the input.",
    "ErrUnbalancedSync": "EndSynchronize call without corresponding BeginSynchronize",
    "ErrWrongArraySize": "Size %1:d of '%0:s' array not equal to the expected size of array %2:d"
  },
  "Libraries/Normalization/NormalColumns": {
    "ErrExcludeOutOfRange": "The range to be deleted is out of limits. The following values are given: start index %d, range length %d. The index of the last deleted column %d exceeds the index of the last deleted column %d."
  },
  "Libraries/Normalization/NormalColumnsManager": {
    "ErrIrremNotExcluded": "Irremovable factor \"%s\" cannot be excluded",
    "ErrNotImplemented": "This functionality not implemented"
  },
  "Libraries/Normalization/NormalColumnsRange": {
    "ErrCursorNotReady": "The flag iterator cursor does not indicate value",
    "ErrNotImplemented": "This functionality not implemented"
  },
  "Libraries/Normalization/NormalData": {
    "CalculateCacheProcessCaption": "Data set caching",
    "ErrArrayExpected": "Failed to denormalize a single element. Array from %1:d elements must be denormalized for \"%0:s\" column.",
    "ErrImpossibleToAllocate": "Failed to allocate memory for cached normalized data source",
    "ErrNotEnoughCache": "Insufficient cache size to store normalized data string",
    "ErrUnbalancedSync": "EndSynchronize call without corresponding BeginSynchronize",
    "ErrUnexpectedEndUpdate": "EndUpdate call without corresponding BeginUpdate",
    "ErrUnexpectedUnlockedState": "Calling nested BeginUpdate cache of the normalized data set must be locked",
    "ErrWrongArraySize": "Size %1:d of %0:s array not equal to the expected %2:d",
    "ErrWrongNormalizerParams": "Error adding \"%s\" factor: the output column count of %d normalizer does not match the expected %d",
    "InterceptDisplayName": "Intercept",
    "NormDSTypeNotSupported": "Unsupported type of the requested normalized data set",
    "UnsupportedPrenormInDataType": "Unsupported type of the normalizer data of the normalized string"
  },
  "Libraries/Normalization/NormalDataArray": {
    "ErrWrongBufferSize": "The size of the results string %d is less than the size of the normalized string %d"
  },
  "Libraries/Normalization/NormalDataFactory": {
    "ErrFactoryAlreadyRegistered": "Factory for this normalized data set format has already been registered",
    "ErrFactoryIsNotRegistered": "Factory for this normalized data set format has not been registered",
    "ErrMultNormTypeWrong": "Invalid multiplied factor type"
  },
  "Libraries/Normalization/Normalizers": {
    "ErrCorrectionMissed": "Denormalization coefficients correction ignored",
    "ErrInvalidDenormCode": "Failed to denormalize the discrete field value",
    "ErrLessThanMin": "The normalized value is less than the range minimum value",
    "ErrMoreThanMax": "The normalized value is more than the range maximum value",
    "ErrNormLessThanMin": "The denormalized value is less than the range minimum value",
    "ErrNormMoreThanMax": "The denormalized value is more than the range maximum value",
    "ErrNotImplemented": "This functionality not implemented",
    "ErrRefIdRequired": "The reference category used in the normalizer is not defined",
    "ErrWrongDiscreteIndexRange": "Prenormalized index: %d is out of allowable range [%d; %d]",
    "VS": " to ",
    "VS_MEAN": " to mean",
    "VS_MEAN_PREV": " to mean from previous",
    "VS_MEAN_SUBS": " to mean from subsequent"
  },
  "Libraries/Normalization/NormalizerSettings": {
    "ErrMinMaxNormTypeNotSupported": "The selected \"%s\" normalization type is not supported by Min-Max normalization settings",
    "ErrMinMaxStatNaN": "Failed to calculate the maximum\/minimum value for the range normalization settings, \"%s\" column",
    "ErrNanDivisor": "Failed to calculate divisor to normalize relations, \"%s\" column",
    "ErrQuotientNormTypeNotSupported": "The selected \"%s\" normalization type is not supported by the relation normalization settings",
    "ErrQuotientStatNotSupported": "Use of the selected statistics parameter \"%s\" as divisor in the relation normalization settings is not allowed",
    "ErrStatDivisorNotAvailable": "The set statistic indicator \"%s\" cannot be used as relation normalization divisor"
  },
  "Libraries/Normalization/NormMatrixData": {
    "ErrGetColNotSupported": "Normalized matrix column request not supported"
  },
  "Libraries/Normalization/PreNormDataAccessor": {
    "ErrNoIndexInHash": "No index of the set column %d in Accessor hash"
  },
  "Libraries/Normalization/TunedNormParams": {
    "ErrAvailableNormTypeNotFound": "No valid normalization type found",
    "ErrControlRangeNotAvailable": "The set \"%s\" type of range control is not valid for this normalizer",
    "ErrWrongNormParamsConstructor": "Invalid normalization parameter constructor used",
    "FACT_ANY": "ANY",
    "FACT_ANY_COUNTINUOUS": "ANY CONTINUOUS",
    "FACT_ANY_DISCRETE": "ANY DISCRETE",
    "FACT_ANY_OTHER_CONTINUOUS": "ANY OTHER CONTINUOUS",
    "FACT_ANY_OTHER_DISCRETE": "ANY OTHER DISCRETE",
    "FACT_OTHER": "ANY OTHER",
    "FACT_SAME": "SAME",
    "GenDisplayName": "Generated factor",
    "GenName": "Generated"
  },
  "Libraries/Normalization/TunedNormParamsProvider": {
    "ErrInvalidColumn": "No available normalization types for \"%s\" column",
    "ErrInvalidFactorIndex": "Invalid factor index %d (available range is [%d;%d])",
    "ErrNotImplemented": "This functionality not implemented",
    "ErrProcessKeptStatisticsChangedUniqueValues": "The unique values list for \"%s\" column changed; component reconfiguration required",
    "ErrStatIndicatorsNeddedIndexOutRange": "Invalid index of the requested statistical indicators",
    "ErrUniqueValuesSyncConflict": "Input data set is not compatible with normalization settings"
  },
  "Libraries/Normalization/TuneNormColumnDefs": {
    "ErrNilStatInfoProvider": "Null provider of the statistic columns information was passed",
    "ErrTuneNormColumnDefsVendorNotSet": "Vendor of configurable fields with normalization not installed",
    "ErrWrongConstructor": "Invalid column collection constructor called"
  },
  "Libraries/Normalization/TuneNormColumnDefsVendor": {
    "ErrIncorrectUsedDK": "Invalid \"%s\" data kind of normalized column \"%s\""
  },
  "Libraries/Normalization/TuneNormDataSource": {
    "CreateInDataProcessCaption": "Input data set preparing",
    "CreateNormalDataProcessCaption": "Normalized data set creating",
    "CreateOutDataProcessCaption": "Output data set preparing",
    "ErrGetNormData": "Errors occurred while requesting normalized data set",
    "ErrUniqueIndexNotDiscrete": "Failed to query the unique value index of non-discrete column",
    "ErrUniqueValueNotFound": "\"%s\" not found in the list of configured unique values (\"%s\" column, string %d)"
  },
  "Libraries/Normalization/TuneNormDataSourceSocketDef": {
    "ErrNotImplemented": "This functionality not implemented"
  },
  "Libraries/OpenID/OpenID": {
    "InvalidToken": "Invalid token",
    "TokenNotIncludeRolesClame": "Token has no list of roles with claim %s",
    "TokenRequestError": "Error receiving token. %s"
  },
  "Libraries/OpenID/OpenIDConfigurator": {
    "AllowUsersWithoutRole": "Allow login for users without a role",
    "AuthEndpoint": "Authentication request endpoint",
    "AutoGetToken": "Automatic reception of token",
    "ClaimsToVariables": "Claims extracted to variables",
    "DefaultUserRole": "New user role",
    "FoldersClaim": "Claim of the list of shared folders",
    "OpenIDClient": "Client ID",
    "OpenIDProviderName": "The OpenID provider's name",
    "OpenIDScope": "Scope",
    "OpenIDSecret": "Client secret",
    "RedirectURI": "Token receiver's URL",
    "RolesClaim": "Role list claim",
    "TokenEndpoint": "OpenID token request endpoint",
    "UpdateUserRole": "Update user role",
    "UserFullNameClaim": "Full username claim in token",
    "UserInfoEndpoint": "User information endpoint",
    "UserNameClaim": "Username claim in token",
    "UserRoleNameMap": "List of role names to map to user roles"
  },
  "Libraries/Optimization/Optimization": {
    "ErrAbsentSubstitution": "Parameter with index %d is not listed",
    "ErrConstraintsParameterNotFound": "Parameter with index %d not found in the constraints list",
    "ErrDuplicateIndex": "Parameter with index %d added more than once",
    "ErrForeignParameter": "Parameter does not belong to the current collection",
    "ErrItemByParameterNotFound": "Collection item matching the specified parameter was not found",
    "ErrMinMaxFloat": "The specified minimum value %f is more than the maximum value %f",
    "ErrMinMaxInteger": "The specified minimum value %d is more than the maximum value %d",
    "ErrOrphanValue": "Parameter not associated with collection",
    "ErrParameterInaccessible": "Parameter value inaccessible",
    "ErrParameterWrongDataType": "Invalid parameter data type",
    "ErrValuesCountMismatch": "The count of values %d passed to the calculation function mismatches the count of parameters %d"
  },
  "Libraries/Optimization/Optimizer": {
    "ErrFunctionTypeNotSupported": "Object functions with return value of %s type are not supported by %s method",
    "ErrMethodAlreadyRegistered": "%s method implementation already registered",
    "ErrMethodNotImplemented": "%s method not implemented",
    "ErrMethodRequiresParameters": "%s method requires additional configuration",
    "ErrSingleParameterRequired": "%s method can provide optimization only for a single parameter",
    "ErrStepIsNull": "Another strategy step not specified",
    "ErrUnsupportedConstraint": "%s method does not support %s constraint type"
  },
  "Libraries/PropManager/CommonPropBinder": {
    "ErrCantFindIntfEditor": "Failed to find interface editor",
    "ErrCantFindPropBind": "Failed to find property mapping for interface",
    "ErrMainInterfaceIsNil": "Root element interface not set or removed",
    "ErrNotCompatibleDataTypes": "Property and variable types are not compatible"
  },
  "Libraries/PropManager/InterfacePropManager": {
    "ErrCannotSetPropertyToNull": "Failed to assign null value to \"%s\" property",
    "ErrCantAccessPropertyValue": "Failed to get access to value of \"%s\" property",
    "ErrDataTypeNotEqual": "The actual type of \"%s\" property does not match the requested one",
    "ErrFindInterfaceDublicate": "Interface duplicate found in metadata: \"%s\"",
    "ErrGetValueOutOfBounds": "Value of \"%s\" property is not in the range of allowable values of the requested type",
    "ErrGuidNotFound": "\"%s\" interface not found in metadata",
    "ErrIncorrectIndexDataType": "\"%s\" property has incorrect indexer type",
    "ErrIndexerCountIncorrect": "The property with \"%3:s\" count of items is incorrect for the indexed property \"%0:s.%1:s.%2:s\"",
    "ErrIndexerCountNotFound": "No \"%2:s\" property in metadata for \"%0:s.%1:s\" interface",
    "ErrInterfaceNameNotFound": "Interface with \"%s\" name not registered",
    "ErrInterfaceParentNotFound": "Parent interface \"%s\" not found",
    "ErrInvalidMetadata": "Metadata reading error",
    "ErrParentNotInitialized": "Not initialized parent of \"%s.%s\" interface",
    "ErrReferenceIsNil": "Interface reference not initialized",
    "ErrReferenceNotFound": "Failed to find the implemented interface",
    "ErrSetValueOutOfBounds": "Set value \"%d\" of \"%s\" property is not in the range of allowable values",
    "ErrVaiantTypeIncorrect": "The property containing \"%3:s\" value type is incorrect for the variant property \"%0:s.%1:s.%2:s\"",
    "ErrVaiantTypeNotFound": "No \"%2:s\" property in metadata for \"%0:s.%1:s\" interface",
    "ErrValueOutOfRange": "Value \"%d\" is not in the range of allowable values of \"%s\" type",
    "ErrVisibilityMismatch": "Visibility of \"%s\" interface mismatches the required visibility"
  },
  "Libraries/Regression/DataSourceRegressionModelComponentEngine": {
    "ErrNoModel": "Model is not trained. Training of the node before its application is required",
    "ErrOutputColumnInvalid": "Invalid output column",
    "ErrOutputCount": "There must be exactly one output column",
    "ErrTrainingNotComplite": "Failed to train the node on the basis of the current training set",
    "ErrWrongInputUniqueCount": "Number of \"%s\"output column unique values is %d (2 or more required)",
    "ErrWrongModelInput": "Input columns do not match previously trained model",
    "ErrWrongModelOutput": "Output column does not match previously trained model",
    "RegressionModelCoefficients": "Regression model coefficients",
    "RegressionOutputDataSet": "Regression output",
    "RegressionOutputVariables": "Summary"
  },
  "Libraries/Regression/Regression": {
    "ErrWrongRegressionParamsConstructor": "Invalid regression parameter constructor used"
  },
  "Libraries/Regression/RegressionBuilder": {
    "ErrWrongProbability": "Confidence level must be in the range [0, 100]"
  },
  "Libraries/Regression/RegressionModel": {
    "ApplyModelProcessCaption": "Model applying",
    "ErrApplyWrongFeatures": "The column count of the input data set %d not equal to the regressors count of model %d"
  },
  "Libraries/Regression/RegressionStatistics": {
    "ErrWrongClassType": "Source class does not match "
  },
  "Libraries/RESTClientConnection/RESTClientConnection": {
    "ErrInvalidContentType": "Invalid Content-Type value format: %s",
    "ErrInvalidParamDataType": "Invalid %s request parameter data type",
    "ErrInvalidParamName": "Invalid %s request parameter name",
    "ErrInvalidURL": "Invalid service URL format",
    "ErrMustExplicitRequestContentType": "Data request Content-Type must be explicitly set",
    "ErrNoServiceURL": "Service URL not specified",
    "ErrNotConnectedDefaultFmt": "Failed to establish connection. Reason: %s",
    "ErrNotConnectedTimeoutFmt": "Failed to establish connection within %d ms. Reason: %s",
    "ErrNotSecureConnectedFmt": "Failed to establish secure connection. Reason: %s",
    "ErrUnsupportedAuthModeCert": "Authentication using the client certificate from storage not supported"
  },
  "Libraries/RESTClientConnection/RESTClientConnectionVendor": {
    "RESTClientConnectionVendorCaption": "REST Service",
    "RESTClientConnectionVendorDesc": "Connector to GET\/POST web service"
  },
  "Libraries/rpc/BaseSocketMessageTransport": {
    "ErrCouldNotConnectToServer": "Failed to establish connection: %s",
    "ErrIncorrectServerResponse": "Bad server response received"
  },
  "Libraries/rpc/ClientObjectProxy": {
    "ErrDisconnectedProxy": "Client proxy object disconnected",
    "ErrInterfaceIdentifierMustNotBeNull": "Interface identifier must not be null"
  },
  "Libraries/rpc/CustomConnectors/DataSourceRpcCached_Invoker": {
    "ErrRowIndexAndRowCountOutOfRange": "Sum of values of ARowIndex and ARowCount parameters must not exceed the total row count in the data set"
  },
  "Libraries/rpc/InterceptSendMessageTransport": {
    "ErrNotImplemented": "This method implementation is not provided"
  },
  "Libraries/rpc/MessageTransport": {
    "ErrConnectionFailure": "Remote host connection lost"
  },
  "Libraries/rpc/RemoteMessageData": {
    "ErrArrayLevelNotSupported": "Arrays nesting level above %d is not supported",
    "ErrCodePageNotSupported": "The string has unsupported codepage %d. Only UTF-8 and UTF-16 are supported.",
    "ErrInvalidMessageSignature": "Invalid message signature",
    "ErrMessageSizeCannotBeNegative": "Message size cannot be negative",
    "ErrMessageSizeIncrementCannotBeNegative": "Message size increment cannot be negative",
    "ErrMessageSizeOverflow": "Maximum message size exceeded",
    "ErrUnknownInterfaceGUID": "Interface with %s identifier not registered",
    "ErrUnknownInterfaceID": "Unknown interface identifier: %d",
    "ErrUnknownInterfaceName": "%s interface not registered",
    "ErrUnsupportedParameterType": "Unsupported argument type"
  },
  "Libraries/rpc/RemotingConvertUtils": {
    "ErrValueOutOfRange": "%d value is not in the range of allowable values %s"
  },
  "Libraries/rpc/ServerRemoteObjects": {
    "ErrQueryInterfaceNotAllowed": "Failed to query interface with %s identifier via QueryInterface",
    "ErrUnknownMethodID": "Unknown method identifier: %d"
  },
  "Libraries/rpc/Session": {
    "ConnectionTimedOut": "Connection was closed by idle timeout: %d seconds",
    "ErrCannotAddSessionToClosingSessionHost": "Failed to add a new session while SessionHost closing",
    "ErrDifferentRpcExceptionProcAlreadyRegistered": "Another RPC exception handler already registered",
    "ErrDifferentRpcVersionAlreadyRegistered": "Another RPC version number already registered",
    "ErrDisconnectedSession": "Connection lost",
    "ErrIncorrectMainServerObjectInterfaceID": "Invalid interface identifier of the main server object received",
    "ErrInvalidObjectID": "Invalid object identifier: %d",
    "ErrInvalidRangeBounds": "The left bound of range [%d; %d] has been set higher than the right one",
    "ErrMainServerObjectNotRegistered": "The main server object is not registered",
    "ErrMaxObjectIdReached": "Object identifiers limit of %d values reached",
    "ErrNegativeRangeBounds": "Range bounds [%d; %d] are negative",
    "ErrRangeLengthOutOfRange": "Range bounds [%d; %d] are not in the range of allowable values [%d; %d]",
    "ErrRpcVersionMismatch": "Client of %s version cannot get connected to the server of %s version",
    "ErrSessionIsLocked": "Failed to perform the operation because the session is locked",
    "ErrUnknownInterfaceID": "Unknown interface identifier: %d",
    "ErrValueOutOfRange": "Value %d is not in the range of allowable values [%d; %d]",
    "IdleLockTimeOut": "Session was locked by idle timeout: %d seconds"
  },
  "Libraries/rpc/WebSocketRemoteServer": {
    "ErrSSLChangeAfterStart": "SSL parameters cannot be changed after server start"
  },
  "Libraries/TableauRestConnection/TableauRestCommon": {
    "ErrTableauPublishingNotSupported": "Tableau server publishing not supported",
    "HttpResponse": "Unexpected server response. Response code: %d, message: %s",
    "ProjectNotFound": "Project with with \"%s\" name not found on server"
  },
  "Libraries/TableauRestConnection/TableauRestConnectionVendor": {
    "TableauRestConnectionVendorCaption": "Tableau Server",
    "TableauRestConnectionVendorDesc": "Connector to Tableau server by REST API"
  },
  "Libraries/WSDLClientConnection/WSDLClientConnection": {
    "ErrNoWSDLSource": "No WSDL source specified",
    "ErrWSDLLoad": "Error loading WSDL:\nFile name: %s",
    "WarnMainWSDLNotLoaded": "Loading of the main WSDL source (%s) failed (%s). Loading from the reserve source.",
    "WarnTestingInProcess": "Testing already executing"
  },
  "Libraries/WSDLClientConnection/WSDLClientConnectionVendor": {
    "WSDLClientConnectionVendorCaption": "SOAP Service",
    "WSDLClientConnectionVendorDesc": "Connector to SOAP service specified by WSDL document"
  },
  "Libraries/XSDFilesConnection/XSDFilesConnection": {
    "ErrLoadXSD": "Error loading XSD files"
  },
  "Libraries/XSDFilesConnection/XSDFilesConnectionVendor": {
    "XSDFilesConnectionVendorCaption": "Set of XSD Schemas",
    "XSDFilesConnectionVendorDesc": "Connector to the set of XSD schemas located in the file storage"
  },
  "Server/ServiceConsts": {
    "ServiceDisplayName": "LoginomServer",
    "ServiceName": "loginom"
  },
  "Server/SocketRemoteDeductorServer": {
    "LogUserLockedSession": "Session was locked by user",
    "LogUserUnlockedSession": "Session was unlocked by user"
  },
  "Studio/Converters/Converter_201805281036_NeuralNet_SummarySocket": {
    "SummarySocketDisplayName": "Summary"
  },
  "Studio/Converters/Converter_201806051619_TuneNorm_InvalidUsageType": {
    "ErrTuneNormInvalidUsageTypeNode": "Usage type of the \"Output\" field near \"%s\" column of \"%s\" node was moved to the \"Not defined\" field",
    "ErrTuneNormInvalidUsageTypeVendor": "Usage type of the \"Output\" field near \"%s\" column of derived component \"%s\" was moved to the \"Unspecified\" field"
  },
  "Studio/Converters/Converter_20180828194301_LogRegression_DerivedAtomic": {
    "WarnCannotConvert": "Failed to convert the package created in the previous program version.\nSettings of the \"Logistic Regression\" nodes that refer to the nodes in other packages could be reset.\nOne of the following actions is required:\n  - reconfigure and retrain the \"Logistic Regression\" nodes that cannot be converted\n  - restore configuration of the specified nodes to the original (base)\n  - contact Loginom support for help"
  },
  "Studio/Converters/Converter_201809181721_LogRegression_RelativeTerms": {
    "WarnCannotConvert": "Failed to convert the package created in the previous program version.\nSettings of the \"Logistic Regression\" nodes could be reset.\nReconfiguration and retraining of the \"Logistic Regression\" nodes that cannot be converted is required"
  },
  "Studio/Converters/Converter_202003302114_CubeView_Chart": {
    "WarnCannotConvert": "Failed to convert the measure displayed in the cube chart in %s visualizer settings. The first suitable measure was selected."
  },
  "Studio/Converters/Converter_202111251332_ExecNode_DerivedVendor": {
    "AddedPublishedNodeDerivedVendor": "Derived component created by the published \"%s\" node",
    "PublicNodeDerivedVendorCaptionFormatString": "%s (public node)",
    "PublishedNodeDerivedVendorCaptionFormatString": "%s (published node)"
  },
  "Studio/Converters/Converter_202210131413_ModelNode_RemoveWrapWebServiceResult": {
    "NodeSoapResponseFormatChanged": "%s node was published in Loginom 6.2.5 or earlier version. Format of reply messages will be changed for this node when calling via SOAP service."
  },
  "Studio/Converters/Converter_202404041818_CubeView_ChartCaseGuid": {
    "WarnDeletedDerived": "Failed to convert measure settings in chart of derived cube %s.\nThe disabled in the chart measure %s will be shown.",
    "WarnDerivedDrop": "Failed to convert measure settings in the chart of derived cube %s.\nDisplay settings for measure %s in the chart will be reset to the base cube settings."
  },
  "Studio/Converters/Converter_202404041818_CubeView_MultipleCharts": {
    "ChartTitle": "Chart 1"
  },
  "Studio/DeductorConsts": {
    "CompanyShortNameLinux": "loginom",
    "CompanyShortNameWindows": "Loginom",
    "LgpFilesDesc": "Loginom packages",
    "MASK_LGP_FILES": "*.lgp",
    "ProductShortName": "Loginom"
  },
  "Studio/DeductorServer": {
    "AutoRefresh": "Auto update publication",
    "AutoSavePackageError": "Error occurred while auto saving \"%s\" package",
    "AutoSavePackagesFailed": "Packages auto save failed",
    "EnteredMaintenanceMode": "Server entered maintenance mode",
    "ErrAccessDenied": "Access denied",
    "ErrApplicationModeRunNotAllowed": "The current user has no batch processing rights",
    "ErrCannotCreateDirectory": "Failed to create \"%s\" folder",
    "ErrCannotDeleteBasePackage": "Failed to delete %s base package without deleting %s dependent package that references it",
    "ErrCannotGetPackageLinkRef": "Failed to get the object reference to the package link with %s name",
    "ErrCannotGetPackageRef": "Failed to get the object reference to the package with %s name",
    "ErrCannotSaveEncryptedPackage": "Failed to save encrypted package with %s name",
    "ErrCannotSaveReadOnlyPackage": "Failed to save %s read-only package",
    "ErrCircularPackageLink": "\"%s\" package contains circular reference to itself",
    "ErrComparePackagesError": "Error occurred while comparing \"%s\" package file with edited copy in the memory",
    "ErrDeductorServerSessionNotInitialized": "Loginom server session not initialized",
    "ErrDuplicatePublishedNodeName": "The package contains more than one published node with \"%s\" name",
    "ErrEncryptedPackage": "Encrypted package \"%s\" cannot be opened to be viewed and edited",
    "ErrFailedLoginTimeout": "Maximum number of account login attempts was exceeded",
    "ErrFailedToRestorePackage": "Failed to restore %s package",
    "ErrFileAlreadyEditing": "Failed to save package in \"%s\" file. This file has already been used by another process",
    "ErrFileNameNotSpecified": "No file name specified",
    "ErrInvalidModelLockCookieOwner": "Invalid node lock Cookie owner specified",
    "ErrInvalidPath": "Invalid file path: \"%s\"",
    "ErrLocaleNotSupported": "\"%s\" locale is not supported by the system",
    "ErrModelNodeNotFound": "Node %s not found",
    "ErrMustRestoreReferencedPackage": "Failed to restore dependent package %s without restoring %s package to which it refers",
    "ErrNoPublishedNodes": "The package contains no published nodes",
    "ErrPackageAlreadyEditing": "Package with %s name has already been used by another process and it cannot be opened for editing",
    "ErrPackageBackupReferencesAlreadyRevived": "References to other packages have already been restored for backup of %s package",
    "ErrPackageDoesNotBelongToCurrentSession": "%s package does not belong to the current session",
    "ErrPackageRestoreErrors": "Errors occurred while restoring %s package",
    "ErrPublishedModelNodeMetadataNotFound": "Failed to find metadata for published \"%s\" node",
    "ErrPublishedModelNodeNotFound": "Failed to find published node with %s identifier",
    "ErrPublishedNodeNameIsEmpty": "No name for published node with \"%s\" caption specified",
    "ErrPublishedPackageNotFound": "Failed to find the published package with %s name and %s version",
    "ErrSaveAsAlreadyOpenedPackage": "Failed to save package in \"%s\" file. The package with such file has already been opened in the current session",
    "ErrSavePackagePermissionDenied": "No appropriate rights to save package with %s name",
    "ErrSessionAlreadyContainsPackage": "%s package already open in the current session",
    "ErrSessionBackupAlreadyDeleted": "This session backup has already been deleted by another client from the current account",
    "ErrSessionBackupAlreadyRestored": "This session backup has already been restored by another client from the current account",
    "ErrSessionBackupModified": "This session backup has already been changed by another client from the current account",
    "ErrUpdatePublishedPackageErrors": "Errors occurred while updating %s package publishing",
    "FileName": "File name",
    "LeftMaintenanceMode": "Server left maintenance mode",
    "LicSessionCountExceeded": "Count of sessions allowed according to your license exceeded",
    "LogFailedLogin": "Failed to log into %s account",
    "LogFailedToken": "Failed to log into account",
    "LogFailedTokenVariables": "Error preparing variables from OpenID token",
    "LogLDAPCaption": "LDAP",
    "LogLoggingCaption": "Logging",
    "LogMaintenanceStateUnchanged": "Maintenance mode status unchanged",
    "LogOpenIDCaption": "OpenID",
    "LogSettingsChanged": "Server parameter \"%s\" changed",
    "LogSettingsComponentChanged": "Server component parameter %s:\"%s\" changed",
    "LogTokenClaimNone": "Token has no claim %s",
    "LogTokenClaimTypeErr": "Value of claim %s is in the wrong format",
    "Namespace": "Namespace",
    "PackageClosedLogMsg": "\"%s\" package closed",
    "PackageOpenedEditLogMsg": "\"%s\" package opened in the edit mode",
    "PackageOpenedReadLogMsg": "\"%s\" package opened in the read-only mode",
    "PackageSavedLogMsg": "\"%s\" package saved",
    "ProcessCaptionFormat": "%s. %s",
    "PublishedPackageAdded": "Package \"%s\" published",
    "PublishedPackageRemoved": "Package \"%s\" unpublished",
    "PublishedPackagesAutoUpdate": "Publication of packages updated automatically",
    "PublishedPackageUpdated": "Published package \"%s\" updated",
    "ServerIsInMaintenance": "The server is in maintenance mode",
    "ServerStartLogMsg": "%s started",
    "SessionBatch": "Batch processing",
    "SessionCloseLogMsg": "Closed session for %s user",
    "SessionInitializedLogMsg": "Initialized session for %s user",
    "SessionIntegrator": "Request from integrator",
    "SessionInteractive": "Interactive session",
    "UnsavedPackageClosedLogMsg": "Package draft closed",
    "UnsavedPackageCreatedLogMsg": "Package draft created",
    "WarnClosePackageFailed": "Failed to close %s package from Session Manager. Probably, the session has already been closed",
    "WarnCloseSessionFailed": "Failed to close session from Session Manager. Probably, it has already been closed",
    "WarnSessionStopTimeout": "Failed to terminate %s user session for %d milliseconds. Number of processes not completed: %d. List of active subprocesses: %s. List of not started subprocesses: %s.",
    "WarnStopPackageProcessesFailed": "Failed to stop the active processes in %s package, perhaps, the session has already been closed",
    "WarnStopSessionProcessesFailed": "Failed to stop execution of the active session processes, perhaps, the session has already been closed"
  },
  "Studio/DeductorServerConnector": {
    "ErrCannotConfigureActiveConnection": "Cannot change active connection settings"
  },
  "Studio/DeductorServerSettings": {
    "FailedLoginCountLimit": "Password entry attempts limit",
    "FailedLoginTimeout": "Password entry timeout",
    "IdleDisconnectTimeout": "Session disconnection timeout",
    "IdleLockTimeout": "Session lock timeout",
    "Maintenance": "!НЕ ПЕРЕВОДИТЬ",
    "MaintenanceMessage": "!НЕ ПЕРЕВОДИТЬ",
    "MaxSchedulerHistoryDays": "Store scheduler history (days)",
    "PackagePoolSize": "Package pool size",
    "PublishedPackagesUpdatePeriod": "Web services change check period",
    "RAMLimitKB": "Memory limit (KB)",
    "RAMLimitRatio": "Memory usage ratio",
    "SessionBackupDirectory": "Session backups",
    "StopTimeout": "Server stop timeout",
    "ThreadPoolSize": "Thread pool size",
    "TraceExceptions": "Trace exceptions",
    "UserStorageDirectory": "Users data"
  },
  "Studio/DeductorSessionsManager": {
    "ErrCloseSessionRestriction": "%s session closing forbidden",
    "ErrNodeNotPackageInfo": "The passed object is not a package node in Session Manager",
    "ErrNodeNotSessionInfo": "The passed object is not a session node in Session Manager",
    "ErrPackageNotFound": "No %s package found in %s session. It may have already been closed",
    "ErrPackageSessionNotFound": "No session with %s package found. It may have already been closed",
    "ErrSessionNotFound": "No %s session found. It may have already been closed",
    "LogManagedPackageClosed": "%s package closed from Session Manager",
    "LogManagedPackageStopped": "%s package stopped from Session Manager",
    "LogManagedSessionClosed": "%s session closed from Session Manager",
    "LogManagedSessionStopped": "%s session stopped from Session Manager",
    "LogSendMessageToAllUsers": "Message sent to all active users",
    "LogSendMessageToUser": "Message sent to the user",
    "NotResolvedIP": "Not available",
    "PackagePoolNodeName": "Pool of packages",
    "SharedPackagesNodeName": "Shared packages"
  },
  "Studio/DeductorUsers": {
    "AllowedApplicationModes": "Allowed application modes",
    "AllowPublish": "Allow packages publishing",
    "Blocked": "Blocked",
    "ErrAccessDenied": "Access denied",
    "ErrApplicationModeNotAllowed": "Connection in \"%s\" mode not allowed",
    "ErrCannotDeleteStandartUserGroup": "Failed to delete the standard group",
    "ErrFileStorageNotReadyYet": "User file storage is still being prepared",
    "ErrGetFullName": "Failed to get the full name of %s user",
    "ErrInvalidPasswordHashInConfig": "Configuration file contains invalid password hash",
    "ErrInvalidUserNameOrPassword": "Invalid username or password",
    "ErrLastAdminChangeDenied": "Failed to delete or change the single %s admin account with local authentication",
    "ErrLDAPAuthentifyDisabled": "LDAP authentication not supported",
    "ErrLDAPUserNotFound": "%s user not found in the directory service",
    "ErrLeadingOrTrailingWhitespaceInPassword": "Password must not begin or end with a space",
    "ErrLoginNameChanged": "Username change not allowed",
    "ErrNoUsersWithAdminPrivileges": "There are no users with admin privileges",
    "ErrOpenIDUserNotFound": "User not found",
    "ErrTokenUserName": "Token has no username",
    "ErrUserAlreadyDeleted": "User already deleted",
    "ErrUserHasActiveSessions": "%s user has active sessions",
    "ErrUserNameConflictsWithSharedDirectory": "Username conflicts with %s shared directory name",
    "ErrUserNameIsReserved": "%s identifier has already been reserved and it cannot be used as a username",
    "ErrUserNameMustBeValid": "Username can consist of Latin letters, digits, _ - . characters and space,\nbut it cannot end with a dot or space.",
    "GroupEveryone": "All",
    "IsAdmin": "Admin",
    "IsDesigner": "Workflows design",
    "IsViewer": "View reports",
    "LogAddGroup": "%s group added",
    "LogAddUser": "%s user added",
    "LogDeleteGroup": "%s group deleted",
    "LogDeleteUser": "%s user deleted",
    "LogUserPropertySet": "%s account change",
    "ReservedUserName": "loginom",
    "SchedulerFullAccess": "Access to all scheduler jobs",
    "UseGlobalFileStorage": "Use global file storage",
    "UserMetaDesc": "User"
  },
  "Studio/RegistrationEditionDependentComponents": {
    "1Cv8Connection": "1C:Enterprise 8 connector",
    "1Cv8QueryImport": "1C Query",
    "AccessODBCUniDACDatabase": "MS Access connector",
    "DataToXMLEngine": "XML Generation",
    "ErrComponentNotAvailable": "\"%s\" component is unavailable in the current Loginom version",
    "ExcelODBCUniDACDatabase": "MS Excel connector",
    "ExecCmdEngine": "Program Execution",
    "ExportTableau": "Export to Tableau file",
    "ExtractXMLEngine": "XML parsing",
    "KafkaConnection": "Kafka connector",
    "KafkaExport": "Export to Kafka",
    "KafkaImport": "Import from Kafka",
    "MSSQLDDWConnection": "Deductor Warehouse [MS SQL] connector",
    "OraDDWConnection": "Deductor Warehouse [Oracle] connector",
    "TableauRestConnection": "Tableau server connector",
    "WSDLClient": "SOAP Request",
    "WSDLClientConnection": "SOAP service connector"
  },
  "Studio/Scheduler": {
    "ErrCannotStartDisabledJob": "Execution of job \"%s\" forbidden",
    "ErrHistoryCountMustNotBeNegative": "Count of history records must not be negative",
    "ErrInvalidExceptionInfoFormat": "Incorrect format of exception information",
    "ErrPeriodCountMustBePositive": "Repeat period count must be positive",
    "ErrSchedulerInitException": "An exception occurred when initalizing job scheduler",
    "ErrSchedulerJobAlreadyDeleted": "Job has already been deleted",
    "ErrSchedulerJobIsNotConfiguring": "Job is not being configured",
    "ErrSchedulerNotInitialized": "Job scheduler initialization failed",
    "ErrSchedulerThreadException": "An exception occurred in the main thread of the job scheduler",
    "LogAddJob": "Job \"%s\" belonging to user %s created in the scheduler",
    "LogClearJobs": "All jobs deleted from the scheduler",
    "LogClearJobsOfUser": "All jobs belonging to user %s deleted from the scheduler",
    "LogCloneJob": "Job \"%s\" belonging to user %s cloned in the scheduler",
    "LogDeleteJob": "Job \"%s\" belonging to user %s deleted from the scheduler",
    "LogEditJob": "Job \"%s\" belonging to user %s edited in the scheduler",
    "LogForceEditJob": "When editing job \"%s\" belonging to user %s, changes made in other session were forcedly overwritten",
    "LogJobCanceled": "Job \"%s\" cancelled",
    "LogJobError": "Job \"%s\" failed",
    "LogJobSuccess": "Job \"%s\" successfully completed",
    "LogStartJob": "Starting job \"%s\"",
    "LogStartJobSkipped": "Job \"%s\" start failed. Reason: %s.",
    "LogStartJobSkippedMaintenanceState": "the server is in maintenance mode",
    "LogStartJobSkippedOverlappedExecution": "the job is already being executed",
    "SchedulerJobMetaDesc": "Job",
    "SchedulerJobVariableMetaDesc": "Variable"
  },
  "Studio/SharedDirectories": {
    "ErrSharedDirectoryAlreadyDeleted": "Shared directory already deleted",
    "ErrSharedDirectoryNameConflictsWithUser": "Username conflicts with %s shared directory name",
    "ErrSharedDirectoryNameIsReserved": "%s identifier has already been reserved and it cannot be used as a shared directory name",
    "ErrSharedDirectoryNameMustBeValid": "Shared directory name can consist of Latin letters, digits, _ - . characters and space,\nbut it cannot end with a dot or space.",
    "LogAddDirectory": "%s shared directory created",
    "LogDeleteDirectory": "%s shared directory deleted",
    "LogGroupPermissionsGranted": "Access permissions for shared directory %s granted",
    "LogGroupPermissionsRevoked": "Access permissions for shared directory %s revoked",
    "LogNotFindDirectory": "No permissions can be granted for missing shared directory %s",
    "SharedDirectoryMetaDesc": "Shared directory"
  },
  "Studio/SocketDeductorServerSettings": {
    "Bind": "IP address",
    "PingPeriod": "Client connection check period",
    "Port": "TCP port",
    "SSLCertificateFile": "Certificate file name",
    "SSLPrivateKeyFile": "Private key file name",
    "UnixSocket": "Unix socket",
    "UnixSocketFileName": "loginomd",
    "WSPort": "WebSocket port",
    "WSSPort": "WebSocket SSL\/TLS port"
  },
  "Viewers/Browse/BrowseView": {
    "ErrExportBusy": "Failed to export table in the process of data modification",
    "ErrExportDataInvalid": "Failed to export table with unprepared data",
    "ErrExportDeactivate": "Export deactivated due to node deactivation",
    "LogColumnNotFoundFmt": "No %s field found in the input data set. The field has been deleted from the displayed fields.",
    "LogNewColumnFmt": "New %s field appeared in the input data set. The field has been added to the displayed fields.",
    "NullText": "",
    "PrepareViewData": "Table"
  },
  "Viewers/Browse/BrowseViewExport": {
    "DisplayNameColumnDisplayName": "Caption",
    "Form": "Form",
    "NameColumnDisplayName": "Name",
    "NullValue": "<null>",
    "RecNoColumnDisplayName": "No",
    "RecNoColumnName": "RecNo",
    "RowNoColumnDisplayName": "#",
    "RowNoColumnName": "RowNo",
    "Table": "Table",
    "ValueColumnDislpayName": "Value"
  },
  "Viewers/Browse/BrowseViewFilterEngine": {
    "FilterDataNotify": "Data filtering"
  },
  "Viewers/Browse/BrowseViewSortingEngine": {
    "SortingNotify": "Data sorting"
  },
  "Viewers/Browse/BrowseViewVendor": {
    "VendorCaption": "Table",
    "VendorDesc": "Table data view"
  },
  "Viewers/Chart/ChartColumnInfo": {
    "ChartExtremesProgress": "Search for extremes",
    "ChartSortingProgress": "Data sorting",
    "ChartTotalsProgress": "Series sum calculation"
  },
  "Viewers/Chart/ChartParametres": {
    "DefaultSerieName": "Series",
    "ErrAxisNotFound": "No axis with this position found",
    "ErrAxisPositionNotTrue": "Invalid axis position",
    "ErrLinkedColumnDataType": "Invalid data type"
  },
  "Viewers/Chart/ChartViewCacheServer": {
    "DataSourceIsInActive": "Data source is inactive"
  },
  "Viewers/Chart/ChartViewVendor": {
    "VendorCaption": "Chart",
    "VendorDesc": "Chart data view"
  },
  "Viewers/ClusterProfiles/ClusterProfilesView": {
    "Component": "Component",
    "DetailingProcessCaption": "Cluster profiles. Prepare %s from clusters %s",
    "ErrNotDefinedComponent": "Undefined Clustering component",
    "ErrTableRowState": "Invalid change of the data field synchronization status occurred",
    "HistogramProcess": "Histogram building",
    "ImportanceProcess": "Importance calculation",
    "ResidueClusterName": "Other",
    "SimpleStatisticsProcess": "Simple statistics calculation",
    "TotalClusterName": "Total"
  },
  "Viewers/ClusterProfiles/ClusterProfilesViewVendor": {
    "VendorCaption": "Cluster Profiles",
    "VendorDesc": "Cluster profiles"
  },
  "Viewers/ClusterProfiles/ViewHistogram": {
    "From": "from ",
    "ResidueValue": "Other",
    "To": "to "
  },
  "Viewers/ClusterProfiles/ViewStatistics": {
    "DaysPostfix": "days",
    "InfinityValue": "INF",
    "NegInfinityValue": "-INF"
  },
  "Viewers/CoarseClasses/CoarseClassesView": {
    "Component": "Component",
    "ErrNotDefinedComponent": "Undefined component"
  },
  "Viewers/CoarseClasses/CoarseClassesViewVendor": {
    "VendorCaption": "Coarse Classes",
    "VendorDesc": "\"Coarse classes\" visualizer"
  },
  "Viewers/Cube/CubeCalcSummaries": {
    "ErrCalculationExpression": "Error occurred while calculating the expression corresponding to calculated measure \"%s\"",
    "ErrExprResultIsString": "The expression result is of string type",
    "ErrParseExpression": "Error occurred while parsing the expression corresponding to calculated measure \"%s\"",
    "ErrRecursiveCall": "Circular dependence between calculated measures detected: %s"
  },
  "Viewers/Cube/CubeChart": {
    "ErrAlreadyExists": "The measure with display index %d is already present in the cube chart",
    "ErrDataType": "Failed to use the measure display of nonnumeric data type in the cube chart",
    "ErrHeadersNotCached": "Failed to query data before requesting headers names",
    "ErrNotExists": "The measure with display index %d is not present in the cube chart",
    "MaxDotsCountDesc": "Maximum dots count",
    "MaxSeriesCountDesc": "Maximum series count"
  },
  "Viewers/Cube/CubeDimensions": {
    "ErrClipboardAdapterOpened": "It is forbidden to start the clipboard operation until the current operation is finished.",
    "MsgMissingDimensionInColumn": "\"%s\" field matching the dimension in \"%s\" column not found in the data set.",
    "MsgMissingDimensionInRow": "\"%s\" field matching the dimension in \"%s\" row not found in the data set.",
    "MsgNoValues": "No values"
  },
  "Viewers/Cube/CubeEngineMatrix": {
    "ErrTooManyCells": "Too many cells requested",
    "ErrTooManyDimensions": "Too many dimensions selected"
  },
  "Viewers/Cube/CubeExport": {
    "DummyHeader": "Value",
    "HTMLTitle": "Cross Table"
  },
  "Viewers/Cube/CubeFilter": {
    "ErrBadRelation": "Relation not supported by aggregation"
  },
  "Viewers/Cube/CubeHeaders": {
    "CubeDummyValue": "Value",
    "CubeTotalValue": "Total:",
    "ErrTooManyDimensions": "Too many dimensions selected"
  },
  "Viewers/Cube/CubeSource": {
    "LoadNotify": "Input data preparing"
  },
  "Viewers/Cube/CubeSummaries": {
    "CountCaseDisplayName": "Count",
    "DefExprDisplayName": "Expression",
    "ErrCaseClassNotDynamic": "Measure is not calculated",
    "ErrCaseFuncNotExist": "No \"%1:s\" aggregation for \"%0:s\" measure",
    "ErrCaseSubFuncNotExist": "\"%s\" measure with \"%s\" aggregation does not have \"%s\" display mode",
    "ErrIIDNotRegistered": "\"%s\" identifier not registered",
    "MsgMissingCase": "\"%s\" field matching \"%s\" measure not found in the data set."
  },
  "Viewers/Cube/CubeView": {
    "CubeViewProcess": "Cube",
    "DetailingProcessCaption": "Cube. Prepare %s from the [%d, %d] cell data",
    "ErrAllChartsCreated": "Impossible to create more than 3 charts in Cube",
    "ErrAlreadyExporting": "Failed to export a crosstab until the current export is finished",
    "ErrExportCubeClosed": "Failed to export a crosstab when the Cube is inactive",
    "ErrExportDeactivate": "Export deactivated due to node deactivation",
    "ErrPhantomCaseBracketsOpened": "Failed to create a temporary measure because another temporary measure exists",
    "ErrSortCountExceeded": "Count of sorted columns cannot exceed %d",
    "IncLoadMatrixNotify": "Increment measure calculating",
    "LoadMatrixNotify": "Measure calculating",
    "WarnChartOverflow": "Upon configuration loading %d charts were ignored due to the limitation: %d charts maximum"
  },
  "Viewers/Cube/CubeViewVendor": {
    "VendorCaption": "Cube",
    "VendorDesc": "Multidimensional data view (Cross Table and Cross Chart)"
  },
  "Viewers/DataQuality/QualityView": {
    "DataSetQualityCalculation": "Data set quality indicators calculating",
    "ErrAlreadyExporting": "Failed to export tables until the current export is finished",
    "ErrExportQualityClosed": "Failed to export tables when indicators are not calculated",
    "HistogramsCalculation": "Calculating histograms of data fields",
    "LogColumnNotFoundFmt": "No %s field found in the input data set. The field has been deleted from the displayed fields.",
    "LogNewColumnFmt": "New %s field appeared in the input data set. The field has been added to the displayed fields.",
    "MoreStatisticsCalculation": "Additional statistics calculation",
    "PrepareViewData": "Statistics",
    "QualityStatisticsCalculation": "Data fields quality indicators calculating",
    "SimpleStatisticsCalculation": "Simple statistics calculation"
  },
  "Viewers/DataQuality/QualityViewBuilder": {
    "UsefulColumns": "%s from %s"
  },
  "Viewers/DataQuality/QualityViewCalculation": {
    "ErrRequiredColumnNotFound": "No columns with the specified indexes in the input data source"
  },
  "Viewers/DataQuality/QualityViewDetailing": {
    "DetailingProcessCaption": "Data quality. Prepare %s from the [%d, %d] cell data"
  },
  "Viewers/DataQuality/QualityViewExport": {
    "HTMLContinueStatsTitle": "Data Quality (Continuous Fields)",
    "HTMLDiscreteStatsTitle": "Data Quality (Discrete Fields)",
    "HTMLOverviewTitle": "Data Quality (Summary)",
    "NotAvailable": "Not available",
    "NotCalculated": "Not calculated"
  },
  "Viewers/DataQuality/QualityViewHistogram": {
    "ResidueValue": "Other"
  },
  "Viewers/DataQuality/QualityViewVendor": {
    "VendorCaption": "Data Quality",
    "VendorDesc": "Data quality indicators view"
  },
  "Viewers/DataTree/DataTreeView": {
    "ErrNotDefinedInputDataTree": "No input data tree defined",
    "InputDataTree": "Data tree"
  },
  "Viewers/DataTree/DataTreeViewVendor": {
    "VendorCaption": "Data Tree",
    "VendorDesc": "Tree data view"
  },
  "Viewers/Detailing/Detailing": {
    "ErrDetailingViewDataSource": "Failed to prepare the data source for \"%s\" detailing",
    "ErrDetailingViewExecution": "Error of \"%s\" detailing execution",
    "ErrDetailingViewInitialization": "Detailing initialization error \"%s\"",
    "ErrScopeMissing": "Failed to get the owner context during \"%s\" detailing initialization",
    "GenericDetailingProcessCaption": "\"%s\" detailing",
    "ManagerBrowse": "Table",
    "ManagerStatistics": "Statistics",
    "MsgEmbeddedViewLoadFailed": "Failed to load \"%s\" detailing configuration",
    "UpdateDataProcessCaption": "Data preparing"
  },
  "Viewers/Duplicates/DuplicatesView": {
    "Component": "Component",
    "ErrNotDefinedComponent": "Undefined Duplicates Detection component"
  },
  "Viewers/Duplicates/DuplicatesViewVendor": {
    "VendorCaption": "Duplicates and Contradictions",
    "VendorDesc": "Show duplicates and contradictions in table"
  },
  "Viewers/LinRegressReport/LinRegressReport": {
    "Component": "Component",
    "ConstFactor": "<Intercept>",
    "ErrNotDefinedComponent": "Undefined component",
    "FinalModel": "Final model",
    "NullModel": "Null model",
    "SelectedModel": "Selected model",
    "SelectedModelPath": "Model name",
    "ShowAsTree": "Tree",
    "ShowModelInfo": "Model info",
    "ShowModelSteps": "Model steps",
    "ShowZeroValues": "Zero values",
    "SortDirection": "Sort direction",
    "SortOrder": "Sort order",
    "StatParam": "Quality criterion"
  },
  "Viewers/LinRegressReport/LinRegressReportViewVendor": {
    "VendorCaption": "Regression Report",
    "VendorDesc": "Analysis of linear regression model"
  },
  "Viewers/LogRegressReport/LogRegressReport": {
    "Component": "Component",
    "ConstFactor": "<Intercept>",
    "ErrNotDefinedComponent": "Undefined component",
    "FinalModel": "Final model",
    "NullModel": "Null model",
    "PValueThreshold": "Significance threshold",
    "SelectedModel": "Selected model",
    "SelectedModelName": "Model name",
    "ShowAsTree": "Tree",
    "ShowModelInfo": "Model info",
    "ShowModelSteps": "Model steps",
    "ShowZeroValues": "Zero values",
    "SortDirection": "Sort direction",
    "SortOrder": "Sort order",
    "StatParam": "Quality criterion"
  },
  "Viewers/LogRegressReport/LogRegressReportViewVendor": {
    "VendorCaption": "Regression Report",
    "VendorDesc": "Analysis of logistic regression model"
  },
  "Viewers/ROC/ROCView": {
    "Component": "Component",
    "ErrNotDefinedComponent": "Undefined component"
  },
  "Viewers/ROC/ROCViewCharts": {
    "AllPrecisionRatesChartTitle": "Precision Chart",
    "AllPrecisionRatesChartXLabel": "Cutoff",
    "AllPrecisionRatesChartYLabel": "PPV, NPV, OPR, OCR",
    "Base": "Baseline",
    "Best": "Best",
    "BreakEvenChartTitle": "Break Even Chart",
    "BreakEvenChartXLabel": "Cutoff",
    "BreakEvenChartYLabel": "TPR, PPV",
    "Cutoff": "Cutoff",
    "ErrSerieCountConfigLoadError": "Incorrect series count in configuration",
    "EventsChartTitle": "% of Captured Response Chart",
    "EventsChartXLabel": "Bin",
    "EventsChartYLabel": "Captured response, %",
    "EventsCumChartTitle": "% of Captured Response Chart (Cumulative)",
    "EventsCumChartXLabel": "Percentile",
    "EventsCumChartYLabel": "Captured response, %",
    "FNR": "FNR (1-Sensitivity)",
    "FPR": "FPR (1-Specificity)",
    "GainChartTitle": "Gain Chart",
    "GainChartXLabel": "Percentile",
    "GainChartYLabel": "Gain",
    "LiftChartTitle": "Lift Chart",
    "LiftChartXLabel": "Bin",
    "LiftChartYLabel": "Lift",
    "LiftCumChartTitle": "Lift Chart (Cumulative)",
    "LiftCumChartXLabel": "Percentile",
    "LiftCumChartYLabel": "Lift",
    "NPV": "NPV (Negative Prediction Value)",
    "OCR": "OCR (Overall Classification Rate)",
    "OPR": "OPR (Overall Precision Rate)",
    "OverallRatesChartXLabel": "Cutoff",
    "OverallRatesChartYLabel": "TPR, TNR, FPR, FNR",
    "OverallRatesTitle": "Basic Rates",
    "PPV": "PPV (Positive Predictive Value)",
    "PrecisionRecallChartTitle": "Precision-Recall Curve",
    "PrecisionRecallChartXLabel": "TPR (Recall)",
    "PrecisionRecallChartYLabel": "PPV (Precision)",
    "ResponseChartTitle": "Response Chart",
    "ResponseChartXLabel": "Bin",
    "ResponseChartYLabel": "Response, %",
    "ResponseCumChartTitle": "Response Chart (Cumulative)",
    "ResponseCumChartXLabel": "Percentile",
    "ResponseCumChartYLabel": "% events",
    "ROCChartTitle": "ROC Curve",
    "ROCChartXLabel": "FPR (1-specificity)",
    "ROCChartYLabel": "TPR (sensitivity)",
    "TeachDataSource": "Training set",
    "TestDataSource": "Test set",
    "TNR": "TNR (specificity)",
    "TPR": "TPR (sensitivity)"
  },
  "Viewers/ROC/ROCViewVendor": {
    "VendorCaption": "Binary Classification Assessment",
    "VendorDesc": "Binary classification assessment"
  },
  "Viewers/Statistics/StatView": {
    "HistogramBuild": "Build histogram",
    "LogColumnNotFoundFmt": "No %s field found in the input data set. The field has been deleted from the displayed fields.",
    "LogNewColumnFmt": "New %s field appeared in the input data set. The field has been added to the displayed fields.",
    "OrderStatisticsCalculation": "Ordinal statistics calculation",
    "PrepareViewData": "Statistics",
    "SimpleStatisticsCalculation": "Simple statistics calculation",
    "UniqueValuesCalculation": "Unique values calculation"
  },
  "Viewers/Statistics/StatViewBuilder": {
    "ErrNonContinuousDataKind": "The input column must have continuous data kind",
    "ErrRequiredColumnNotFound": "No column with the specified number in the input data source"
  },
  "Viewers/Statistics/StatViewCalculation": {
    "ErrInvalidHistBounds": "Invalid histogram interval bounds set",
    "ErrRequiredColumnNotFound": "No columns with the specified indexes in the input data source",
    "ErrRequiredSimpleStats": "Simple statistics need to be calculated"
  },
  "Viewers/Statistics/StatViewHistogram": {
    "DefaultSeparator": ": ",
    "From": "from ",
    "LeftCloseBracket": "[",
    "LeftOpenBracket": "(",
    "RightCloseBracket": "]",
    "RightOpenBracket": ")",
    "To": "to "
  },
  "Viewers/Statistics/StatViewUniqueValues": {
    "ErrRequiredColumnNotFound": "No columns with the specified indexes in the input data source"
  },
  "Viewers/Statistics/StatViewValuesRange": {
    "OwnerIsDisposed": "The main collection of histogram values has been disposed"
  },
  "Viewers/Statistics/StatViewVendor": {
    "VendorCaption": "Statistics",
    "VendorDesc": "Show statistical indicators"
  },
  "Warehouse2/DataWarehouseConnection": {
    "ErrTestConnection": "Connection test error:\n%s"
  },
  "Warehouse2/DBMDEngine": {
    "ErrDimensionFKIsNull": "Reference to \"%s\" dimension not found.\nThe foreign key value not specified.",
    "ErrDimensionFKNotFound": "Reference to \"%s\" dimension not found.\nThe dimension with primary key \"%s\" was not found in the dimension list.",
    "ErrExecSQL": "Error executing query to DB.",
    "ErrNotFoundVersionInfo": "Failed to read version information about Deductor Warehouse version.",
    "ErrProcessFKIsNull": "Reference to \"%s\" process not found.\nThe foreign key value not specified.",
    "ErrProcessFKNotFound": "Reference to \"%s\" process not found.\nThe process with primary key \"%s\" was not found in the process list.",
    "ErrSetMDItem": "Error reading metadata from DB.\nFor object with ID=%s, Name=\"%s\"."
  },
  "Warehouse2/Deductor/DDWConnectionVendor": {
    "DWConnectionVendorCaption": "Deductor Warehouse",
    "DWConnectionVendorDesc": "Connector to the Deductor Data Warehouse"
  },
  "Warehouse2/Deductor/DDWEngine": {
    "ErrDimensionValueIsNull": "Value of \"%1:s\" [%2:s] dimension in \"%0:d\" row is null.",
    "ErrDimensionValueNotFound": "\"%s\" value was not found in \"%s\" [%s] dimension values.",
    "ErrEmptyData": "Error occurred while data cleansing of \"%s\" [%s] object.",
    "ErrLoadDataDimension": "Error occurred while loading data into \"%s\" [%s] dimension.",
    "ErrLoadDataProcess": "Error occurred while loading data to \"%s\" [%s] process.",
    "ErrLoadDataProcessCanceled": "The process of data loading into \"%s\" [%s] process has been cancelled by a user. Data is not loaded into DW. Indexes and constraints are not restored.",
    "MsgDeleteDataProcess": "Delete the Process from the Data Warehouse by data dimension",
    "MsgDisableConstraint": "Disable indexes and constraints.",
    "MsgEnableConstraint": "Restore indexes and constraints.",
    "MsgGroupDataProcess": "Grouping of the Process data before loading into the Data Warehouse",
    "MsgGroupDeleteDim": "Preparing to delete. Data grouping by dimension.",
    "MsgLoadDataDimension": "Loading the Dimension data into the Data Warehouse",
    "MsgLoadDataProcess": "Loading the Process data into the Data Warehouse",
    "MsgRecordSkipDimValueIsNull": "Data of \"%d\" row was not added to DW. \"%s\" [%s] dimension value is null.",
    "MsgStatisticsGathering": "Collect statistics"
  },
  "Warehouse2/Deductor/DDWExportVendor": {
    "VendorCaption": "Deductor Warehouse",
    "VendorDesc": "Loading data into the Deductor Data Warehouse"
  },
  "Warehouse2/Deductor/DDWImportVendor": {
    "VendorCaption": "Deductor Warehouse",
    "VendorDesc": "Extract data from a Deductor Data Warehouse"
  },
  "Warehouse2/Deductor/Ver6/DW6Engine": {
    "ErrDataNotLoad": "Data is not loaded to DW.\nPossible reasons:\nFirebird - spaces at the end of string dimensions;\nMS SQL - case-insensitive letters of string dimensions.\nIf data deletion is set by dimension, this data has been deleted from DW.\nError occurred while restoring constraints and indexes",
    "ErrRebuildCube": "Error occurred while \"%s\" [%s] Cube updating.",
    "MsgMoreLengthName": "Name of \"%s\" field is too long.\nErrors may occur when executing SQL queries to DW.",
    "MsgMoreLengthPrefix": "Too long value of \"%s\" prefix.\nErrors may occur when executing SQL queries to DW.",
    "MsgRebuildCube": "Update the Cubes in the Data Warehouse",
    "MsgReservedName": "\"%s\" field name coincides with the reserved words.\nErrors may occur when executing SQL queries to DW."
  },
  "Warehouse2/Deductor/Ver6/FBDDWConnectionVendor": {
    "DWConnectionVendorCaption": "Deductor Warehouse [Firebird]",
    "DWConnectionVendorDesc": "Connector to the Deductor Data Warehouse on Firebird DBMS"
  },
  "Warehouse2/Deductor/Ver6/MSSQLDDWConnectionVendor": {
    "DWConnectionVendorCaption": "Deductor Warehouse [MS SQL]",
    "DWConnectionVendorDesc": "Connector to the Deductor Data Warehouse on MS SQL DBMS"
  },
  "Warehouse2/Deductor/Ver6/OraDDWConnectionVendor": {
    "DWConnectionVendorCaption": "Deductor Warehouse [Oracle]",
    "DWConnectionVendorDesc": "Connector to the Deductor Data Warehouse on Oracle DBMS"
  },
  "Warehouse2/DWConnectionVendor": {
    "DWConnectionVendorCaption": "Data Warehouse",
    "DWConnectionVendorDesc": "Connector to Data Warehouse"
  },
  "Warehouse2/DWDataEngine": {
    "ErrDimNotSourceName": "No field from the data source specified for \"%s\" dimension.",
    "ErrDimSourceNameNotFound": "\"%s\" field specified for \"%s\" dimension not found in the data source.",
    "ErrSourceNameNotFound": "\"%s\" field specified for \"%s\" not found in the data source."
  },
  "Warehouse2/DWExport": {
    "ErrDimNotSourceName": "No field from the data source specified for \"%s\" dimension.",
    "ErrNotConnectedToDatabase": "Not connected to Data Warehouse",
    "ErrObjectDWNotSpecified": "Data Warehouse object not specified"
  },
  "Warehouse2/DWExtract": {
    "ErrDWObjectNameNotFound": "No data warehouse object with \"%s\" name found."
  },
  "Warehouse2/DWExtractTree": {
    "ErrNeedSelectItem": "Select at least one item",
    "ErrParams": "Error found in \"%s\" (%s) object parameters"
  },
  "Warehouse2/DWImport": {
    "ErrExecQuery": "Error executing query to Data Warehouse",
    "ErrNotConnectedToDatabase": "Not connected to Data Warehouse",
    "ErrNotConnectedToMeataDataNode": "Imported \"%s\" (%s) field is not connected with the Data Warehouse object",
    "ErrObjectDWNotSpecified": "Data Warehouse object not specified",
    "ExecQueryProcess": "Executing query to Data Warehouse",
    "ImportDataProcess": "Data importing from Data Warehouse"
  },
  "Warehouse2/DWLoad": {
    "ErrDWObjectNameNotFound": "No data warehouse object with \"%s\" name found."
  },
  "Warehouse2/MDChoiceTree": {
    "ErrDWObjectNotFound": "No data warehouse object with \"%s\" (%s) name found",
    "ErrNodeNotBelongToTree": "\"%s\" metadata node does not belong to the metadata tree"
  },
  "Warehouse2/MDFilterParams": {
    "ErrCustomPointDate": "Data value cannot be empty",
    "ErrFilterTypeIncorrect": "\"%s\" filter type incompatible",
    "ErrListEmpty": "List cannot be empty",
    "ErrSkipIntervalCount": "Number of missed periods cannot be less than 1",
    "ErrStringEmpty": "Value cannot be empty",
    "ErrUseIntervalCount": "Number of periods cannot be less than 1"
  },
  "Warehouse2/MDTree": {
    "ErrColumnCantBeContinuous": "\"%s\" object of \"%s\" type cannot be continuous",
    "ErrMismatchVersionInfo": "Deductor Warehouse versions do not match.\n  Component: \"%s\"\n  BD DW: \"%s\"",
    "ErrNodeTypeExist": "Subnode of the specified \"%s\" type already exists"
  }
}